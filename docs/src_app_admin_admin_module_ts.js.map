{"version":3,"file":"src_app_admin_admin_module_ts.js","mappings":"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;;;;;;;;;;;;;;;;;;AChB9B;AACH;AACG;AACI;AACxC,kCAAkC,mDAAK;AAC9C,0BAA0B,oDAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mDAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kEAAuB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sEAA2B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjF2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mDAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpBO;AACP;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;;AACA,MAAMgD,eAAN,CAAsB;AAClBC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,IAAL,GAAY,QAAZ;AACA;;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA;;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACA;;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA;;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA;;AACA,SAAKC,KAAL,GAAa,EAAb;AACA;;AACA,SAAKC,MAAL,GAAc,EAAd;AACA;;AACA,SAAKC,QAAL,GAAgB,MAAhB;AACA;;AACA,SAAKC,IAAL,GA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","sources":["./src/app/admin/admin-routing.module.ts","./src/app/admin/admin.module.ts","./src/app/admin/child-routes.ts","./src/app/admin/layout/layout.component.ts","./src/app/admin/layout/layout.component.html","./src/app/admin/layout/side-nav/side-nav.component.ts","./src/app/admin/layout/side-nav/side-nav.component.html","./src/app/admin/layout/top-nav/top-nav.component.ts","./src/app/admin/layout/top-nav/top-nav.component.html","./node_modules/rxjs/_esm2015/internal/operators/delay.js","./node_modules/rxjs/_esm2015/internal/operators/mapTo.js","./node_modules/rxjs/_esm2015/internal/util/isDate.js","./node_modules/@angular/material/fesm2015/dialog.mjs","./node_modules/@angular/material/fesm2015/divider.mjs","./node_modules/@angular/material/fesm2015/icon.mjs","./node_modules/@angular/material/fesm2015/list.mjs","./node_modules/@angular/material/fesm2015/menu.mjs","./node_modules/@angular/material/fesm2015/sidenav.mjs","./node_modules/@angular/material/fesm2015/toolbar.mjs"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LayoutComponent } from './layout/layout.component';\nimport { childRoutes } from './child-routes';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'dashboard'\n      },\n      ...childRoutes\n    ]\n  }\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { LayoutComponent } from './layout/layout.component';\nimport { TopNavComponent } from './layout/top-nav/top-nav.component';\nimport { SideNavComponent } from './layout/side-nav/side-nav.component';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatListModule,\n    MatDialogModule\n  ],\n  declarations: [LayoutComponent, TopNavComponent, SideNavComponent]\n})\nexport class AdminModule {}\n","export const childRoutes = [\n  {\n    path: 'dashboard',\n    loadChildren: () =>\n      import('./dashboard/dashboard.module').then(m => m.DashboardModule),\n    data: { icon: 'dashboard', text: 'Dashboard' }\n  },\n  {\n    path: 'category',\n    loadChildren: () =>\n      import('./category/category.module').then(m => m.CategoryModule),\n    data: { icon: 'category', text: 'Category' }\n  },\n  {\n    path: 'Setting',\n    loadChildren: () =>\n      import('./category/category.module').then(m => m.CategoryModule),\n    data: { icon: 'settings', text: 'Setting' }\n  },\n  {\n    path: 'profile',\n    loadChildren: () => import('./profile/profile.module').then(m => m.ProfileModule),\n    data: { icon: 'person', text: 'Profile' }\n  },\n  {\n    path: 'charts',\n    loadChildren: () =>\n      import('./charts/charts.module').then(m => m.ChartsModule),\n    data: { icon: 'bar_chart', text: 'Charts' }\n  },\n];\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MediaObserver, MediaChange } from '@angular/flex-layout';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit, OnDestroy {\n  sideNavOpened = true;\n  sideNavMode: 'side' | 'over' = 'side';\n  toolBarHeight = 64;\n  private readonly mediaWatcher: Subscription;\n  constructor(media: MediaObserver) {\n    this.mediaWatcher = media.media$.subscribe((change: MediaChange) => {\n      if (change.mqAlias === 'sm' || change.mqAlias === 'xs') {\n        if (this.sideNavOpened) {\n          this.sideNavOpened = false;\n        }\n        this.sideNavMode = 'over';\n      } else {\n        this.sideNavOpened = true;\n        this.sideNavMode = 'side';\n      }\n      if (change.mqAlias === 'xs') {\n        this.toolBarHeight = 56;\n      } else {\n        this.toolBarHeight = 64;\n      }\n    });\n  }\n  ngOnInit() { }\n\n  ngOnDestroy(): void {\n    this.mediaWatcher.unsubscribe();\n  }\n}\n","<div class=\"layout-container\">\n  <app-top-nav (sideNavToggled)=\"snav.toggle()\"></app-top-nav>\n\n  <mat-sidenav-container class=\"sidenav-container\" [style.marginTop.px]=\"toolBarHeight\">\n    <mat-sidenav #snav class=\"sidenav mat-elevation-z10\" [(mode)]=\"sideNavMode\" [(opened)]=\"sideNavOpened\">\n      <app-side-nav></app-side-nav>\n    </mat-sidenav>\n    <mat-sidenav-content>\n      <main class=\"main-container\">\n        <router-outlet></router-outlet>\n      </main>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { childRoutes } from '../../child-routes';\n\n@Component({\n  selector: 'app-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.scss']\n})\nexport class SideNavComponent implements OnInit {\n  showMenu = false;\n  routes = childRoutes;\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<mat-nav-list>\n  <a\n    *ngFor=\"let item of routes\"\n    mat-list-item\n    [routerLinkActive]=\"'active'\"\n    [routerLink]=\"['/', item.path]\"\n  >\n    <mat-icon class=\"sidenav-icon\">{{ item.data.icon }}</mat-icon>\n    {{ item.data.text }}\n  </a>\n  <a mat-list-item [routerLinkActive]=\"'active'\" [routerLink]=\"['/blank-page']\">\n    <mat-icon class=\"sidenav-icon\">insert_drive_file</mat-icon>Blank Page\n  </a>\n  <div class=\"nested-menu\">\n    <a mat-list-item (click)=\"showMenu = !showMenu\">\n      <mat-icon class=\"sidenav-icon\">add</mat-icon>Menu\n    </a>\n    <ul class=\"nested submenu\" [class.expand]=\"showMenu\">\n      <li>\n        <a href=\"javascript:void(0)\">\n          <span>Submenu</span>\n        </a>\n      </li>\n      <li>\n        <a href=\"javascript:void(0)\">\n          <span>Submenu</span>\n        </a>\n      </li>\n      <li>\n        <a href=\"javascript:void(0)\">\n          <span>Submenu</span>\n        </a>\n      </li>\n    </ul>\n  </div>\n</mat-nav-list>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { TokenStorageService } from 'src/app/Services/token.storage.service';\nimport { AddUserComponent } from '../../user/add-user/add-user.component';\n\n@Component({\n  selector: 'app-top-nav',\n  templateUrl: './top-nav.component.html',\n  styleUrls: ['./top-nav.component.scss']\n})\nexport class TopNavComponent implements OnInit {\n  @Output() sideNavToggled = new EventEmitter<void>();\n  role : string[];\n  isAdminRole : boolean = false;\n\n  constructor(private readonly router: Router,\n    private tokenService : TokenStorageService,) {}\n\n  ngOnInit() {\n    this.isAdminRole = this.tokenService.getUser().roles.includes('Demo');\n  }\n\n  toggleSidebar() {\n    this.sideNavToggled.emit();\n  }\n\n  onLoggedout() {\n    localStorage.removeItem('isLoggedin');\n    this.router.navigate(['/login']);\n  }\n\n}\n","<mat-toolbar color=\"primary\" class=\"fix-nav\">\n  <button type=\"button\" mat-icon-button class=\"visible-md\" (click)=\"toggleSidebar()\">\n    <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n  </button>\n  <div class=\"nav-brand\">\n    Stock Management\n  </div>\n  <span class=\"nav-spacer\"></span>\n  <!-- <form class=\"hidden-sm\" style=\"margin-right: 20px; margin-top: 8px\">\n    <mat-form-field style=\"font-size: 1rem;\">\n      <input matInput placeholder=\"Search\">\n    </mat-form-field>\n  </form> -->\n  <!-- <a href=\"https://github.com/changhuixu/angular-material-admin\" class=\"hidden-sm\" mat-raised-button style=\"margin-right: 10px\">\n    <mat-icon>cloud_download</mat-icon> Download Now\n  </a> -->\n  <button class=\"hidden-sm\" mat-icon-button [matMenuTriggerFor]=\"profile\">\n    <mat-icon>account_circle</mat-icon>\n  </button>\n  <mat-menu #profile=\"matMenu\" >\n  <!-- [overlapTrigger]=\"false\" -->\n    <button mat-menu-item routerLink=\"/profile\">\n      <mat-icon>person</mat-icon>\n      <span>Profile</span>\n    </button>\n    <button mat-menu-item>\n      <mat-icon>inbox</mat-icon>\n      <span>Inbox</span>\n    </button>\n    <button mat-menu-item>\n      <mat-icon>settings</mat-icon>\n      <span>Settings</span>\n    </button>\n    <button mat-menu-item (click)=\"onLoggedout()\">\n      <mat-icon>exit_to_app</mat-icon>\n      <span>LogOut</span>\n    </button>\n  </mat-menu>\n  <!-- <button mat-icon-button (click)=\"onLoggedout()\">\n    <mat-icon>exit_to_app</mat-icon>\n  </button> -->\n</mat-toolbar>\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler = async) {\n    const absoluteDelay = isDate(delay);\n    const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return (source) => source.lift(new DelayOperator(delayFor, scheduler));\n}\nclass DelayOperator {\n    constructor(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    }\n}\nclass DelaySubscriber extends Subscriber {\n    constructor(destination, delay, scheduler) {\n        super(destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    static dispatch(state) {\n        const source = state.source;\n        const queue = source.queue;\n        const scheduler = state.scheduler;\n        const destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            const delay = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    }\n    _schedule(scheduler) {\n        this.active = true;\n        const destination = this.destination;\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    }\n    scheduleNotification(notification) {\n        if (this.errored === true) {\n            return;\n        }\n        const scheduler = this.scheduler;\n        const message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    }\n    _next(value) {\n        this.scheduleNotification(Notification.createNext(value));\n    }\n    _error(err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleNotification(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nclass DelayMessage {\n    constructor(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n}\n","import { Subscriber } from '../Subscriber';\nexport function mapTo(value) {\n    return (source) => source.lift(new MapToOperator(value));\n}\nclass MapToOperator {\n    constructor(value) {\n        this.value = value;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    }\n}\nclass MapToSubscriber extends Subscriber {\n    constructor(destination, value) {\n        super(destination);\n        this.value = value;\n    }\n    _next(x) {\n        this.destination.next(this.value);\n    }\n}\n","export function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n","import * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport * as i3 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Optional, Inject, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, InjectionToken, Injector, TemplateRef, InjectFlags, Injectable, SkipSelf, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Subject, defer, Subscription, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nclass MatDialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Custom class for the overlay pane. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Custom class for the backdrop. */\n        this.backdropClass = '';\n        /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */\n        this.maxWidth = '80vw';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Aria label to assign to the dialog element. */\n        this.ariaLabel = null;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nconst matDialogAnimations = {\n    /** Animation that is applied on the dialog container by default. */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\n        transition('* => void, * => exit', animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\n    ]),\n};\n\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * @docs-private\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Base class for the `MatDialogContainer`. The base class does not implement\n * animations as these are left to implementers of the dialog container.\n */\nclass _MatDialogContainerBase extends BasePortalOutlet {\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, \n    /** The dialog configuration. */\n    _config, _interactivityChecker, _ngZone, _focusMonitor) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        this._interactivityChecker = _interactivityChecker;\n        this._ngZone = _ngZone;\n        this._focusMonitor = _focusMonitor;\n        /** Emits when an animation state changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * Type of interaction that led to the dialog being closed. This is used to determine\n         * whether the focus style will be applied when returning focus to its original location\n         * after the dialog is closed.\n         */\n        this._closeInteractionType = null;\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatDialogContentAlreadyAttachedError();\n            }\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    /** Initializes the dialog container with the attached content. */\n    _initializeWithAttachedContent() {\n        this._setupFocusTrap();\n        // Save the previously focused element. This element will be re-focused\n        // when the dialog closes.\n        this._capturePreviouslyFocusedElement();\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Moves focus back into the dialog if it was moved out. */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('blur', () => element.removeAttribute('tabindex'));\n                element.addEventListener('mousedown', () => element.removeAttribute('tabindex'));\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap. When autoFocus is not set to 'dialog', if focus\n     * cannot be moved then focus will go to the dialog container.\n     */\n    _trapFocus() {\n        const element = this._elementRef.nativeElement;\n        // If were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty when setting focus when autoFocus isn't set to\n        // dialog. If the element inside the dialog can't be focused, then the container is focused\n        // so the user can't tab into other elements behind it.\n        switch (this._config.autoFocus) {\n            case false:\n            case 'dialog':\n                // Ensure that focus is on the dialog container. It's possible that a different\n                // component tried to move focus while the open animation was running. See:\n                // https://github.com/angular/components/issues/16215. Note that we only want to do this\n                // if the focus isn't inside the dialog already, because it's possible that the consumer\n                // turned off `autoFocus` in order to move focus themselves.\n                if (!this._containsFocus()) {\n                    element.focus();\n                }\n                break;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady().then(focusedSuccessfully => {\n                    // If we weren't able to find a focusable element in the dialog, then focus the dialog\n                    // container instead.\n                    if (!focusedSuccessfully) {\n                        this._focusDialogContainer();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this._config.autoFocus);\n                break;\n        }\n    }\n    /** Restores focus to the element that was focused before the dialog opened. */\n    _restoreFocus() {\n        const previousElement = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus &&\n            previousElement &&\n            typeof previousElement.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement ||\n                activeElement === this._document.body ||\n                activeElement === element ||\n                element.contains(activeElement)) {\n                if (this._focusMonitor) {\n                    this._focusMonitor.focusVia(previousElement, this._closeInteractionType);\n                    this._closeInteractionType = null;\n                }\n                else {\n                    previousElement.focus();\n                }\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Sets up the focus trap. */\n    _setupFocusTrap() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n    /** Captures the element that was focused before the dialog was opened. */\n    _capturePreviouslyFocusedElement() {\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n        }\n    }\n    /** Focuses the dialog container. */\n    _focusDialogContainer() {\n        // Note that there is no focus method when rendering on the server.\n        if (this._elementRef.nativeElement.focus) {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Returns whether focus is inside the dialog. */\n    _containsFocus() {\n        const element = this._elementRef.nativeElement;\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return element === activeElement || element.contains(activeElement);\n    }\n}\n_MatDialogContainerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatDialogContainerBase, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: i0.ChangeDetectorRef }, { token: DOCUMENT, optional: true }, { token: MatDialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive });\n_MatDialogContainerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatDialogContainerBase, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatDialogContainerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: MatDialogConfig }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1.FocusMonitor }];\n    }, propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * @docs-private\n */\nclass MatDialogContainer extends _MatDialogContainerBase {\n    constructor() {\n        super(...arguments);\n        /** State of the dialog animation. */\n        this._state = 'enter';\n    }\n    /** Callback, invoked whenever an animation on the host completes. */\n    _onAnimationDone({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._trapFocus();\n            this._animationStateChanged.next({ state: 'opened', totalTime });\n        }\n        else if (toState === 'exit') {\n            this._restoreFocus();\n            this._animationStateChanged.next({ state: 'closed', totalTime });\n        }\n    }\n    /** Callback, invoked when an animation on the host starts. */\n    _onAnimationStart({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._animationStateChanged.next({ state: 'opening', totalTime });\n        }\n        else if (toState === 'exit' || toState === 'void') {\n            this._animationStateChanged.next({ state: 'closing', totalTime });\n        }\n    }\n    /** Starts the dialog exit animation. */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatDialogContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogContainer, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatDialogContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDialogContainer, selector: \"mat-dialog-container\", host: { attributes: { \"tabindex\": \"-1\", \"aria-modal\": \"true\" }, listeners: { \"@dialogContainer.start\": \"_onAnimationStart($event)\", \"@dialogContainer.done\": \"_onAnimationDone($event)\" }, properties: { \"id\": \"_id\", \"attr.role\": \"_config.role\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledBy\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\", \"@dialogContainer\": \"_state\" }, classAttribute: \"mat-dialog-container\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template cdkPortalOutlet></ng-template>\\n\", styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], directives: [{ type: i3.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matDialogAnimations.dialogContainer], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, animations: [matDialogAnimations.dialogContainer], host: {\n                        'class': 'mat-dialog-container',\n                        'tabindex': '-1',\n                        'aria-modal': 'true',\n                        '[id]': '_id',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                        '[@dialogContainer]': '_state',\n                        '(@dialogContainer.start)': '_onAnimationStart($event)',\n                        '(@dialogContainer.done)': '_onAnimationDone($event)',\n                    }, template: \"<ng-template cdkPortalOutlet></ng-template>\\n\", styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n    constructor(_overlayRef, _containerInstance, \n    /** Id of the dialog. */\n    id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /** Whether the user is allowed to close the dialog. */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /** Subject for notifying the user that the dialog has finished opening. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the dialog has finished closing. */\n        this._afterClosed = new Subject();\n        /** Subject for notifying the user that the dialog has started closing. */\n        this._beforeClosed = new Subject();\n        /** Current state of the dialog. */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'opened'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closed'), take(1))\n            .subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        });\n        _overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = null;\n            this._overlayRef.dispose();\n        });\n        _overlayRef\n            .keydownEvents()\n            .pipe(filter(event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        }))\n            .subscribe(event => {\n            event.preventDefault();\n            _closeDialogVia(this, 'keyboard');\n        });\n        _overlayRef.backdropClick().subscribe(() => {\n            if (this.disableClose) {\n                this._containerInstance._recaptureFocus();\n            }\n            else {\n                _closeDialogVia(this, 'mouse');\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closing'), take(1))\n            .subscribe(event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n        });\n        this._state = 1 /* CLOSING */;\n        this._containerInstance._startExitAnimation();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed() {\n        return this._afterClosed;\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed() {\n        return this._beforeClosed;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position) {\n        let strategy = this._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this._overlayRef.updateSize({ width, height });\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this._overlayRef.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this._overlayRef.removePanelClass(classes);\n        return this;\n    }\n    /** Gets the current state of the dialog's lifecycle. */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     */\n    _finishDialogClose() {\n        this._state = 2 /* CLOSED */;\n        this._overlayRef.dispose();\n    }\n    /** Fetches the position strategy object from the overlay ref. */\n    _getPositionStrategy() {\n        return this._overlayRef.getConfig().positionStrategy;\n    }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n    // Some mock dialog ref instances in tests do not have the `_containerInstance` property.\n    // For those, we keep the behavior as is and do not deal with the interaction type.\n    if (ref._containerInstance !== undefined) {\n        ref._containerInstance._closeInteractionType = interactionType;\n    }\n    return ref.close(result);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Base class for dialog services. The base dialog service allows\n * for arbitrary dialog refs and dialog container components.\n */\nclass _MatDialogBase {\n    constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy, _dialogRefConstructor, _dialogContainerType, _dialogDataToken, _animationMode) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._dialogRefConstructor = _dialogRefConstructor;\n        this._dialogContainerType = _dialogContainerType;\n        this._dialogDataToken = _dialogDataToken;\n        this._animationMode = _animationMode;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        this._dialogAnimatingOpen = false;\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id &&\n            this.getDialogById(config.id) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        // If there is a dialog that is currently animating open, return the MatDialogRef of that dialog\n        if (this._dialogAnimatingOpen) {\n            return this._lastDialogRef;\n        }\n        const overlayRef = this._createOverlay(config);\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        if (this._animationMode !== 'NoopAnimations') {\n            const animationStateSubscription = dialogContainer._animationStateChanged.subscribe(dialogAnimationEvent => {\n                if (dialogAnimationEvent.state === 'opening') {\n                    this._dialogAnimatingOpen = true;\n                }\n                if (dialogAnimationEvent.state === 'opened') {\n                    this._dialogAnimatingOpen = false;\n                    animationStateSubscription.unsubscribe();\n                }\n            });\n            if (!this._animationStateSubscriptions) {\n                this._animationStateSubscriptions = new Subscription();\n            }\n            this._animationStateSubscriptions.add(animationStateSubscription);\n        }\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        this._lastDialogRef = dialogRef;\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\n        this.afterOpened.next(dialogRef);\n        // Notify the dialog container that the content has been attached.\n        dialogContainer._initializeWithAttachedContent();\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n        // Clean up any subscriptions to dialogs that never finished opening.\n        if (this._animationStateSubscriptions) {\n            this._animationStateSubscriptions.unsubscribe();\n        }\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param dialogConfig The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        const state = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation,\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches a dialog container to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatDialogConfig, useValue: config }],\n        });\n        const containerPortal = new ComponentPortal(this._dialogContainerType, config.viewContainerRef, injector, config.componentFactoryResolver);\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created dialog container.\n     * @param componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param dialogContainer Reference to the wrapping dialog container.\n     * @param overlayRef Reference to the overlay in which the dialog resides.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        const dialogRef = new this._dialogRefConstructor(overlayRef, dialogContainer, config.id);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, {\n                $implicit: config.data,\n                dialogRef,\n            }));\n        }\n        else {\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef.updateSize(config.width, config.height).updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the dialog.\n     * @param dialogRef Reference to the dialog.\n     * @param dialogContainer Dialog container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The dialog container should be provided as the dialog container and the dialog's\n        // content are created out of the same `ViewContainerRef` and as such, are siblings\n        // for injector purposes. To allow the hierarchy that is expected, the dialog\n        // container is explicitly provided in the injector.\n        const providers = [\n            { provide: this._dialogContainerType, useValue: dialogContainer },\n            { provide: this._dialogDataToken, useValue: config.data },\n            { provide: this._dialogRefConstructor, useValue: dialogRef },\n        ];\n        if (config.direction &&\n            (!userInjector ||\n                !userInjector.get(Directionality, null, InjectFlags.Optional))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() },\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param dialogRef Dialog to be removed.\n     */\n    _removeOpenDialog(dialogRef) {\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n                this._ariaHiddenElements.clear();\n                this._getAfterAllClosed().next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /** Closes all of the dialogs in an array. */\n    _closeDialogs(dialogs) {\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\n_MatDialogBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatDialogBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatDialogBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatDialogBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatDialogBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: undefined }, { type: undefined }, { type: i1$1.OverlayContainer }, { type: undefined }, { type: i0.Type }, { type: i0.Type }, { type: i0.InjectionToken }, { type: undefined }]; } });\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog extends _MatDialogBase {\n    constructor(overlay, injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    location, defaultOptions, scrollStrategy, parentDialog, overlayContainer, animationMode) {\n        super(overlay, injector, defaultOptions, parentDialog, overlayContainer, scrollStrategy, MatDialogRef, MatDialogContainer, MAT_DIALOG_DATA, animationMode);\n    }\n}\nMatDialog.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: i2.Location, optional: true }, { token: MAT_DIALOG_DEFAULT_OPTIONS, optional: true }, { token: MAT_DIALOG_SCROLL_STRATEGY }, { token: MatDialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nMatDialog.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialog });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialog, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: i2.Location, decorators: [{\n                        type: Optional\n                    }] }, { type: MatDialogConfig, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DIALOG_DEFAULT_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DIALOG_SCROLL_STRATEGY]\n                    }] }, { type: MatDialog, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    } });\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default options provided.\n * @returns The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return Object.assign(Object.assign({}, defaultOptions), config);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    constructor(\n    /**\n     * Reference to the containing dialog.\n     * @deprecated `dialogRef` property to become private.\n     * @breaking-change 13.0.0\n     */\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Default to \"button\" to prevents accidental form submits. */\n        this.type = 'button';\n    }\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n    }\n    ngOnChanges(changes) {\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n    _onButtonClick(event) {\n        // Determinate the focus origin using the click event, because using the FocusMonitor will\n        // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n        // dialog, and therefore clicking the button won't result in a focus change. This means that\n        // the FocusMonitor won't detect any origin change, and will always output `program`.\n        _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n    }\n}\nMatDialogClose.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogClose, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogClose.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDialogClose, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, host: { listeners: { \"click\": \"_onButtonClick($event)\" }, properties: { \"attr.aria-label\": \"ariaLabel || null\", \"attr.type\": \"type\" } }, exportAs: [\"matDialogClose\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogClose, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-close], [matDialogClose]',\n                    exportAs: 'matDialogClose',\n                    host: {\n                        '(click)': '_onButtonClick($event)',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.type]': 'type',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: MatDialogRef, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ElementRef }, { type: MatDialog }];\n    }, propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], type: [{\n                type: Input\n            }], dialogResult: [{\n                type: Input,\n                args: ['mat-dialog-close']\n            }], _matDialogClose: [{\n                type: Input,\n                args: ['matDialogClose']\n            }] } });\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    _dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Unique id for the dialog title. If none is supplied, it will be auto-generated. */\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then(() => {\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            });\n        }\n    }\n}\nMatDialogTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogTitle, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogTitle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDialogTitle, selector: \"[mat-dialog-title], [matDialogTitle]\", inputs: { id: \"id\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"mat-dialog-title\" }, exportAs: [\"matDialogTitle\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-title], [matDialogTitle]',\n                    exportAs: 'matDialogTitle',\n                    host: {\n                        'class': 'mat-dialog-title',\n                        '[id]': 'id',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: MatDialogRef, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ElementRef }, { type: MatDialog }];\n    }, propDecorators: { id: [{\n                type: Input\n            }] } });\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDialogContent, selector: \"[mat-dialog-content], mat-dialog-content, [matDialogContent]\", host: { classAttribute: \"mat-dialog-content\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                    host: { 'class': 'mat-dialog-content' },\n                }]\n        }] });\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogActions, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogActions.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDialogActions, selector: \"[mat-dialog-actions], mat-dialog-actions, [matDialogActions]\", host: { classAttribute: \"mat-dialog-actions\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                    host: { 'class': 'mat-dialog-actions' },\n                }]\n        }] });\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatDialogModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogModule, declarations: [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogActions,\n        MatDialogContent], imports: [OverlayModule, PortalModule, MatCommonModule], exports: [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogContent,\n        MatDialogActions,\n        MatCommonModule] });\nMatDialogModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogModule, providers: [MatDialog, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER], imports: [[OverlayModule, PortalModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, MatCommonModule],\n                    exports: [\n                        MatDialogContainer,\n                        MatDialogClose,\n                        MatDialogTitle,\n                        MatDialogContent,\n                        MatDialogActions,\n                        MatCommonModule,\n                    ],\n                    declarations: [\n                        MatDialogContainer,\n                        MatDialogClose,\n                        MatDialogTitle,\n                        MatDialogActions,\n                        MatDialogContent,\n                    ],\n                    providers: [MatDialog, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, _MatDialogBase, _MatDialogContainerBase, _closeDialogVia, matDialogAnimations, throwMatDialogContentAlreadyAttachedError };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Whether the divider is an inset divider. */\n    get inset() {\n        return this._inset;\n    }\n    set inset(value) {\n        this._inset = coerceBooleanProperty(value);\n    }\n}\nMatDivider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDivider, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatDivider.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDivider, selector: \"mat-divider\", inputs: { vertical: \"vertical\", inset: \"inset\" }, host: { attributes: { \"role\": \"separator\" }, properties: { \"attr.aria-orientation\": \"vertical ? \\\"vertical\\\" : \\\"horizontal\\\"\", \"class.mat-divider-vertical\": \"vertical\", \"class.mat-divider-horizontal\": \"!vertical\", \"class.mat-divider-inset\": \"inset\" }, classAttribute: \"mat-divider\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDivider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-divider', host: {\n                        'role': 'separator',\n                        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                        '[class.mat-divider-vertical]': 'vertical',\n                        '[class.mat-divider-horizontal]': '!vertical',\n                        '[class.mat-divider-inset]': 'inset',\n                        'class': 'mat-divider',\n                    }, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"] }]\n        }], propDecorators: { vertical: [{\n                type: Input\n            }], inset: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDividerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatDividerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDividerModule, declarations: [MatDivider], imports: [MatCommonModule], exports: [MatDivider, MatCommonModule] });\nMatDividerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDividerModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDividerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatDivider, MatCommonModule],\n                    declarations: [MatDivider],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n","import * as i0 from '@angular/core';\nimport { SecurityContext, Injectable, Optional, Inject, SkipSelf, ErrorHandler, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Trusted Types policy, or null if Trusted Types are not\n * enabled/supported, or undefined if the policy has not been created yet.\n */\nlet policy;\n/**\n * Returns the Trusted Types policy, or null if Trusted Types are not\n * enabled/supported. The first call to this function will create the policy.\n */\nfunction getPolicy() {\n    if (policy === undefined) {\n        policy = null;\n        if (typeof window !== 'undefined') {\n            const ttWindow = window;\n            if (ttWindow.trustedTypes !== undefined) {\n                policy = ttWindow.trustedTypes.createPolicy('angular#components', {\n                    createHTML: (s) => s,\n                });\n            }\n        }\n    }\n    return policy;\n}\n/**\n * Unsafely promote a string to a TrustedHTML, falling back to strings when\n * Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that the\n * provided string will never cause an XSS vulnerability if used in a context\n * that will be interpreted as HTML by a browser, e.g. when assigning to\n * element.innerHTML.\n */\nfunction trustedHTMLFromString(html) {\n    var _a;\n    return ((_a = getPolicy()) === null || _a === void 0 ? void 0 : _a.createHTML(html)) || html;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n    constructor(url, svgText, options) {\n        this.url = url;\n        this.svgText = svgText;\n        this.options = options;\n    }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /** Cache for icons loaded by direct URLs. */\n        this._cachedIconsByUrl = new Map();\n        /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n        this._inProgressUrlFetches = new Map();\n        /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n        this._fontCssClassesByAlias = new Map();\n        /** Registered icon resolver functions. */\n        this._resolvers = [];\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIcon(iconName, url, options) {\n        return this.addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon resolver function with the registry. The function will be invoked with the\n     * name and namespace of an icon when the registry tries to resolve the URL from which to fetch\n     * the icon. The resolver is expected to return a `SafeResourceUrl` that points to the icon,\n     * an object with the icon URL and icon options, or `null` if the icon is not supported. Resolvers\n     * will be invoked in the order in which they have been registered.\n     * @param resolver Resolver function to be registered.\n     */\n    addSvgIconResolver(resolver) {\n        this._resolvers.push(resolver);\n        return this;\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        // TODO: add an ngDevMode check\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    addSvgIconSet(url, options) {\n        return this.addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return this.addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @param alias Alias for the font.\n     * @param className Class name override to be used instead of the alias.\n     */\n    registerFontClassAlias(alias, className = alias) {\n        this._fontCssClassesByAlias.set(alias, className);\n        return this;\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param className\n     */\n    setDefaultFontSetClass(className) {\n        this._defaultFontSetClass = className;\n        return this;\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    getSvgIconFromUrl(safeUrl) {\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        const key = iconKey(namespace, name);\n        let config = this._svgIconConfigs.get(key);\n        // Return (copy of) cached icon if possible.\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // Otherwise try to resolve the config from one of the resolver functions.\n        config = this._getIconConfigFromResolvers(namespace, name);\n        if (config) {\n            this._svgIconConfigs.set(key, config);\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    ngOnDestroy() {\n        this._resolvers = [];\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgText) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(this._svgElementFromConfig(config)));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        const iconSetFetchRequests = iconSetConfigs\n            .filter(iconSetConfig => !iconSetConfig.svgText)\n            .map(iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((err) => {\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(() => {\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            // TODO: add an ngDevMode check\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            const config = iconSetConfigs[i];\n            // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n            // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n            // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n            // some of the parsing.\n            if (config.svgText && config.svgText.toString().indexOf(iconName) > -1) {\n                const svg = this._svgElementFromConfig(config);\n                const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)), map(() => this._svgElementFromConfig(config)));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the\n     * SvgIconConfig and attaches it to the config.\n     */\n    _loadSvgIconSetFromConfig(config) {\n        if (config.svgText) {\n            return of(null);\n        }\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)));\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        const iconElement = iconSource.cloneNode(true);\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(iconElement, options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    _svgElementFromString(str) {\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg');\n        // TODO: add an ngDevMode check\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    _toSvgElement(element) {\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given icon. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    _fetchIcon(iconConfig) {\n        var _a;\n        const { url: safeUrl, options } = iconConfig;\n        const withCredentials = (_a = options === null || options === void 0 ? void 0 : options.withCredentials) !== null && _a !== void 0 ? _a : false;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        // TODO: add an ngDevMode check\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        // TODO: add an ngDevMode check\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        const req = this._httpClient.get(url, { responseType: 'text', withCredentials }).pipe(map(svg => {\n            // Security: This SVG is fetched from a SafeResourceUrl, and is thus\n            // trusted HTML.\n            return trustedHTMLFromString(svg);\n        }), finalize(() => this._inProgressUrlFetches.delete(url)), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return this;\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        const configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    }\n    /** Parses a config's text into an SVG element. */\n    _svgElementFromConfig(config) {\n        if (!config.svgElement) {\n            const svg = this._svgElementFromString(config.svgText);\n            this._setSvgAttributes(svg, config.options);\n            config.svgElement = svg;\n        }\n        return config.svgElement;\n    }\n    /** Tries to create an icon config through the registered resolver functions. */\n    _getIconConfigFromResolvers(namespace, name) {\n        for (let i = 0; i < this._resolvers.length; i++) {\n            const result = this._resolvers[i](name, namespace);\n            if (result) {\n                return isSafeUrlWithOptions(result)\n                    ? new SvgIconConfig(result.url, null, result.options)\n                    : new SvgIconConfig(result, null);\n            }\n        }\n        return undefined;\n    }\n}\nMatIconRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconRegistry, deps: [{ token: i1.HttpClient, optional: true }, { token: i2.DomSanitizer }, { token: DOCUMENT, optional: true }, { token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Injectable });\nMatIconRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconRegistry, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i1.HttpClient, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.DomSanitizer }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.ErrorHandler }];\n    } });\n/** @docs-private */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/** @docs-private */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        ErrorHandler,\n        [new Optional(), DOCUMENT],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\nfunction isSafeUrlWithOptions(value) {\n    return !!(value.url && value.options);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatIcon.\n/** @docs-private */\nconst _MatIconBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY,\n});\n/** @docs-private */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => (_location ? _location.pathname + _location.search : ''),\n    };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke',\n];\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(attr => `[${attr}]`).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconBase {\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        /** Subscription to the current in-progress SVG icon request. */\n        this._currentIconFetch = Subscription.EMPTY;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     */\n    get inline() {\n        return this._inline;\n    }\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /** Name of the icon in the SVG icon set. */\n    get svgIcon() {\n        return this._svgIcon;\n    }\n    set svgIcon(value) {\n        if (value !== this._svgIcon) {\n            if (value) {\n                this._updateSvgIcon(value);\n            }\n            else if (this._svgIcon) {\n                this._clearSvgElement();\n            }\n            this._svgIcon = value;\n        }\n    }\n    /** Font set that the icon is a part of. */\n    get fontSet() {\n        return this._fontSet;\n    }\n    set fontSet(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontSet) {\n            this._fontSet = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /** Name of an icon within a font set. */\n    get fontIcon() {\n        return this._fontIcon;\n    }\n    set fontIcon(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontIcon) {\n            this._fontIcon = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1:\n                return ['', parts[0]]; // Use default namespace.\n            case 2:\n                return parts;\n            default:\n                throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n        }\n    }\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        this._updateFontIconClasses();\n    }\n    ngAfterViewChecked() {\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && cachedElements.size) {\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        const styleTags = svg.querySelectorAll('style');\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        const path = this._location.getPathname();\n        this._previousPath = path;\n        this._cacheChildrenWithExternalReferences(svg);\n        this._prependPathToReferences(path);\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    _clearSvgElement() {\n        const layoutElement = this._elementRef.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                child.remove();\n            }\n        }\n    }\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        const elem = this._elementRef.nativeElement;\n        const fontSetClass = this.fontSet\n            ? this._iconRegistry.classNameForFontAlias(this.fontSet)\n            : this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    _prependPathToReferences(path) {\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((attrs, element) => {\n                attrs.forEach(attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                });\n            });\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        const elements = (this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map());\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach(attr => {\n                const elementWithReference = elementsWithFuncIri[i];\n                const value = elementWithReference.getAttribute(attr);\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    attributes.push({ name: attr, value: match[1] });\n                }\n            });\n        }\n    }\n    /** Sets a new SVG icon with a particular name. */\n    _updateSvgIcon(rawName) {\n        this._svgNamespace = null;\n        this._svgName = null;\n        this._currentIconFetch.unsubscribe();\n        if (rawName) {\n            const [namespace, iconName] = this._splitIconName(rawName);\n            if (namespace) {\n                this._svgNamespace = namespace;\n            }\n            if (iconName) {\n                this._svgName = iconName;\n            }\n            this._currentIconFetch = this._iconRegistry\n                .getNamedSvgIcon(iconName, namespace)\n                .pipe(take(1))\n                .subscribe(svg => this._setSvgElement(svg), (err) => {\n                const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n            });\n        }\n    }\n}\nMatIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIcon, deps: [{ token: i0.ElementRef }, { token: MatIconRegistry }, { token: 'aria-hidden', attribute: true }, { token: MAT_ICON_LOCATION }, { token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Component });\nMatIcon.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatIcon, selector: \"mat-icon\", inputs: { color: \"color\", inline: \"inline\", svgIcon: \"svgIcon\", fontSet: \"fontSet\", fontIcon: \"fontIcon\" }, host: { attributes: { \"role\": \"img\" }, properties: { \"attr.data-mat-icon-type\": \"_usingFontIcon() ? \\\"font\\\" : \\\"svg\\\"\", \"attr.data-mat-icon-name\": \"_svgName || fontIcon\", \"attr.data-mat-icon-namespace\": \"_svgNamespace || fontSet\", \"class.mat-icon-inline\": \"inline\", \"class.mat-icon-no-color\": \"color !== \\\"primary\\\" && color !== \\\"accent\\\" && color !== \\\"warn\\\"\" }, classAttribute: \"mat-icon notranslate\" }, exportAs: [\"matIcon\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mat-icon{-webkit-user-select:none;-moz-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIcon, decorators: [{\n            type: Component,\n            args: [{ template: '<ng-content></ng-content>', selector: 'mat-icon', exportAs: 'matIcon', inputs: ['color'], host: {\n                        'role': 'img',\n                        'class': 'mat-icon notranslate',\n                        '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n                        '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n                        '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n                        '[class.mat-icon-inline]': 'inline',\n                        '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-icon{-webkit-user-select:none;-moz-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: MatIconRegistry }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['aria-hidden']\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_ICON_LOCATION]\n                    }] }, { type: i0.ErrorHandler }];\n    }, propDecorators: { inline: [{\n                type: Input\n            }], svgIcon: [{\n                type: Input\n            }], fontSet: [{\n                type: Input\n            }], fontIcon: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatIconModule {\n}\nMatIconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatIconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconModule, declarations: [MatIcon], imports: [MatCommonModule], exports: [MatIcon, MatCommonModule] });\nMatIconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatIconModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatIcon, MatCommonModule],\n                    declarations: [MatIcon],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n","import * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Optional, Inject, ContentChildren, ContentChild, Input, forwardRef, EventEmitter, Output, ViewChild, Attribute, NgModule } from '@angular/core';\nimport * as i1 from '@angular/material/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport * as i3 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatList.\n/** @docs-private */\nconst _MatListBase = mixinDisabled(mixinDisableRipple(class {\n}));\n// Boilerplate for applying mixins to MatListItem.\n/** @docs-private */\nconst _MatListItemMixinBase = mixinDisableRipple(class {\n});\n/**\n * Injection token that can be used to inject instances of `MatList`. It serves as\n * alternative token to the actual `MatList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_LIST = new InjectionToken('MatList');\n/**\n * Injection token that can be used to inject instances of `MatNavList`. It serves as\n * alternative token to the actual `MatNavList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_NAV_LIST = new InjectionToken('MatNavList');\nclass MatNavList extends _MatListBase {\n    constructor() {\n        super(...arguments);\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatNavList, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatNavList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatNavList, selector: \"mat-nav-list\", inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { attributes: { \"role\": \"navigation\" }, classAttribute: \"mat-nav-list mat-list-base\" }, providers: [{ provide: MAT_NAV_LIST, useExisting: MatNavList }], exportAs: [\"matNavList\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatNavList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-nav-list', exportAs: 'matNavList', host: {\n                        'role': 'navigation',\n                        'class': 'mat-nav-list mat-list-base',\n                    }, inputs: ['disableRipple', 'disabled'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_NAV_LIST, useExisting: MatNavList }], template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"] }]\n        }] });\nclass MatList extends _MatListBase {\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    _getListType() {\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatList, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nMatList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatList, selector: \"mat-list, mat-action-list\", inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { classAttribute: \"mat-list mat-list-base\" }, providers: [{ provide: MAT_LIST, useExisting: MatList }], exportAs: [\"matList\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list, mat-action-list', exportAs: 'matList', host: {\n                        'class': 'mat-list mat-list-base',\n                    }, inputs: ['disableRipple', 'disabled'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_LIST, useExisting: MatList }], template: \"<ng-content></ng-content>\\n\\n\", styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListAvatarCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatListAvatarCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListAvatarCssMatStyler, selector: \"[mat-list-avatar], [matListAvatar]\", host: { classAttribute: \"mat-list-avatar\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListAvatarCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-list-avatar], [matListAvatar]',\n                    host: { 'class': 'mat-list-avatar' },\n                }]\n        }] });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListIconCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatListIconCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListIconCssMatStyler, selector: \"[mat-list-icon], [matListIcon]\", host: { classAttribute: \"mat-list-icon\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListIconCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-list-icon], [matListIcon]',\n                    host: { 'class': 'mat-list-icon' },\n                }]\n        }] });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListSubheaderCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatListSubheaderCssMatStyler.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListSubheaderCssMatStyler, selector: \"[mat-subheader], [matSubheader]\", host: { classAttribute: \"mat-subheader\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListSubheaderCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-subheader], [matSubheader]',\n                    host: { 'class': 'mat-subheader' },\n                }]\n        }] });\n/** An item within a Material Design list. */\nclass MatListItem extends _MatListItemMixinBase {\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attribute is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                _changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._list && this._list.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return (!this._isInteractiveList || this.disableRipple || !!(this._list && this._list.disableRipple));\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListItem, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_NAV_LIST, optional: true }, { token: MAT_LIST, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatListItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListItem, selector: \"mat-list-item, a[mat-list-item], button[mat-list-item]\", inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, host: { properties: { \"class.mat-list-item-disabled\": \"disabled\", \"class.mat-list-item-avatar\": \"_avatar || _icon\", \"class.mat-list-item-with-avatar\": \"_avatar || _icon\" }, classAttribute: \"mat-list-item mat-focus-indicator\" }, queries: [{ propertyName: \"_avatar\", first: true, predicate: MatListAvatarCssMatStyler, descendants: true }, { propertyName: \"_icon\", first: true, predicate: MatListIconCssMatStyler, descendants: true }, { propertyName: \"_lines\", predicate: MatLine, descendants: true }], exportAs: [\"matListItem\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\", directives: [{ type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListItem, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]', exportAs: 'matListItem', host: {\n                        'class': 'mat-list-item mat-focus-indicator',\n                        '[class.mat-list-item-disabled]': 'disabled',\n                        // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                        '[class.mat-list-item-avatar]': '_avatar || _icon',\n                        '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    }, inputs: ['disableRipple'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_NAV_LIST]\n                    }] }, { type: MatList, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_LIST]\n                    }] }];\n    }, propDecorators: { _lines: [{\n                type: ContentChildren,\n                args: [MatLine, { descendants: true }]\n            }], _avatar: [{\n                type: ContentChild,\n                args: [MatListAvatarCssMatStyler]\n            }], _icon: [{\n                type: ContentChild,\n                args: [MatListIconCssMatStyler]\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst _MatSelectionListBase = mixinDisableRipple(class {\n});\nconst _MatListOptionBase = mixinDisableRipple(class {\n});\n/** @docs-private */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSelectionList),\n    multi: true,\n};\n/** Change event that is being fired whenever the selected state of an option changes. */\nclass MatSelectionListChange {\n    constructor(\n    /** Reference to the selection list that emitted the event. */\n    source, \n    /**\n     * Reference to the option that has been changed.\n     * @deprecated Use `options` instead, because some events may change more than one option.\n     * @breaking-change 12.0.0\n     */\n    option, \n    /** Reference to the options that have been changed. */\n    options) {\n        this.source = source;\n        this.option = option;\n        this.options = options;\n    }\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionBase {\n    constructor(_element, _changeDetector, \n    /** @docs-private */\n    selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Emits when the selected state of the option has changed.\n         * Use to facilitate two-data binding to the `selected` property.\n         * @docs-private\n         */\n        this.selectedChange = new EventEmitter();\n        /** Whether the label should appear before or after the checkbox. Defaults to 'after' */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /** Theme color of the list option. This sets the color of the checkbox. */\n    get color() {\n        return this._color || this.selectionList.color;\n    }\n    set color(newValue) {\n        this._color = newValue;\n    }\n    /** Value of the option */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        if (this.selected &&\n            !this.selectionList.compareWith(newValue, this.value) &&\n            this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return this._disabled || (this.selectionList && this.selectionList.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** Whether the option is selected. */\n    get selected() {\n        return this.selectionList.selectedOptions.isSelected(this);\n    }\n    set selected(value) {\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            if (isSelected || this.selectionList.multiple) {\n                this.selectionList._reportValueChange();\n            }\n        }\n    }\n    ngOnInit() {\n        const list = this.selectionList;\n        if (list._value && list._value.some(value => list.compareWith(value, this._value))) {\n            this._setSelected(true);\n        }\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        });\n        this._inputsInitialized = true;\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => {\n                this.selected = false;\n            });\n        }\n        const hadFocus = this._hasFocus;\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /** Toggles the selection state of the option. */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /** Allows for programmatic focusing of the option. */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * @docs-private\n     */\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent || '' : '';\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent([this]);\n        }\n    }\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /** Sets the selected state of the option. Returns whether the value has changed. */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this.selectedChange.emit(selected);\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListOption, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatSelectionList) }], target: i0.ɵɵFactoryTarget.Component });\nMatListOption.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatListOption, selector: \"mat-list-option\", inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", disabled: \"disabled\", selected: \"selected\" }, outputs: { selectedChange: \"selectedChange\" }, host: { attributes: { \"role\": \"option\" }, listeners: { \"focus\": \"_handleFocus()\", \"blur\": \"_handleBlur()\", \"click\": \"_handleClick()\" }, properties: { \"class.mat-list-item-disabled\": \"disabled\", \"class.mat-list-item-with-avatar\": \"_avatar || _icon\", \"class.mat-primary\": \"color === \\\"primary\\\"\", \"class.mat-accent\": \"color !== \\\"primary\\\" && color !== \\\"warn\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"class.mat-list-single-selected-option\": \"selected && !selectionList.multiple\", \"attr.aria-selected\": \"selected\", \"attr.aria-disabled\": \"disabled\", \"attr.tabindex\": \"-1\" }, classAttribute: \"mat-list-item mat-list-option mat-focus-indicator\" }, queries: [{ propertyName: \"_avatar\", first: true, predicate: MatListAvatarCssMatStyler, descendants: true }, { propertyName: \"_icon\", first: true, predicate: MatListIconCssMatStyler, descendants: true }, { propertyName: \"_lines\", predicate: MatLine, descendants: true }], viewQueries: [{ propertyName: \"_text\", first: true, predicate: [\"text\"], descendants: true }], exportAs: [\"matListOption\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\", components: [{ type: i1.MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: [\"state\", \"disabled\"] }], directives: [{ type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-list-option', exportAs: 'matListOption', inputs: ['disableRipple'], host: {\n                        'role': 'option',\n                        'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                        '(focus)': '_handleFocus()',\n                        '(blur)': '_handleBlur()',\n                        '(click)': '_handleClick()',\n                        '[class.mat-list-item-disabled]': 'disabled',\n                        '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                        // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                        // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                        // its theme.\n                        '[class.mat-primary]': 'color === \"primary\"',\n                        // Even though accent is the default, we need to set this class anyway, because the  list might\n                        // be placed inside a parent that has one of the other colors with a higher specificity.\n                        '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                        '[attr.aria-selected]': 'selected',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.tabindex]': '-1',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => MatSelectionList)]\n                    }] }];\n    }, propDecorators: { _avatar: [{\n                type: ContentChild,\n                args: [MatListAvatarCssMatStyler]\n            }], _icon: [{\n                type: ContentChild,\n                args: [MatListIconCssMatStyler]\n            }], _lines: [{\n                type: ContentChildren,\n                args: [MatLine, { descendants: true }]\n            }], selectedChange: [{\n                type: Output\n            }], _text: [{\n                type: ViewChild,\n                args: ['text']\n            }], checkboxPosition: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }] } });\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListBase {\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector, \n    // @breaking-change 11.0.0 `_focusMonitor` parameter to become required.\n    _focusMonitor) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /** Emits a change event whenever the selected state of an option changes. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * @breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /** Theme color of the selection list. This sets the checkbox color for all list options. */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (a1, a2) => a1 === a2;\n        this._disabled = false;\n        /** The currently selected options. */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /** The tabindex of the selection list. */\n        this._tabIndex = -1;\n        /** View to model callback that should be called whenever the selected options change. */\n        this._onChange = (_) => { };\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /** View to model callback that should be called if the list or its options lost focus. */\n        this._onTouched = () => { };\n    }\n    /** Whether the selection list is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /** Whether selection is limited to one or multiple items (default multiple). */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (this._contentInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    ngAfterContentInit() {\n        var _a;\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate(() => false)\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._allowFocusEscape();\n        });\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this._updateTabIndex();\n        });\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        });\n        // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n        (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.monitor(this._element).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n            var _a;\n            if (origin === 'keyboard' || origin === 'program') {\n                let toFocus = 0;\n                for (let i = 0; i < this.options.length; i++) {\n                    if ((_a = this.options.get(i)) === null || _a === void 0 ? void 0 : _a.selected) {\n                        toFocus = i;\n                        break;\n                    }\n                }\n                this._keyManager.setActiveItem(toFocus);\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        const disableRippleChanges = changes['disableRipple'];\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    ngOnDestroy() {\n        var _a;\n        // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n        (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.stopMonitoring(this._element);\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /** Focuses the selection list. */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /** Selects all of the options. Returns the options that changed as a result. */\n    selectAll() {\n        return this._setAllOptionsSelected(true);\n    }\n    /** Deselects all of the options. Returns the options that changed as a result. */\n    deselectAll() {\n        return this._setAllOptionsSelected(false);\n    }\n    /** Sets the focused option of the selection-list. */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @returns Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /** Passes relevant key presses to our key manager. */\n    _keydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        const previousFocusIndex = manager.activeItemIndex;\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A &&\n                    this.multiple &&\n                    hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    const shouldSelect = this.options.some(option => !option.disabled && !option.selected);\n                    this._setAllOptionsSelected(shouldSelect, true, true);\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple &&\n            (keyCode === UP_ARROW || keyCode === DOWN_ARROW) &&\n            event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /** Reports a value change to the ControlValueAccessor */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /** Emits a change event if the selected state of an option changed. */\n    _emitChangeEvent(options) {\n        this.selectionChange.emit(new MatSelectionListChange(this, options[0], options));\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Sets the selected options based on the specified values. */\n    _setOptionsFromValues(values) {\n        this.options.forEach(option => option._setSelected(false));\n        values.forEach(value => {\n            const correspondingOption = this.options.find(option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            });\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        });\n    }\n    /** Returns the values of the selected options. */\n    _getSelectedOptionValues() {\n        return this.options.filter(option => option.selected).map(option => option.value);\n    }\n    /** Toggles the state of the currently focused option if enabled. */\n    _toggleFocusedOption() {\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent([focusedOption]);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled, isUserInput) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        const changedOptions = [];\n        this.options.forEach(option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                changedOptions.push(option);\n            }\n        });\n        if (changedOptions.length) {\n            this._reportValueChange();\n            if (isUserInput) {\n                this._emitChangeEvent(changedOptions);\n            }\n        }\n        return changedOptions;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /** Returns the index of the specified list option. */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /** Marks all the options to be checked in the next change detection run. */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach(option => option._markForCheck());\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout(() => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        });\n    }\n    /** Updates the tabindex based upon if the selection list is empty. */\n    _updateTabIndex() {\n        this._tabIndex = this.options.length === 0 ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSelectionList, deps: [{ token: i0.ElementRef }, { token: 'tabindex', attribute: true }, { token: i0.ChangeDetectorRef }, { token: i3.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });\nMatSelectionList.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSelectionList, selector: \"mat-selection-list\", inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, host: { attributes: { \"role\": \"listbox\" }, listeners: { \"keydown\": \"_keydown($event)\" }, properties: { \"attr.aria-multiselectable\": \"multiple\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.tabindex\": \"_tabIndex\" }, classAttribute: \"mat-selection-list mat-list-base\" }, providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR], queries: [{ propertyName: \"options\", predicate: MatListOption, descendants: true }], exportAs: [\"matSelectionList\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSelectionList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-selection-list', exportAs: 'matSelectionList', inputs: ['disableRipple'], host: {\n                        'role': 'listbox',\n                        'class': 'mat-selection-list mat-list-base',\n                        '(keydown)': '_keydown($event)',\n                        '[attr.aria-multiselectable]': 'multiple',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.tabindex]': '_tabIndex',\n                    }, template: '<ng-content></ng-content>', encapsulation: ViewEncapsulation.None, providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR], changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px;z-index:1}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i3.FocusMonitor }];\n    }, propDecorators: { options: [{\n                type: ContentChildren,\n                args: [MatListOption, { descendants: true }]\n            }], selectionChange: [{\n                type: Output\n            }], tabIndex: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatListModule {\n}\nMatListModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatListModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListModule, declarations: [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatSelectionList,\n        MatListOption], imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule], exports: [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatLineModule,\n        MatCommonModule,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatPseudoCheckboxModule,\n        MatSelectionList,\n        MatListOption,\n        MatDividerModule] });\nMatListModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListModule, imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule], MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatListModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                    exports: [\n                        MatList,\n                        MatNavList,\n                        MatListItem,\n                        MatListAvatarCssMatStyler,\n                        MatLineModule,\n                        MatCommonModule,\n                        MatListIconCssMatStyler,\n                        MatListSubheaderCssMatStyler,\n                        MatPseudoCheckboxModule,\n                        MatSelectionList,\n                        MatListOption,\n                        MatDividerModule,\n                    ],\n                    declarations: [\n                        MatList,\n                        MatNavList,\n                        MatListItem,\n                        MatListAvatarCssMatStyler,\n                        MatListIconCssMatStyler,\n                        MatListSubheaderCssMatStyler,\n                        MatSelectionList,\n                        MatListOption,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LIST, MAT_NAV_LIST, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n","import * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Input, QueryList, EventEmitter, TemplateRef, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i3$1 from '@angular/cdk/bidi';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)',\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1)',\n        }))),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 }))),\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ]),\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\nclass _MatMenuContentBase {\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Emits when the menu content has been attached. */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode.insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n_MatMenuContentBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuContentBase, deps: [{ token: i0.TemplateRef }, { token: i0.ComponentFactoryResolver }, { token: i0.ApplicationRef }, { token: i0.Injector }, { token: i0.ViewContainerRef }, { token: DOCUMENT }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuContentBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatMenuContentBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuContentBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.ComponentFactoryResolver }, { type: i0.ApplicationRef }, { type: i0.Injector }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.ChangeDetectorRef }];\n    } });\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent extends _MatMenuContentBase {\n}\nMatMenuContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuContent, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatMenuContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMenuContent, selector: \"ng-template[matMenuContent]\", providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matMenuContent]',\n                    providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n    throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\n        `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nconst _MatMenuItemBase = mixinDisableRipple(mixinDisabled(class {\n}));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemBase {\n    constructor(_elementRef, \n    /**\n     * @deprecated `_document` parameter is no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _focusMonitor, _parentMenu, \n    /**\n     * @deprecated `_changeDetectorRef` to become a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _changeDetectorRef) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** ARIA role for the menu item. */\n        this.role = 'menuitem';\n        /** Stream that emits when the menu item is hovered. */\n        this._hovered = new Subject();\n        /** Stream that emits when the menu item is focused. */\n        this._focused = new Subject();\n        /** Whether the menu item is highlighted. */\n        this._highlighted = false;\n        /** Whether the menu item acts as a trigger for a sub-menu. */\n        this._triggersSubmenu = false;\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n    }\n    /** Focuses the menu item. */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    ngAfterViewInit() {\n        if (this._focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            this._focusMonitor.monitor(this._elementRef, false);\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /** Emits to the hover stream. */\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        var _a;\n        const clone = this._elementRef.nativeElement.cloneNode(true);\n        const icons = clone.querySelectorAll('mat-icon, .material-icons');\n        // Strip away icons so they don't show up in the text.\n        for (let i = 0; i < icons.length; i++) {\n            icons[i].remove();\n        }\n        return ((_a = clone.textContent) === null || _a === void 0 ? void 0 : _a.trim()) || '';\n    }\n    _setHighlighted(isHighlighted) {\n        var _a;\n        // We need to mark this for check for the case where the content is coming from a\n        // `matMenuContent` whose change detection tree is at the declaration position,\n        // not the insertion position. See #23175.\n        // @breaking-change 14.0.0 Remove null check for `_changeDetectorRef`.\n        this._highlighted = isHighlighted;\n        (_a = this._changeDetectorRef) === null || _a === void 0 ? void 0 : _a.markForCheck();\n    }\n}\nMatMenuItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuItem, deps: [{ token: i0.ElementRef }, { token: DOCUMENT }, { token: i1.FocusMonitor }, { token: MAT_MENU_PANEL, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatMenuItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMenuItem, selector: \"[mat-menu-item]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, host: { listeners: { \"click\": \"_checkDisabled($event)\", \"mouseenter\": \"_handleMouseEnter()\" }, properties: { \"attr.role\": \"role\", \"class.mat-menu-item\": \"true\", \"class.mat-menu-item-highlighted\": \"_highlighted\", \"class.mat-menu-item-submenu-trigger\": \"_triggersSubmenu\", \"attr.tabindex\": \"_getTabIndex()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.disabled\": \"disabled || null\" }, classAttribute: \"mat-focus-indicator\" }, exportAs: [\"matMenuItem\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\", directives: [{ type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuItem, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-menu-item]', exportAs: 'matMenuItem', inputs: ['disabled', 'disableRipple'], host: {\n                        '[attr.role]': 'role',\n                        '[class.mat-menu-item]': 'true',\n                        '[class.mat-menu-item-highlighted]': '_highlighted',\n                        '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.disabled]': 'disabled || null',\n                        'class': 'mat-focus-indicator',\n                        '(click)': '_checkDisabled($event)',\n                        '(mouseenter)': '_handleMouseEnter()',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_PANEL]\n                    }, {\n                        type: Optional\n                    }] }, { type: i0.ChangeDetectorRef }];\n    }, propDecorators: { role: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\nlet menuPanelUid = 0;\n/** Base class with all of the `MatMenu` functionality. */\nclass _MatMenuBase {\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /** Only the direct descendant menu items. */\n        this._directDescendantItems = new QueryList();\n        /** Subscription to tab events on the menu panel */\n        this._tabSubscription = Subscription.EMPTY;\n        /** Config object to be passed into the menu's ngClass */\n        this._classList = {};\n        /** Current state of the panel animation. */\n        this._panelAnimationState = 'void';\n        /** Emits whenever an animation on the menu completes. */\n        this._animationDone = new Subject();\n        /** Class or list of classes to be added to the overlay panel. */\n        this.overlayPanelClass = this._defaultOptions.overlayPanelClass || '';\n        /** Class to be added to the backdrop element. */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /** Event emitted when the menu is closed. */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * @breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /** Position of the menu in the X axis. */\n    get xPosition() {\n        return this._xPosition;\n    }\n    set xPosition(value) {\n        if (value !== 'before' &&\n            value !== 'after' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() {\n        return this._yPosition;\n    }\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /** Whether the menu should overlap its trigger. */\n    get overlapTrigger() {\n        return this._overlapTrigger;\n    }\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /** Whether the menu has a backdrop. */\n    get hasBackdrop() {\n        return this._hasBackdrop;\n    }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className) => {\n                this._classList[className] = false;\n            });\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className) => {\n                this._classList[className] = true;\n            });\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() {\n        return this.panelClass;\n    }\n    set classList(classes) {\n        this.panelClass = classes;\n    }\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n        // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes\n            .pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._focused))))\n            .subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n    }\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        const itemChanges = this._directDescendantItems.changes;\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) { }\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => this._focusFirstItem(origin));\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     */\n    _focusFirstItem(origin) {\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        const elevation = Math.min(this._baseElevation + depth, 24);\n        const newElevation = `${this._elevationPrefix}${elevation}`;\n        const customElevation = Object.keys(this._classList).find(className => {\n            return className.startsWith(this._elevationPrefix);\n        });\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /** Starts the enter animation. */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((items) => {\n            this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n            this._directDescendantItems.notifyOnChanges();\n        });\n    }\n}\n_MatMenuBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuBase, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MAT_MENU_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatMenuBase, inputs: { backdropClass: \"backdropClass\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\" }, outputs: { closed: \"closed\", close: \"close\" }, queries: [{ propertyName: \"lazyContent\", first: true, predicate: MAT_MENU_CONTENT, descendants: true }, { propertyName: \"_allItems\", predicate: MatMenuItem, descendants: true }, { propertyName: \"items\", predicate: MatMenuItem }], viewQueries: [{ propertyName: \"templateRef\", first: true, predicate: TemplateRef, descendants: true }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_DEFAULT_OPTIONS]\n                    }] }];\n    }, propDecorators: { _allItems: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: true }]\n            }], backdropClass: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], xPosition: [{\n                type: Input\n            }], yPosition: [{\n                type: Input\n            }], templateRef: [{\n                type: ViewChild,\n                args: [TemplateRef]\n            }], items: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: false }]\n            }], lazyContent: [{\n                type: ContentChild,\n                args: [MAT_MENU_CONTENT]\n            }], overlapTrigger: [{\n                type: Input\n            }], hasBackdrop: [{\n                type: Input\n            }], panelClass: [{\n                type: Input,\n                args: ['class']\n            }], classList: [{\n                type: Input\n            }], closed: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }] } });\n/** @docs-public MatMenu */\nclass MatMenu extends _MatMenuBase {\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n        this._elevationPrefix = 'mat-elevation-z';\n        this._baseElevation = 4;\n    }\n}\nMatMenu.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenu, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MAT_MENU_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Component });\nMatMenu.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMenu, selector: \"mat-menu\", host: { properties: { \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\" } }, providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], exportAs: [\"matMenu\"], usesInheritance: true, ngImport: i0, template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenu, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-menu', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, exportAs: 'matMenu', host: {\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                    }, animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_DEFAULT_OPTIONS]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** Default top padding of the menu panel. */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\nclass _MatMenuTriggerBase {\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu, \n    // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n    // tslint:disable-next-line: lightweight-tokens\n    _menuItemInstance, _dir, \n    // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n    // @breaking-change 8.0.0\n    _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (event) => {\n            if (!isFakeTouchstartFromScreenReader(event)) {\n                this._openedBy = 'touch';\n            }\n        };\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = undefined;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /** Event emitted when the associated menu is opened. */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /** Event emitted when the associated menu is closed. */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        this._scrollStrategy = scrollStrategy;\n        this._parentMaterialMenu = parentMenu instanceof _MatMenuBase ? parentMenu : undefined;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n    }\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() {\n        return this.menu;\n    }\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() {\n        return this._menu;\n    }\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatMenuRecursiveError();\n            }\n            this._menuCloseSubscription = menu.close.subscribe((reason) => {\n                this._destroyMenu(reason);\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n                    this._parentMaterialMenu.closed.emit(reason);\n                }\n            });\n        }\n    }\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMaterialMenu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        const overlayRef = this._createOverlay();\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition(overlayConfig.positionStrategy);\n        overlayConfig.hasBackdrop =\n            this.menu.hasBackdrop == null ? !this.triggersSubmenu() : this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        this._initMenu();\n        if (this.menu instanceof _MatMenuBase) {\n            this.menu._startAnimation();\n        }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Updates the position of the menu to ensure that it fits all options within the viewport.\n     */\n    updatePosition() {\n        var _a;\n        (_a = this._overlayRef) === null || _a === void 0 ? void 0 : _a.updatePosition();\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu(reason) {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        // Always restore focus if the user is navigating using the keyboard or the menu was opened\n        // programmatically. We don't restore for non-root triggers, because it can prevent focus\n        // from making it back to the root trigger when closing a long chain of menus by clicking\n        // on the backdrop.\n        if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n            this.focus(this._openedBy);\n        }\n        this._openedBy = undefined;\n        if (menu instanceof _MatMenuBase) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(event => event.toState === 'void'), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: () => menu.lazyContent.detach(),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: () => this._setIsMenuOpen(false),\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this.menu.focusFirstItem(this._openedBy || 'program');\n        this._setIsMenuOpen(true);\n    }\n    /** Updates the menu elevation based on the amount of parent menus that it has. */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            let depth = 0;\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._setHighlighted(isOpen);\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     */\n    _checkMenu() {\n        if (!this.menu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy);\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay\n                .position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withGrowAfterOpen()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            panelClass: this.menu.overlayPanelClass,\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir,\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                this.menu.setPositionClasses(posX, posY);\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n        ]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n        const backdrop = this._overlayRef.backdropClick();\n        const detachments = this._overlayRef.detachments();\n        const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n        const hover = this._parentMaterialMenu\n            ? this._parentMaterialMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen))\n            : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : undefined;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Pressing enter on the trigger will trigger the click handler later.\n        if (keyCode === ENTER || keyCode === SPACE) {\n            this._openedBy = 'keyboard';\n        }\n        if (this.triggersSubmenu() &&\n            ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n                (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this._openedBy = 'keyboard';\n            this.openMenu();\n        }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n            return;\n        }\n        this._hoverSubscription = this._parentMaterialMenu\n            ._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler))\n            .subscribe(() => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof _MatMenuBase && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu._hovered()))\n                    .subscribe(() => this.openMenu());\n            }\n            else {\n                this.openMenu();\n            }\n        });\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\n_MatMenuTriggerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuTriggerBase, deps: [{ token: i1$1.Overlay }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: MAT_MENU_SCROLL_STRATEGY }, { token: MAT_MENU_PANEL, optional: true }, { token: MatMenuItem, optional: true, self: true }, { token: i3$1.Directionality, optional: true }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuTriggerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatMenuTriggerBase, inputs: { _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"], restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, host: { attributes: { \"aria-haspopup\": \"true\" }, listeners: { \"click\": \"_handleClick($event)\", \"mousedown\": \"_handleMousedown($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-expanded\": \"menuOpen || null\", \"attr.aria-controls\": \"menuOpen ? menu.panelId : null\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatMenuTriggerBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        'aria-haspopup': 'true',\n                        '[attr.aria-expanded]': 'menuOpen || null',\n                        '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                        '(click)': '_handleClick($event)',\n                        '(mousedown)': '_handleMousedown($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1$1.Overlay }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_SCROLL_STRATEGY]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_MENU_PANEL]\n                    }, {\n                        type: Optional\n                    }] }, { type: MatMenuItem, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }, { type: i3$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i1.FocusMonitor }];\n    }, propDecorators: { _deprecatedMatMenuTriggerFor: [{\n                type: Input,\n                args: ['mat-menu-trigger-for']\n            }], menu: [{\n                type: Input,\n                args: ['matMenuTriggerFor']\n            }], menuData: [{\n                type: Input,\n                args: ['matMenuTriggerData']\n            }], restoreFocus: [{\n                type: Input,\n                args: ['matMenuTriggerRestoreFocus']\n            }], menuOpened: [{\n                type: Output\n            }], onMenuOpen: [{\n                type: Output\n            }], menuClosed: [{\n                type: Output\n            }], onMenuClose: [{\n                type: Output\n            }] } });\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger extends _MatMenuTriggerBase {\n}\nMatMenuTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuTrigger, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatMenuTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMenuTrigger, selector: \"[mat-menu-trigger-for], [matMenuTriggerFor]\", host: { classAttribute: \"mat-menu-trigger\" }, exportAs: [\"matMenuTrigger\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                    host: {\n                        'class': 'mat-menu-trigger',\n                    },\n                    exportAs: 'matMenuTrigger',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatMenuModule {\n}\nMatMenuModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatMenuModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuModule, declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent], imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule], exports: [CdkScrollableModule,\n        MatCommonModule,\n        MatMenu,\n        MatMenuItem,\n        MatMenuTrigger,\n        MatMenuContent] });\nMatMenuModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuModule, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[CommonModule, MatCommonModule, MatRippleModule, OverlayModule], CdkScrollableModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMenuModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatMenu,\n                        MatMenuItem,\n                        MatMenuTrigger,\n                        MatMenuContent,\n                    ],\n                    declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent],\n                    providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenuBase, _MatMenuContentBase, _MatMenuTriggerBase, fadeInItems, matMenuAnimations, transformMenu };\n","import * as i3 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollable, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, EventEmitter, Optional, Input, Output, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i2 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nconst matDrawerAnimations = {\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n    ]),\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatDrawerContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawerContent, deps: [{ token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatDrawerContainer) }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatDrawerContent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDrawerContent, selector: \"mat-drawer-content\", host: { properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\" }, classAttribute: \"mat-drawer-content\" }, usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawerContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-drawer-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => MatDrawerContainer)]\n                    }] }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.NgZone }];\n    } });\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _interactivityChecker, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._interactivityChecker = _interactivityChecker;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /** Whether the drawer is initialized. Used for disabling the initial animation. */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /** Emits whenever the drawer has started animating. */\n        this._animationStarted = new Subject();\n        /** Emits whenever the drawer is done animating. */\n        this._animationEnd = new Subject();\n        /** Current state of the sidenav animation. */\n        this._animationState = 'void';\n        /** Event emitted when the drawer open state is changed. */\n        this.openedChange =\n            // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n            new EventEmitter(/* isAsync */ true);\n        /** Event emitted when the drawer has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the drawer has started opening. */\n        this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n        /** Event emitted when the drawer has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the drawer has started closing. */\n        this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Event emitted when the drawer's position changes. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n                }\n                this._takeFocus();\n            }\n            else if (this._isFocusWithinDrawer()) {\n                this._restoreFocus(this._openedVia || 'program');\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            fromEvent(this._elementRef.nativeElement, 'keydown')\n                .pipe(filter(event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            }), takeUntil(this._destroyed))\n                .subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        });\n    }\n    /** The side that the drawer is attached to. */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() {\n        return this._mode;\n    }\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() {\n        return this._disableClose;\n    }\n    set disableClose(value) {\n        this._disableClose = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or AutoFocusTarget\n     * instead.\n     */\n    get autoFocus() {\n        const value = this._autoFocus;\n        // Note that usually we don't allow autoFocus to be set to `first-tabbable` in `side` mode,\n        // because we don't know how the sidenav is being used, but in some cases it still makes\n        // sense to do it. The consumer can explicitly set `autoFocus`.\n        if (value == null) {\n            if (this.mode === 'side') {\n                return 'dialog';\n            }\n            else {\n                return 'first-tabbable';\n            }\n        }\n        return value;\n    }\n    set autoFocus(value) {\n        if (value === 'true' || value === 'false' || value == null) {\n            value = coerceBooleanProperty(value);\n        }\n        this._autoFocus = value;\n    }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() {\n        return this._opened;\n    }\n    set opened(value) {\n        this.toggle(coerceBooleanProperty(value));\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('blur', () => element.removeAttribute('tabindex'));\n                element.addEventListener('mousedown', () => element.removeAttribute('tabindex'));\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n        if (!this._focusTrap) {\n            return;\n        }\n        const element = this._elementRef.nativeElement;\n        // When autoFocus is not on the sidenav, if the element cannot be focused or does\n        // not exist, focus the sidenav itself so the keyboard navigation still works.\n        // We need to check that `focus` is a function due to Universal.\n        switch (this.autoFocus) {\n            case false:\n            case 'dialog':\n                return;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n                    if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                        element.focus();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this.autoFocus);\n                break;\n        }\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus(focusOrigin) {\n        if (this.autoFocus === 'dialog') {\n            return;\n        }\n        if (this._elementFocusedBeforeDrawerWasOpened) {\n            this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, focusOrigin);\n        }\n        else {\n            this._elementRef.nativeElement.blur();\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n        var _a;\n        const activeEl = (_a = this._doc) === null || _a === void 0 ? void 0 : _a.activeElement;\n        return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n        return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n        // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n        // don't need to check whether focus is currently in the drawer, as clicking on the\n        // backdrop causes blurs the active element.\n        return this._setOpen(/* isOpen */ false, /* restoreFocus */ true, 'mouse');\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n        // If the focus is currently inside the drawer content and we are closing the drawer,\n        // restore the focus to the initially focused element (when the drawer opened).\n        if (isOpen && openedVia) {\n            this._openedVia = openedVia;\n        }\n        const result = this._setOpen(isOpen, \n        /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), this._openedVia || 'program');\n        if (!isOpen) {\n            this._openedVia = null;\n        }\n        return result;\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param focusOrigin Origin to use when restoring focus.\n     */\n    _setOpen(isOpen, restoreFocus, focusOrigin) {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n        }\n        else {\n            this._animationState = 'void';\n            if (restoreFocus) {\n                this._restoreFocus(focusOrigin);\n            }\n        }\n        this._updateFocusTrapState();\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    _getWidth() {\n        return this._elementRef.nativeElement ? this._elementRef.nativeElement.offsetWidth || 0 : 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n}\nMatDrawer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawer, deps: [{ token: i0.ElementRef }, { token: i2.FocusTrapFactory }, { token: i2.FocusMonitor }, { token: i3.Platform }, { token: i0.NgZone }, { token: i2.InteractivityChecker }, { token: DOCUMENT, optional: true }, { token: MAT_DRAWER_CONTAINER, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDrawer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDrawer, selector: \"mat-drawer\", inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\", onPositionChanged: \"positionChanged\" }, host: { attributes: { \"tabIndex\": \"-1\" }, listeners: { \"@transform.start\": \"_animationStarted.next($event)\", \"@transform.done\": \"_animationEnd.next($event)\" }, properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-drawer-opened\": \"opened\", \"@transform\": \"_animationState\" }, classAttribute: \"mat-drawer\" }, exportAs: [\"matDrawer\"], ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", directives: [{ type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], animations: [matDrawerAnimations.transformDrawer], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer', exportAs: 'matDrawer', animations: [matDrawerAnimations.transformDrawer], host: {\n                        'class': 'mat-drawer',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-drawer-opened]': 'opened',\n                        'tabIndex': '-1',\n                        '[@transform]': '_animationState',\n                        '(@transform.start)': '_animationStarted.next($event)',\n                        '(@transform.done)': '_animationEnd.next($event)',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i2.FocusTrapFactory }, { type: i2.FocusMonitor }, { type: i3.Platform }, { type: i0.NgZone }, { type: i2.InteractivityChecker }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: MatDrawerContainer, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DRAWER_CONTAINER]\n                    }] }];\n    }, propDecorators: { position: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], disableClose: [{\n                type: Input\n            }], autoFocus: [{\n                type: Input\n            }], opened: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], openedStart: [{\n                type: Output\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], closedStart: [{\n                type: Output\n            }], onPositionChanged: [{\n                type: Output,\n                args: ['positionChanged']\n            }] } });\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** Drawers that belong to this container. */\n        this._drawers = new QueryList();\n        /** Event emitted when the drawer backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Emits on every ngDoCheck. Used for debouncing reflows. */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            });\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateContentMargins());\n        this._autosize = defaultAutosize;\n    }\n    /** The drawer child with the `start` position. */\n    get start() {\n        return this._start;\n    }\n    /** The drawer child with the `end` position. */\n    get end() {\n        return this._end;\n    }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() {\n        return this._autosize;\n    }\n    set autosize(value) {\n        this._autosize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((drawer) => {\n            this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n            this._drawers.notifyOnChanges();\n        });\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        // Avoid hitting the NgZone through the debounce timeout.\n        this._ngZone.runOutsideAngular(() => {\n            this._doCheckSubject\n                .pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n            takeUntil(this._destroyed))\n                .subscribe(() => this.updateContentMargins());\n        });\n    }\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let left = 0;\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._getWidth();\n            }\n            else if (this._left.mode == 'push') {\n                const width = this._left._getWidth();\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._getWidth();\n            }\n            else if (this._right.mode == 'push') {\n                const width = this._right._getWidth();\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted\n            .pipe(filter((event) => event.fromState !== event.toState), takeUntil(this._drawers.changes))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange\n                .pipe(takeUntil(this._drawers.changes))\n                .subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged\n                .pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n        const classList = this._element.nativeElement.classList;\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n        return ((this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over'));\n    }\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer))\n            .forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n        return ((this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end)));\n    }\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawerContainer, deps: [{ token: i4.Directionality, optional: true }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1.ViewportRuler }, { token: MAT_DRAWER_DEFAULT_AUTOSIZE }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDrawerContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDrawerContainer, selector: \"mat-drawer-container\", inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, host: { properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container\" }, providers: [\n        {\n            provide: MAT_DRAWER_CONTAINER,\n            useExisting: MatDrawerContainer,\n        },\n    ], queries: [{ propertyName: \"_content\", first: true, predicate: MatDrawerContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatDrawer, descendants: true }], viewQueries: [{ propertyName: \"_userContent\", first: true, predicate: MatDrawerContent, descendants: true }], exportAs: [\"matDrawerContainer\"], ngImport: i0, template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], components: [{ type: MatDrawerContent, selector: \"mat-drawer-content\" }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDrawerContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-drawer-container', exportAs: 'matDrawerContainer', host: {\n                        'class': 'mat-drawer-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatDrawerContainer,\n                        },\n                    ], template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i4.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1.ViewportRuler }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatDrawer, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatDrawerContent]\n            }], _userContent: [{\n                type: ViewChild,\n                args: [MatDrawerContent]\n            }], autosize: [{\n                type: Input\n            }], hasBackdrop: [{\n                type: Input\n            }], backdropClick: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavContent extends MatDrawerContent {\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavContent, deps: [{ token: i0.ChangeDetectorRef }, { token: forwardRef(() => MatSidenavContainer) }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatSidenavContent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSidenavContent, selector: \"mat-sidenav-content\", host: { properties: { \"style.margin-left.px\": \"_container._contentMargins.left\", \"style.margin-right.px\": \"_container._contentMargins.right\" }, classAttribute: \"mat-drawer-content mat-sidenav-content\" }, usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-sidenav-content',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        'class': 'mat-drawer-content mat-sidenav-content',\n                        '[style.margin-left.px]': '_container._contentMargins.left',\n                        '[style.margin-right.px]': '_container._contentMargins.right',\n                    },\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => MatSidenavContainer)]\n                    }] }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.NgZone }];\n    } });\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() {\n        return this._fixedInViewport;\n    }\n    set fixedInViewport(value) {\n        this._fixedInViewport = coerceBooleanProperty(value);\n    }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() {\n        return this._fixedTopGap;\n    }\n    set fixedTopGap(value) {\n        this._fixedTopGap = coerceNumberProperty(value);\n    }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() {\n        return this._fixedBottomGap;\n    }\n    set fixedBottomGap(value) {\n        this._fixedBottomGap = coerceNumberProperty(value);\n    }\n}\nMatSidenav.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenav, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSidenav.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSidenav, selector: \"mat-sidenav\", inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, host: { attributes: { \"tabIndex\": \"-1\" }, properties: { \"attr.align\": \"null\", \"class.mat-drawer-end\": \"position === \\\"end\\\"\", \"class.mat-drawer-over\": \"mode === \\\"over\\\"\", \"class.mat-drawer-push\": \"mode === \\\"push\\\"\", \"class.mat-drawer-side\": \"mode === \\\"side\\\"\", \"class.mat-drawer-opened\": \"opened\", \"class.mat-sidenav-fixed\": \"fixedInViewport\", \"style.top.px\": \"fixedInViewport ? fixedTopGap : null\", \"style.bottom.px\": \"fixedInViewport ? fixedBottomGap : null\" }, classAttribute: \"mat-drawer mat-sidenav\" }, exportAs: [\"matSidenav\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\", directives: [{ type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], animations: [matDrawerAnimations.transformDrawer], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenav, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav', exportAs: 'matSidenav', animations: [matDrawerAnimations.transformDrawer], host: {\n                        'class': 'mat-drawer mat-sidenav',\n                        'tabIndex': '-1',\n                        // must prevent the browser from aligning text based on value\n                        '[attr.align]': 'null',\n                        '[class.mat-drawer-end]': 'position === \"end\"',\n                        '[class.mat-drawer-over]': 'mode === \"over\"',\n                        '[class.mat-drawer-push]': 'mode === \"push\"',\n                        '[class.mat-drawer-side]': 'mode === \"side\"',\n                        '[class.mat-drawer-opened]': 'opened',\n                        '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                        '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                        '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\" }]\n        }], propDecorators: { fixedInViewport: [{\n                type: Input\n            }], fixedTopGap: [{\n                type: Input\n            }], fixedBottomGap: [{\n                type: Input\n            }] } });\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavContainer, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSidenavContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSidenavContainer, selector: \"mat-sidenav-container\", host: { properties: { \"class.mat-drawer-container-explicit-backdrop\": \"_backdropOverride\" }, classAttribute: \"mat-drawer-container mat-sidenav-container\" }, providers: [\n        {\n            provide: MAT_DRAWER_CONTAINER,\n            useExisting: MatSidenavContainer,\n        },\n    ], queries: [{ propertyName: \"_content\", first: true, predicate: MatSidenavContent, descendants: true }, { propertyName: \"_allDrawers\", predicate: MatSidenav, descendants: true }], exportAs: [\"matSidenavContainer\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], components: [{ type: MatSidenavContent, selector: \"mat-sidenav-content\" }], directives: [{ type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-sidenav-container', exportAs: 'matSidenavContainer', host: {\n                        'class': 'mat-drawer-container mat-sidenav-container',\n                        '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        {\n                            provide: MAT_DRAWER_CONTAINER,\n                            useExisting: MatSidenavContainer,\n                        },\n                    ], template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\", styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"] }]\n        }], propDecorators: { _allDrawers: [{\n                type: ContentChildren,\n                args: [MatSidenav, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }], _content: [{\n                type: ContentChild,\n                args: [MatSidenavContent]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSidenavModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavModule, declarations: [MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent], imports: [CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule], exports: [CdkScrollableModule,\n        MatCommonModule,\n        MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent] });\nMatSidenavModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavModule, imports: [[CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule], CdkScrollableModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSidenavModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule, PlatformModule, CdkScrollableModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                    declarations: [\n                        MatDrawer,\n                        MatDrawerContainer,\n                        MatDrawerContent,\n                        MatSidenav,\n                        MatSidenavContainer,\n                        MatSidenavContent,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/platform';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatToolbarRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n}\nMatToolbar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });\nMatToolbar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatToolbarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] });\nMatToolbarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n"],"names":["i1$1","Overlay","OverlayConfig","OverlayModule","i3","BasePortalOutlet","CdkPortalOutlet","ComponentPortal","TemplatePortal","PortalModule","i0","EventEmitter","Directive","Optional","Inject","ViewChild","Component","ViewEncapsulation","ChangeDetectionStrategy","InjectionToken","Injector","TemplateRef","InjectFlags","Injectable","SkipSelf","Input","NgModule","MatCommonModule","Directionality","Subject","defer","Subscription","of","filter","take","startWith","_getFocusedElementPierceShadowDom","i2","DOCUMENT","trigger","state","style","transition","animate","i1","ESCAPE","hasModifierKey","ANIMATION_MODULE_TYPE","MatDialogConfig","constructor","role","panelClass","hasBackdrop","backdropClass","disableClose","width","height","maxWidth","data","ariaDescribedBy","ariaLabelledBy","ariaLabel","autoFocus","restoreFocus","closeOnNavigation","matDialogAnimations","dialogContainer","opacity","transform","throwMatDialogContentAlreadyAttachedError","Error","_MatDialogContainerBase","_elementRef","_focusTrapFactory","_changeDetectorRef","_document","_config","_interactivityChecker","_ngZone","_focusMonitor","_animationStateChanged","_elementFocusedBeforeDialogWasOpened","_closeInteractionType","attachDomPortal","portal","_portalOutlet","hasAttached","ngDevMode","_ariaLabelledBy","_initializeWithAttachedContent","_setupFocusTrap","_capturePreviouslyFocusedElement","attachComponentPortal","attachTemplatePortal","_recaptureFocus","_containsFocus","_trapFocus","_forceFocus","element","options","isFocusable","tabIndex","runOutsideAngular","addEventListener","removeAttribute","focus","_focusByCssSelector","selector","elementToFocus","nativeElement","querySelector","_focusTrap","focusInitialElementWhenReady","then","focusedSuccessfully","_focusDialogContainer","_restoreFocus","previousElement","activeElement","body","contains","focusVia","destroy","create","ɵfac","ElementRef","FocusTrapFactory","ChangeDetectorRef","InteractivityChecker","NgZone","FocusMonitor","ɵdir","type","undefined","decorators","args","static","MatDialogContainer","arguments","_state","_onAnimationDone","toState","totalTime","next","_onAnimationStart","_startExitAnimation","markForCheck","ɵcmp","encapsulation","None","changeDetection","Default","animations","host","template","styles","uniqueId","MatDialogRef","_overlayRef","_containerInstance","id","_afterOpened","_afterClosed","_beforeClosed","_id","pipe","event","subscribe","complete","clearTimeout","_closeFallbackTimeout","_finishDialogClose","detachments","_result","componentInstance","dispose","keydownEvents","keyCode","preventDefault","_closeDialogVia","backdropClick","close","dialogResult","detachBackdrop","setTimeout","afterOpened","afterClosed","beforeClosed","updatePosition","position","strategy","_getPositionStrategy","left","right","centerHorizontally","top","bottom","centerVertically","updateSize","addPanelClass","classes","removePanelClass","getState","getConfig","positionStrategy","ref","interactionType","result","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","block","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","_MatDialogBase","_overlay","_injector","_defaultOptions","_parentDialog","_overlayContainer","scrollStrategy","_dialogRefConstructor","_dialogContainerType","_dialogDataToken","_animationMode","_openDialogsAtThisLevel","_afterAllClosedAtThisLevel","_afterOpenedAtThisLevel","_ariaHiddenElements","Map","_dialogAnimatingOpen","afterAllClosed","openDialogs","length","_getAfterAllClosed","_scrollStrategy","parent","open","componentOrTemplateRef","config","_applyConfigDefaults","getDialogById","_lastDialogRef","overlayRef","_createOverlay","_attachDialogContainer","animationStateSubscription","dialogAnimationEvent","unsubscribe","_animationStateSubscriptions","add","dialogRef","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","push","_removeOpenDialog","closeAll","_closeDialogs","find","dialog","ngOnDestroy","overlayConfig","_getOverlayConfig","dialogConfig","global","direction","minWidth","minHeight","maxHeight","disposeOnNavigation","userInjector","viewContainerRef","injector","providers","useValue","containerPortal","componentFactoryResolver","containerRef","attach","instance","$implicit","_createInjector","contentRef","get","value","change","index","indexOf","splice","forEach","previousValue","setAttribute","clear","overlayContainer","getContainerElement","parentElement","siblings","children","i","sibling","nodeName","hasAttribute","set","getAttribute","dialogs","OverlayContainer","Type","MatDialog","location","defaultOptions","parentDialog","animationMode","Location","ɵprov","Object","assign","dialogElementUid","MatDialogClose","_dialog","ngOnInit","getClosestDialog","ngOnChanges","changes","proxiedChange","currentValue","_onButtonClick","screenX","screenY","exportAs","_matDialogClose","MatDialogTitle","_dialogRef","Promise","resolve","container","MatDialogContent","MatDialogActions","classList","MatDialogModule","ɵmod","ɵinj","imports","exports","declarations","coerceBooleanProperty","MatDivider","_vertical","_inset","vertical","inset","OnPush","MatDividerModule","SecurityContext","ErrorHandler","inject","Attribute","mixinColor","throwError","forkJoin","tap","map","catchError","finalize","share","HttpClient","DomSanitizer","policy","getPolicy","window","ttWindow","trustedTypes","createPolicy","createHTML","s","trustedHTMLFromString","html","_a","getMatIconNameNotFoundError","iconName","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","SvgIconConfig","svgText","MatIconRegistry","_httpClient","_sanitizer","document","_errorHandler","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_resolvers","_defaultFontSetClass","addSvgIcon","addSvgIconInNamespace","addSvgIconLiteral","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","addSvgIconResolver","resolver","cleanLiteral","sanitize","HTML","trustedLiteral","addSvgIconSet","addSvgIconSetInNamespace","addSvgIconSetLiteral","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","registerFontClassAlias","alias","className","classNameForFontAlias","setDefaultFontSetClass","getDefaultFontSetClass","getSvgIconFromUrl","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","svg","getNamedSvgIcon","name","key","iconKey","_getSvgFromConfig","_getIconConfigFromResolvers","iconSetConfigs","_getSvgFromIconSetConfigs","_svgElementFromConfig","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","err","errorMessage","message","handleError","foundIcon","toString","_extractSvgIconFromSet","_fetchIcon","iconSet","iconSource","iconElement","cloneNode","toLowerCase","_setSvgAttributes","_toSvgElement","_svgElementFromString","appendChild","str","div","createElement","innerHTML","attributes","childNodes","nodeType","ELEMENT_NODE","viewBox","iconConfig","withCredentials","inProgressFetch","req","responseType","delete","configNamespace","svgElement","isSafeUrlWithOptions","providedIn","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","_MatIconBase","MAT_ICON_LOCATION","factory","MAT_ICON_LOCATION_FACTORY","_location","getPathname","pathname","search","funcIriAttributes","funcIriAttributeSelector","attr","join","funcIriPattern","MatIcon","elementRef","_iconRegistry","ariaHidden","_inline","_currentIconFetch","EMPTY","inline","svgIcon","_svgIcon","_updateSvgIcon","_clearSvgElement","fontSet","_fontSet","newValue","_cleanupFontValue","_updateFontIconClasses","fontIcon","_fontIcon","_splitIconName","parts","split","ngAfterViewChecked","cachedElements","_elementsWithExternalReferences","size","newPath","_previousPath","_prependPathToReferences","_usingFontIcon","_setSvgElement","styleTags","querySelectorAll","textContent","path","_cacheChildrenWithExternalReferences","layoutElement","childCount","child","remove","elem","fontSetClass","_previousFontSetClass","_previousFontIconClass","trim","elements","attrs","elementsWithFuncIri","elementWithReference","match","rawName","_svgNamespace","_svgName","inputs","MatIconModule","CommonModule","ContentChildren","ContentChild","forwardRef","Output","mixinDisabled","mixinDisableRipple","setLines","MatLine","MatLineModule","MatRippleModule","MatPseudoCheckboxModule","takeUntil","FocusKeyManager","SelectionModel","A","ENTER","SPACE","UP_ARROW","DOWN_ARROW","NG_VALUE_ACCESSOR","_MatListBase","_MatListItemMixinBase","MAT_LIST","MAT_NAV_LIST","MatNavList","_stateChanges","useExisting","MatList","_getListType","MatListAvatarCssMatStyler","MatListIconCssMatStyler","MatListSubheaderCssMatStyler","MatListItem","_element","navList","list","_isInteractiveList","_destroyed","_disabled","_list","_getHostElement","disabled","ngAfterContentInit","_lines","_isRippleDisabled","disableRipple","MatRipple","descendants","_avatar","_icon","_MatSelectionListBase","_MatListOptionBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","MatSelectionList","multi","MatSelectionListChange","source","option","MatListOption","_changeDetector","selectionList","_selected","_hasFocus","selectedChange","checkboxPosition","_inputsInitialized","color","_color","_value","selected","compareWith","selectedOptions","isSelected","_setSelected","multiple","_reportValueChange","some","wasSelected","hadFocus","newActiveItem","_removeOptionFromList","toggle","getLabel","_text","_handleClick","_emitChangeEvent","_handleFocus","_setFocusedOption","_handleBlur","_onTouched","select","deselect","emit","_markForCheck","NgIf","MatPseudoCheckbox","_multiple","_contentInitialized","selectionChange","a1","a2","_tabIndex","_onChange","_","_markOptionsForCheck","_keyManager","withWrap","withTypeAhead","withHomeAndEnd","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","tabOut","_allowFocusEscape","_updateTabIndex","changed","added","item","removed","monitor","origin","toFocus","setActiveItem","disableRippleChanges","colorChanges","firstChange","stopMonitoring","_isDestroyed","selectAll","_setAllOptionsSelected","deselectAll","updateActiveItem","optionIndex","_getOptionIndex","activeItemIndex","Math","min","activeItem","_keydown","manager","previousFocusIndex","hasModifier","isTyping","_toggleFocusedOption","shouldSelect","onKeydown","shiftKey","_getSelectedOptionValues","writeValue","values","setDisabledState","isDisabled","registerOnChange","fn","registerOnTouched","correspondingOption","focusedIndex","_isValidIndex","focusedOption","toArray","skipDisabled","isUserInput","changedOptions","MatListModule","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","RIGHT_ARROW","LEFT_ARROW","QueryList","Self","merge","asapScheduler","switchMap","delay","DomPortalOutlet","normalizePassiveListenerOptions","i3$1","CdkScrollableModule","matMenuAnimations","transformMenu","fadeInItems","MAT_MENU_CONTENT","_MatMenuContentBase","_template","_componentFactoryResolver","_appRef","_viewContainerRef","_attached","context","_portal","detach","_outlet","parentNode","insertBefore","outletElement","isAttached","ComponentFactoryResolver","ApplicationRef","ViewContainerRef","MatMenuContent","throwMatMenuMissingError","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","throwMatMenuRecursiveError","MAT_MENU_PANEL","_MatMenuItemBase","MatMenuItem","_parentMenu","_hovered","_focused","_highlighted","_triggersSubmenu","addItem","ngAfterViewInit","removeItem","_getTabIndex","_checkDisabled","stopPropagation","_handleMouseEnter","clone","icons","_setHighlighted","isHighlighted","MAT_MENU_DEFAULT_OPTIONS","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","menuPanelUid","_MatMenuBase","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","_classList","_panelAnimationState","_animationDone","overlayPanelClass","_overlapTrigger","_hasBackdrop","closed","panelId","setPositionClasses","previousPanelClass","_previousPanelClass","_updateDirectDescendants","items","focusedItem","itemChanges","_item","_handleKeydown","parentMenu","setFocusOrigin","focusFirstItem","lazyContent","onStable","_focusFirstItem","setFirstItemActive","first","resetActiveItem","setElevation","depth","elevation","_baseElevation","newElevation","_elevationPrefix","customElevation","keys","startsWith","_previousElevation","posX","posY","_startAnimation","_resetAnimation","_isAnimating","scrollTop","_allItems","reset","notifyOnChanges","ariaLabelledby","ariaDescribedby","templateRef","MatMenu","ngZone","NgClass","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","reposition","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","MENU_PANEL_TOP_PADDING","passiveEventListenerOptions","passive","_MatMenuTriggerBase","_menuItemInstance","_dir","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","menuOpened","onMenuOpen","menuClosed","onMenuClose","_parentMaterialMenu","triggersSubmenu","_deprecatedMatMenuTriggerFor","menu","v","_menu","reason","_destroyMenu","_checkMenu","_handleHover","removeEventListener","menuOpen","dir","toggleMenu","closeMenu","openMenu","_setPosition","_getPortal","menuData","_menuClosingActions","_initMenu","_setIsMenuOpen","_setMenuElevation","isOpen","_subscribeToPositions","flexibleConnectedTo","withLockedPosition","withGrowAfterOpen","withTransformOriginOn","positionChanges","connectionPair","overlayX","overlayY","originX","originFallbackX","overlayFallbackY","originY","originFallbackY","overlayFallbackX","offsetY","withPositions","backdrop","parentClose","hover","active","_handleMousedown","button","MatMenuTrigger","MatMenuModule","PlatformModule","CdkScrollable","i5","coerceNumberProperty","fromEvent","mapTo","distinctUntilChanged","debounceTime","i4","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","MAT_DRAWER_DEFAULT_AUTOSIZE","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","_container","scrollDispatcher","_contentMarginChanges","MatDrawerContainer","ScrollDispatcher","MatDrawer","_platform","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_opened","_animationStarted","_animationEnd","_animationState","openedChange","_openedStream","o","openedStart","e","fromState","_closedStream","closedStart","onPositionChanged","_modeChanged","opened","_takeFocus","_isFocusWithinDrawer","_openedVia","run","x","y","mode","_updateFocusTrapState","_autoFocus","hasMovedFocus","focusOrigin","blur","activeEl","ngAfterContentChecked","isBrowser","openedVia","_closeViaBackdropClick","_setOpen","_getWidth","offsetWidth","enabled","Platform","viewportRuler","defaultAutosize","_drawers","_doCheckSubject","_contentMargins","_validateDrawers","updateContentMargins","_autosize","start","_start","end","_end","autosize","_backdropOverride","scrollable","_userContent","_content","_allDrawers","drawer","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_left","_right","ngDoCheck","_isPushed","_setContainerClass","onMicrotaskEmpty","isAdd","_onBackdropClicked","_closeModalDrawersViaBackdrop","_canHaveBackdrop","_isShowingBackdrop","ViewportRuler","MatSidenavContent","changeDetectorRef","MatSidenavContainer","MatSidenav","_fixedInViewport","_fixedTopGap","_fixedBottomGap","fixedInViewport","fixedTopGap","fixedBottomGap","MatSidenavModule","_MatToolbarBase","MatToolbarRow","MatToolbar","_checkToolbarMixedModes","_toolbarRows","isCombinedUsage","Array","from","node","COMMENT_NODE","throwToolbarMixedModesError","MatToolbarModule"],"sourceRoot":"webpack:///"}