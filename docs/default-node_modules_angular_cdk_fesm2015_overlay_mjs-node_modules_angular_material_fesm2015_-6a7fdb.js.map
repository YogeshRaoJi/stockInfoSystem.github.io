{"version":3,"file":"default-node_modules_angular_cdk_fesm2015_overlay_mjs-node_modules_angular_material_fesm2015_-6a7fdb.js","mappings":";;;;;;;;;;;;;;;;;;AAA2C;AACD;AACH;AACK;AACd;AACvB;AACP;AACA;AACA,YAAY,sDAAO;AACnB;AACA;AACA,YAAY,wDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,sDAAO;AAClD,oDAAoD,mDAAG;AACvD;AACA;AACA;AACA;AACA,eAAe,mDAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS;AACjC,2BAA2B,2CAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qGAAqG;AACrG;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;;;;;;;;;;;;;;;;AC3D2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mDAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMuC,uBAAuB,GAAGhB,6EAAsB,EAAtD;AACA;AACA;AACA;;AACA,MAAMiB,mBAAN,CAA0B;AACtBC,EAAAA,WAAW,CAACC,cAAD,EAAiBC,QAAjB,EAA2B;AAClC,SAAKD,cAAL,GAAsBA,cAAtB;AACA,SAAKE,mBAAL,GAA2B;AAAEC,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,IAAI,EAAE;AAAjB,KAA3B;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,SAAL,GAAiBL,QAAjB;AACH;AACD;;;AACAM,EAAAA,MAAM,GAAG,CAAG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AA3B,EAAkC;AAC9B;AACA,SAAOA,KAAK,IAAI,IAAT,IAAiBA,KAAK,CAAC4F,MAAN,KAAiB,CAAzC;AACH;;AACD,SAASid,cAAT,CAAwB7iB,KAAxB,EAA+B;AAC3B;AACA,SAAOA,KAAK,IAAI,IAAT,IAAiB,OAAOA,KAAK,CAAC4F,MAAb,KAAwB,QAAhD;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMkd,aAAa,GAAG,IAAIxsB,yDAAJ,CAAmB,cAAnB,CAAtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMysB,mBAAmB,GAAG,IAAIzsB,yDAAJ,CAAmB,mBAAnB,CAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAM0sB,YAAY,GAAG,oMAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAN,CAAiB;AACb;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACc,SAAH9T,GAAG,CAACA,GAAD,EAAM;AACZ,WAAO+T,YAAY,CAAC/T,GAAD,CAAnB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACc,SAAHnB,GAAG,CAACA,GAAD,EAAM;AACZ,WAAOmV,YAAY,CAACnV,GAAD,CAAnB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACmB,SAARoV,QAAQ,CAACC,OAAD,EAAU;AACrB,WAAOC,iBAAiB,CAACD,OAAD,CAAxB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACuB,SAAZE,YAAY,CAACF,OAAD,EAAU;AACzB,WAAOG,qBAAqB,CAACH,OAAD,CAA5B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACgB,SAALI,KAAK,CAACJ,OAAD,EAAU;AAClB,WAAOK,cAAc,CAACL,OAAD,CAArB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACoB,SAATM,SAAS,CAACA,SAAD,EAAY;AACxB,WAAOC,kBAAkB,CAACD,SAAD,CAAzB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACoB,SAATE,SAAS,CAACA,SAAD,EAAY;AACxB,WAAOC,kBAAkB,CAACD,SAAD,CAAzB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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D0D,CAE1D;AACA;AACA;;AACA,aAAKoC,SAAL,CAAe7M,MAAf,EAAuB;AAAE6L,UAAAA;AAAF,SAAvB;AACH,OANmC,CAApC;AAOH;AACJ;;AACDQ,EAAAA,2BAA2B,GAAG;AAC1B,QAAI,KAAKO,4BAAT,EAAuC;AACnC,WAAKA,4BAAL,CAAkCj2B,WAAlC;;AACA,WAAK8zB,4BAAL,GAAoC,KAApC;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIoC,EAAAA,SAAS,CAAC7M,MAAD,EAASoL,IAAI,GAAG,EAAhB,EAAoB;AACzB,SAAKpL,MAAL,GAAcA,MAAd;;AACA,SAAK8M,qBAAL,CAA2B1B,IAAI,CAACS,SAAL,KAAmB,KAA9C;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIjb,EAAAA,GAAG,CAAC6R,IAAD,EAAO;AACN,WAAOkH,KAAK,CAAC,IAAD,EAAOlH,IAAP,EAAa,GAAb,CAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIU,EAAAA,QAAQ,CAACD,SAAD,EAAYT,IAAZ,EAAkB;AACtB,UAAMvE,OAAO,GAAGuE,IAAI,GAAG,KAAK7R,GAAL,CAAS6R,IAAT,CAAH,GAAoB,IAAxC;AACA,WAAOvE,OAAO,IAAIA,OAAO,CAAC8B,MAAnB,GAA4B9B,OAAO,CAAC8B,MAAR,CAAekD,SAAf,CAA5B,GAAwD,IAA/D;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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U,CAAC,MAAMuU,MAAP;AAFK,CAAhC;;AAIA,MAAMC,iBAAiB,GAAG,CAAC,MAAMC,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP,GAA1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMH,MAAN,SAAqB5L,gBAArB,CAAsC;AAClCzwB,EAAAA,WAAW,CAACgsB,UAAD,EAAaqH,eAAb,EAA8B;AACrC;AACA;AACR;AACA;AACA;;AACQ,SAAKpC,SAAL,GAAiB,KAAjB;AACA,SAAKwL,WAAL,GAAmB,EAAnB;AACA;AACR;AACA;AACA;;AACQ,SAAKC,QAAL,GAAgB,IAAIr+B,uDAAJ,EAAhB;AACA,SAAKg3B,IAAL,GACI,IAAIyB,SAAJ,CAAc,EAAd,EAAkBvJ,iBAAiB,CAACvB,UAAD,CAAnC,EAAiDyB,sBAAsB,CAAC4F,eAAD,CAAvE,CADJ;AAEH;AACD;;;AACAtN,EAAAA,eAAe,GAAG;AACd,SAAKuU,kBAAL;AACH;AACD;AACJ;AACA;AACA;;;AACqB,MAAb5J,aAAa,GAAG;AAChB,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;AACe,MAAPxF,OAAO,GAAG;AACV,WAAO,KAAKmK,IAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACY,MAAJ5F,IAAI,GAAG;AACP,WAAO,EAAP;AACH;AACD;AACJ;AACA;AACA;;;AACgB,MAARsH,QAAQ,GAAG;AACX,WAAO,KAAK1B,IAAL,CAAU0B,QAAjB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACImE,EAAAA,UAAU,CAACzvB,GAAD,EAAM;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AAM5B,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP,GAAxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM0B,OAAN,SAAsB9N,SAAtB,CAAgC;AAC5BpwB,EAAAA,WAAW,CAACqb,MAAD,EAAS2Q,UAAT,EAAqBqH,eAArB,EAAsCoC,cAAtC,EAAsD;AAC7D;AACA,SAAKvK,OAAL,GAAe,IAAIsP,WAAJ,EAAf;AACA;;AACA,SAAK4D,WAAL,GAAmB,KAAnB;AACA;AACR;AACA;AACA;AACA;;AACQ,SAAKC,MAAL,GAAc,IAAIhgC,uDAAJ,EAAd;AACA,SAAKiyB,OAAL,GAAejV,MAAf;;AACA,SAAKqU,cAAL,CAAoB1D,UAApB;;AACA,SAAK4D,mBAAL,CAAyByD,eAAzB;;AACA,SAAK7C,aAAL,GAAqBgF,mBAAmB,CAAC,IAAD,EAAOC,cAAP,CAAxC;AACH;AACD;;;AACAzV,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,SAAKqe,eAAL;;AACA,QAAI,CAAC,KAAKF,WAAV,EACI,KAAKG,aAAL;;AACJ,QAAI,gBAAgBte,OAApB,EAA6B;AACzB,WAAKue,eAAL,CAAqBve,OAArB;AACH;;AACD,QAAI8U,iBAAiB,CAAC9U,OAAD,EAAU,KAAK+U,SAAf,CAArB,EAAgD;AAC5C,WAAKgE,YAAL,CAAkB,KAAKyF,KAAvB;;AACA,WAAKzJ,SAAL,GAAiB,KAAKyJ,KAAtB;A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","sources":["./node_modules/rxjs/_esm2015/internal/observable/forkJoin.js","./node_modules/rxjs/_esm2015/internal/operators/takeWhile.js","./node_modules/@angular/cdk/fesm2015/overlay.mjs","./node_modules/@angular/cdk/fesm2015/text-field.mjs","./node_modules/@angular/forms/fesm2015/forms.mjs","./node_modules/@angular/material/fesm2015/button.mjs","./node_modules/@angular/material/fesm2015/form-field.mjs","./node_modules/@angular/material/fesm2015/input.mjs"],"sourcesContent":["import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { map } from '../operators/map';\nimport { isObject } from '../util/isObject';\nimport { from } from './from';\nexport function forkJoin(...sources) {\n    if (sources.length === 1) {\n        const first = sources[0];\n        if (isArray(first)) {\n            return forkJoinInternal(first, null);\n        }\n        if (isObject(first) && Object.getPrototypeOf(first) === Object.prototype) {\n            const keys = Object.keys(first);\n            return forkJoinInternal(keys.map(key => first[key]), keys);\n        }\n    }\n    if (typeof sources[sources.length - 1] === 'function') {\n        const resultSelector = sources.pop();\n        sources = (sources.length === 1 && isArray(sources[0])) ? sources[0] : sources;\n        return forkJoinInternal(sources, null).pipe(map((args) => resultSelector(...args)));\n    }\n    return forkJoinInternal(sources, null);\n}\nfunction forkJoinInternal(sources, keys) {\n    return new Observable(subscriber => {\n        const len = sources.length;\n        if (len === 0) {\n            subscriber.complete();\n            return;\n        }\n        const values = new Array(len);\n        let completed = 0;\n        let emitted = 0;\n        for (let i = 0; i < len; i++) {\n            const source = from(sources[i]);\n            let hasValue = false;\n            subscriber.add(source.subscribe({\n                next: value => {\n                    if (!hasValue) {\n                        hasValue = true;\n                        emitted++;\n                    }\n                    values[i] = value;\n                },\n                error: err => subscriber.error(err),\n                complete: () => {\n                    completed++;\n                    if (completed === len || !hasValue) {\n                        if (emitted === len) {\n                            subscriber.next(keys ?\n                                keys.reduce((result, key, i) => (result[key] = values[i], result), {}) :\n                                values);\n                        }\n                        subscriber.complete();\n                    }\n                }\n            }));\n        }\n    });\n}\n","import { Subscriber } from '../Subscriber';\nexport function takeWhile(predicate, inclusive = false) {\n    return (source) => source.lift(new TakeWhileOperator(predicate, inclusive));\n}\nclass TakeWhileOperator {\n    constructor(predicate, inclusive) {\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n    }\n}\nclass TakeWhileSubscriber extends Subscriber {\n    constructor(destination, predicate, inclusive) {\n        super(destination);\n        this.predicate = predicate;\n        this.inclusive = inclusive;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        let result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    }\n    nextOrComplete(value, predicateResult) {\n        const destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            if (this.inclusive) {\n                destination.next(value);\n            }\n            destination.complete();\n        }\n    }\n}\n","import * as i1 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport * as i6 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, ElementRef, ApplicationRef, InjectionToken, Directive, EventEmitter, Optional, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { supportsScrollBehavior, _isTestEnvironment, _getEventTarget } from '@angular/cdk/platform';\nimport * as i5 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { take, takeUntil, takeWhile } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst scrollBehaviorSupported = supportsScrollBehavior();\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n            // because it can throw off feature detections in `supportsScrollBehavior` which\n            // checks for `'scrollBehavior' in documentElement.style`.\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            }\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n                bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n            }\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const body = this._document.body;\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /** Detaches the overlay ref and disables the scroll strategy. */\n        this._detach = () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run(() => this._overlayRef.detach());\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /** Do nothing on scroll. */\n        this.noop = () => new NoopScrollStrategy();\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n        /** Block scrolling. */\n        this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScrollStrategyOptions, deps: [{ token: i1.ScrollDispatcher }, { token: i1.ViewportRuler }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nScrollStrategyOptions.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScrollStrategyOptions, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScrollStrategyOptions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i1.ScrollDispatcher }, { type: i1.ViewportRuler }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    constructor(config) {\n        /** Strategy to be used when handling scroll events while the overlay is open. */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /** Custom class to add to the overlay pane. */\n        this.panelClass = '';\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n    constructor(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (event) => this._backdropClick.next(event);\n        /** Stream of keydown events dispatched to this overlay. */\n        this._keydownEvents = new Subject();\n        /** Stream of mouse outside events dispatched to this overlay. */\n        this._outsidePointerEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        if (this._config.disposeOnNavigation) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        this._outsideClickDispatcher.add(this);\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        this._locationChanges.unsubscribe();\n        this._outsideClickDispatcher.remove(this);\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        var _a;\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this._disposeBackdrop(this._backdropElement);\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        this._outsidePointerEvents.complete();\n        this._outsideClickDispatcher.remove(this);\n        (_a = this._host) === null || _a === void 0 ? void 0 : _a.remove();\n        this._previousHostParent = this._pane = this._host = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick;\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments;\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments;\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents;\n    }\n    /** Gets an observable of pointer events targeted outside this overlay. */\n    outsidePointerEvents() {\n        return this._outsidePointerEvents;\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        const backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        let timeoutId;\n        const finishDetach = () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                this._disposeBackdrop(backdropToDetach);\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses(backdropToDetach, this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        };\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular(() => {\n            backdropToDetach.addEventListener('transitionend', finishDetach);\n        });\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular(() => setTimeout(finishDetach, 500));\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classes = coerceArray(cssClasses || []).filter(c => !!c);\n        if (classes.length) {\n            isAdd ? element.classList.add(...classes) : element.classList.remove(...classes);\n        }\n    }\n    /** Detaches the overlay content next time the zone stabilizes. */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(() => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            const subscription = this._ngZone.onStable\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe(() => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._host.remove();\n                    }\n                    subscription.unsubscribe();\n                }\n            });\n        });\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n    /** Removes a backdrop element from the DOM. */\n    _disposeBackdrop(backdrop) {\n        if (backdrop) {\n            backdrop.remove();\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement === backdrop) {\n                this._backdropElement = null;\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    ngOnDestroy() {\n        var _a;\n        (_a = this._containerElement) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const containerClass = 'cdk-overlay-container';\n        // TODO(crisbeto): remove the testing check once we have an overlay testing\n        // module or Angular starts tearing down the testing `NgModule`. See:\n        // https://github.com/angular/angular/issues/18831\n        if (this._platform.isBrowser || _isTestEnvironment()) {\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` + `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].remove();\n            }\n        }\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (_isTestEnvironment()) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!this._platform.isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayContainer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayContainer, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1$1.Platform }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /** Whether the overlay was pushed in a previous positioning. */\n        this._isPushed = false;\n        /** Whether the overlay can be pushed on-screen on the initial open. */\n        this._canPush = true;\n        /** Whether the overlay can grow via flexible width/height after the initial open. */\n        this._growAfterOpen = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this._hasFlexibleDimensions = true;\n        /** Whether the overlay position is locked. */\n        this._positionLocked = false;\n        /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n        this._viewportMargin = 0;\n        /** The Scrollable containers used to check scrollable view properties on position change. */\n        this._scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        /** Subject that emits whenever the position changes. */\n        this._positionChanges = new Subject();\n        /** Subscription to viewport size changes. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Default offset for the overlay along the x axis. */\n        this._offsetX = 0;\n        /** Default offset for the overlay along the y axis. */\n        this._offsetY = 0;\n        /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n        this._appliedPanelClasses = [];\n        /** Observable sequence of position changes. */\n        this.positionChanges = this._positionChanges;\n        this.setOrigin(connectedTo);\n    }\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef &&\n            overlayRef !== this._overlayRef &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos),\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + originRect.width / 2;\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + originRect.height / 2;\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, rawOverlayRect, viewport, position) {\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = x + overlay.width - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = y + overlay.height - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: overlay.width * overlay.height === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlat at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically || (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally || (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param overlay Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y,\n            };\n        }\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? viewport.left - scrollPosition.left - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? viewport.top - scrollPosition.top - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollableViewProperties = this._getScrollVisibility();\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - previousHeight / 2;\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) || (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) || (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - previousWidth / 2;\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        let virtualKeyboardOffset = this._overlayContainer\n            .getContainerElement()\n            .getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - 2 * this._viewportMargin,\n            height: height - 2 * this._viewportMargin,\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._preferredPositions.length) {\n                throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n            }\n            // TODO(crisbeto): remove these once Angular's template type\n            // checking is advanced enough to catch these cases.\n            this._preferredPositions.forEach(pair => {\n                validateHorizontalPosition('originX', pair.originX);\n                validateVerticalPosition('originY', pair.originY);\n                validateHorizontalPosition('overlayX', pair.overlayX);\n                validateVerticalPosition('overlayY', pair.overlayY);\n            });\n        }\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the ClientRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width,\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return !units || units === 'px' ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n/**\n * Gets a version of an element's bounding `ClientRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `ClientRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n    return {\n        top: Math.floor(clientRect.top),\n        right: Math.floor(clientRect.right),\n        bottom: Math.floor(clientRect.bottom),\n        left: Math.floor(clientRect.left),\n        width: Math.floor(clientRect.width),\n        height: Math.floor(clientRect.height),\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._rightOffset = '';\n        this._leftOffset = value;\n        this._justifyContent = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._leftOffset = '';\n        this._rightOffset = value;\n        this._justifyContent = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._justifyContent = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent =\n            parentStyles.alignItems =\n                styles.marginTop =\n                    styles.marginBottom =\n                        styles.marginLeft =\n                            styles.marginRight =\n                                styles.position =\n                                    '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayPositionBuilder, deps: [{ token: i1.ViewportRuler }, { token: DOCUMENT }, { token: i1$1.Platform }, { token: OverlayContainer }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayPositionBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayPositionBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayPositionBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i1.ViewportRuler }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1$1.Platform }, { type: OverlayContainer }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n    constructor(document) {\n        /** Currently attached overlays in the order they were attached. */\n        this._attachedOverlays = [];\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this.detach();\n        }\n    }\n}\nBaseOverlayDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseOverlayDispatcher, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nBaseOverlayDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseOverlayDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseOverlayDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    constructor(document) {\n        super(document);\n        /** Keyboard event listener that will be attached to the body. */\n        this._keydownListener = (event) => {\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayKeyboardDispatcher, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayKeyboardDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayKeyboardDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayKeyboardDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    constructor(document, _platform) {\n        super(document);\n        this._platform = _platform;\n        this._cursorStyleIsSet = false;\n        /** Store pointerdown event target to track origin of click. */\n        this._pointerDownListener = (event) => {\n            this._pointerDownEventTarget = _getEventTarget(event);\n        };\n        /** Click event listener that will be attached to the body propagate phase. */\n        this._clickListener = (event) => {\n            const target = _getEventTarget(event);\n            // In case of a click event, we want to check the origin of the click\n            // (e.g. in case where a user starts a click inside the overlay and\n            // releases the click outside of it).\n            // This is done by using the event target of the preceding pointerdown event.\n            // Every click event caused by a pointer device has a preceding pointerdown\n            // event, unless the click was programmatically triggered (e.g. in a unit test).\n            const origin = event.type === 'click' && this._pointerDownEventTarget\n                ? this._pointerDownEventTarget\n                : target;\n            // Reset the stored pointerdown event target, to avoid having it interfere\n            // in subsequent events.\n            this._pointerDownEventTarget = null;\n            // We copy the array because the original may be modified asynchronously if the\n            // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n            // the for loop.\n            const overlays = this._attachedOverlays.slice();\n            // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n            // We want to target all overlays for which the click could be considered as outside click.\n            // As soon as we reach an overlay for which the click is not outside click we break off\n            // the loop.\n            for (let i = overlays.length - 1; i > -1; i--) {\n                const overlayRef = overlays[i];\n                if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n                    continue;\n                }\n                // If it's a click inside the overlay, just break - we should do nothing\n                // If it's an outside click (both origin and target of the click) dispatch the mouse event,\n                // and proceed with the next overlay\n                if (overlayRef.overlayElement.contains(target) ||\n                    overlayRef.overlayElement.contains(origin)) {\n                    break;\n                }\n                overlayRef._outsidePointerEvents.next(event);\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Safari on iOS does not generate click events for non-interactive\n        // elements. However, we want to receive a click for any element outside\n        // the overlay. We can force a \"clickable\" state by setting\n        // `cursor: pointer` on the document body. See:\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n        // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n        if (!this._isAttached) {\n            const body = this._document.body;\n            body.addEventListener('pointerdown', this._pointerDownListener, true);\n            body.addEventListener('click', this._clickListener, true);\n            body.addEventListener('auxclick', this._clickListener, true);\n            body.addEventListener('contextmenu', this._clickListener, true);\n            // click event is not fired on iOS. To make element \"clickable\" we are\n            // setting the cursor to pointer\n            if (this._platform.IOS && !this._cursorStyleIsSet) {\n                this._cursorOriginalValue = body.style.cursor;\n                body.style.cursor = 'pointer';\n                this._cursorStyleIsSet = true;\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            const body = this._document.body;\n            body.removeEventListener('pointerdown', this._pointerDownListener, true);\n            body.removeEventListener('click', this._clickListener, true);\n            body.removeEventListener('auxclick', this._clickListener, true);\n            body.removeEventListener('contextmenu', this._clickListener, true);\n            if (this._platform.IOS && this._cursorStyleIsSet) {\n                body.style.cursor = this._cursorOriginalValue;\n                this._cursorStyleIsSet = false;\n            }\n            this._isAttached = false;\n        }\n    }\n}\nOverlayOutsideClickDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayOutsideClickDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1$1.Platform }];\n    } });\n\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    constructor(\n    /** Scrolling strategies that can be used when creating an overlay. */\n    scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location, _outsideClickDispatcher) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n        const host = this._createHostElement();\n        const pane = this._createPaneElement(host);\n        const portalOutlet = this._createPortalOutlet(pane);\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(host) {\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @returns Newly-create host element.\n     */\n    _createHostElement() {\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal outlet.\n     * @returns A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Overlay, deps: [{ token: ScrollStrategyOptions }, { token: OverlayContainer }, { token: i0.ComponentFactoryResolver }, { token: OverlayPositionBuilder }, { token: OverlayKeyboardDispatcher }, { token: i0.Injector }, { token: i0.NgZone }, { token: DOCUMENT }, { token: i5.Directionality }, { token: i6.Location }, { token: OverlayOutsideClickDispatcher }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlay.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Overlay });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Overlay, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: i0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: i0.Injector }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i5.Directionality }, { type: i6.Location }, { type: OverlayOutsideClickDispatcher }];\n    } });\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n    },\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkOverlayOrigin, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkOverlayOrigin.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkOverlayOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                    exportAs: 'cdkOverlayOrigin',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        this._attachSubscription = Subscription.EMPTY;\n        this._detachSubscription = Subscription.EMPTY;\n        this._positionSubscription = Subscription.EMPTY;\n        /** Margin between the overlay and the viewport edges. */\n        this.viewportMargin = 0;\n        /** Whether the overlay is open. */\n        this.open = false;\n        /** Whether the overlay can be closed by user interaction. */\n        this.disableClose = false;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Event emitted when the position has changed. */\n        this.positionChange = new EventEmitter();\n        /** Event emitted when the overlay has been attached. */\n        this.attach = new EventEmitter();\n        /** Event emitted when the overlay has been detached. */\n        this.detach = new EventEmitter();\n        /** Emits when there are keyboard events that are targeted at the overlay. */\n        this.overlayKeydown = new EventEmitter();\n        /** Emits when there are mouse outside click events that are targeted at the overlay. */\n        this.overlayOutsideClick = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() {\n        return this._offsetX;\n    }\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() {\n        return this._offsetY;\n    }\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** Whether or not the overlay should attach a backdrop. */\n    get hasBackdrop() {\n        return this._hasBackdrop;\n    }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /** Whether or not the overlay should be locked when scrolling. */\n    get lockPosition() {\n        return this._lockPosition;\n    }\n    set lockPosition(value) {\n        this._lockPosition = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    get flexibleDimensions() {\n        return this._flexibleDimensions;\n    }\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n    get growAfterOpen() {\n        return this._growAfterOpen;\n    }\n    set growAfterOpen(value) {\n        this._growAfterOpen = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    get push() {\n        return this._push;\n    }\n    set push(value) {\n        this._push = coerceBooleanProperty(value);\n    }\n    /** The associated overlay reference. */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n        this._attachSubscription.unsubscribe();\n        this._detachSubscription.unsubscribe();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n    }\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        const overlayRef = (this._overlayRef = this._overlay.create(this._buildConfig()));\n        this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n        this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n        overlayRef.keydownEvents().subscribe((event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        });\n        this._overlayRef.outsidePointerEvents().subscribe((event) => {\n            this.overlayOutsideClick.next(event);\n        });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n        const positionStrategy = (this._position =\n            this.positionStrategy || this._createPositionStrategy());\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop,\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n        const positions = this.positions.map(currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }));\n        return positionStrategy\n            .setOrigin(this._getFlexibleConnectedPositionStrategyOrigin())\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this._getFlexibleConnectedPositionStrategyOrigin());\n        this._updatePositionStrategy(strategy);\n        return strategy;\n    }\n    _getFlexibleConnectedPositionStrategyOrigin() {\n        if (this.origin instanceof CdkOverlayOrigin) {\n            return this.origin.elementRef;\n        }\n        else {\n            return this.origin;\n        }\n    }\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n        this._positionSubscription.unsubscribe();\n        // Only subscribe to `positionChanges` if requested, because putting\n        // together all the information for it can be expensive.\n        if (this.positionChange.observers.length > 0) {\n            this._positionSubscription = this._position.positionChanges\n                .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n                .subscribe(position => {\n                this.positionChange.emit(position);\n                if (this.positionChange.observers.length === 0) {\n                    this._positionSubscription.unsubscribe();\n                }\n            });\n        }\n    }\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n        }\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkConnectedOverlay, deps: [{ token: Overlay }, { token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY }, { token: i5.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkConnectedOverlay.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: { origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], disableClose: [\"cdkConnectedOverlayDisableClose\", \"disableClose\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\", overlayOutsideClick: \"overlayOutsideClick\" }, exportAs: [\"cdkConnectedOverlay\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkConnectedOverlay, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                    exportAs: 'cdkConnectedOverlay',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: Overlay }, { type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n                    }] }, { type: i5.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { origin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOrigin']\n            }], positions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositions']\n            }], positionStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositionStrategy']\n            }], offsetX: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetX']\n            }], offsetY: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetY']\n            }], width: [{\n                type: Input,\n                args: ['cdkConnectedOverlayWidth']\n            }], height: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHeight']\n            }], minWidth: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinWidth']\n            }], minHeight: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinHeight']\n            }], backdropClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayBackdropClass']\n            }], panelClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPanelClass']\n            }], viewportMargin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayViewportMargin']\n            }], scrollStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayScrollStrategy']\n            }], open: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOpen']\n            }], disableClose: [{\n                type: Input,\n                args: ['cdkConnectedOverlayDisableClose']\n            }], transformOriginSelector: [{\n                type: Input,\n                args: ['cdkConnectedOverlayTransformOriginOn']\n            }], hasBackdrop: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHasBackdrop']\n            }], lockPosition: [{\n                type: Input,\n                args: ['cdkConnectedOverlayLockPosition']\n            }], flexibleDimensions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayFlexibleDimensions']\n            }], growAfterOpen: [{\n                type: Input,\n                args: ['cdkConnectedOverlayGrowAfterOpen']\n            }], push: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPush']\n            }], backdropClick: [{\n                type: Output\n            }], positionChange: [{\n                type: Output\n            }], attach: [{\n                type: Output\n            }], detach: [{\n                type: Output\n            }], overlayKeydown: [{\n                type: Output\n            }], overlayOutsideClick: [{\n                type: Output\n            }] } });\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass OverlayModule {\n}\nOverlayModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nOverlayModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayModule, declarations: [CdkConnectedOverlay, CdkOverlayOrigin], imports: [BidiModule, PortalModule, ScrollingModule], exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule] });\nOverlayModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayModule, providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER], imports: [[BidiModule, PortalModule, ScrollingModule], ScrollingModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, PortalModule, ScrollingModule],\n                    exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                    declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                    providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    constructor(_document, platform) {\n        super(_document, platform);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n    }\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        const fullscreenElement = this.getFullscreenElement();\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    _addFullscreenChangeListener(fn) {\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            const _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n        const _document = this._document;\n        return (_document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null);\n    }\n}\nFullscreenOverlayContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: FullscreenOverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nFullscreenOverlayContainer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: FullscreenOverlayContainer, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: FullscreenOverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1$1.Platform }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition };\n","import * as i1 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions, PlatformModule } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            },\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AutofillMonitor, deps: [{ token: i1.Platform }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nAutofillMonitor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AutofillMonitor, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AutofillMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: i0.NgZone }]; } });\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAutofill, deps: [{ token: i0.ElementRef }, { token: AutofillMonitor }], target: i0.ɵɵFactoryTarget.Directive });\nCdkAutofill.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkAutofill, selector: \"[cdkAutofill]\", outputs: { cdkAutofill: \"cdkAutofill\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAutofill, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAutofill]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: AutofillMonitor }]; }, propDecorators: { cdkAutofill: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._isViewInited = false;\n        /** Handles `focus` and `blur` events. */\n        this._handleFocusEvent = (event) => {\n            this._hasFocus = event.type === 'focus';\n        };\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() {\n        return this._minRows;\n    }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() {\n        return this._maxRows;\n    }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    get placeholder() {\n        return this._textareaElement.placeholder;\n    }\n    set placeholder(value) {\n        this._cachedPlaceholderHeight = undefined;\n        this._textareaElement.placeholder = value;\n        this._cacheTextareaPlaceholderHeight();\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ? `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ? `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n                this._textareaElement.addEventListener('focus', this._handleFocusEvent);\n                this._textareaElement.addEventListener('blur', this._handleFocusEvent);\n            });\n            this._isViewInited = true;\n            this.resizeToFitContent(true);\n        }\n    }\n    ngOnDestroy() {\n        this._textareaElement.removeEventListener('focus', this._handleFocusEvent);\n        this._textareaElement.removeEventListener('blur', this._handleFocusEvent);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        textareaClone.remove();\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    _measureScrollHeight() {\n        const element = this._textareaElement;\n        const previousMargin = element.style.marginBottom || '';\n        const isFirefox = this._platform.FIREFOX;\n        const needsMarginFiller = isFirefox && this._hasFocus;\n        const measuringClass = isFirefox\n            ? 'cdk-textarea-autosize-measuring-firefox'\n            : 'cdk-textarea-autosize-measuring';\n        // In some cases the page might move around while we're measuring the `textarea` on Firefox. We\n        // work around it by assigning a temporary margin with the same height as the `textarea` so that\n        // it occupies the same amount of space. See #23233.\n        if (needsMarginFiller) {\n            element.style.marginBottom = `${element.clientHeight}px`;\n        }\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        element.classList.add(measuringClass);\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const scrollHeight = element.scrollHeight - 4;\n        element.classList.remove(measuringClass);\n        if (needsMarginFiller) {\n            element.style.marginBottom = previousMargin;\n        }\n        return scrollHeight;\n    }\n    _cacheTextareaPlaceholderHeight() {\n        if (!this._isViewInited || this._cachedPlaceholderHeight != undefined) {\n            return;\n        }\n        if (!this.placeholder) {\n            this._cachedPlaceholderHeight = 0;\n            return;\n        }\n        const value = this._textareaElement.value;\n        this._textareaElement.value = this._textareaElement.placeholder;\n        this._cachedPlaceholderHeight = this._measureScrollHeight();\n        this._textareaElement.value = value;\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        this._cacheTextareaPlaceholderHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const scrollHeight = this._measureScrollHeight();\n        const height = Math.max(scrollHeight, this._cachedPlaceholderHeight || 0);\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && this._hasFocus) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTextareaAutosize, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTextareaAutosize.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkTextareaAutosize, selector: \"textarea[cdkTextareaAutosize]\", inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"], placeholder: \"placeholder\" }, host: { attributes: { \"rows\": \"1\" }, listeners: { \"input\": \"_noopInputHandler()\" }, classAttribute: \"cdk-textarea-autosize\" }, exportAs: [\"cdkTextareaAutosize\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTextareaAutosize, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'textarea[cdkTextareaAutosize]',\n                    exportAs: 'cdkTextareaAutosize',\n                    host: {\n                        'class': 'cdk-textarea-autosize',\n                        // Textarea elements that have the directive applied should have a single row by default.\n                        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                        'rows': '1',\n                        '(input)': '_noopInputHandler()',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { minRows: [{\n                type: Input,\n                args: ['cdkAutosizeMinRows']\n            }], maxRows: [{\n                type: Input,\n                args: ['cdkAutosizeMaxRows']\n            }], enabled: [{\n                type: Input,\n                args: ['cdkTextareaAutosize']\n            }], placeholder: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TextFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTextFieldModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TextFieldModule, declarations: [CdkAutofill, CdkTextareaAutosize], imports: [PlatformModule], exports: [CdkAutofill, CdkTextareaAutosize] });\nTextFieldModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TextFieldModule, imports: [[PlatformModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TextFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [CdkAutofill, CdkTextareaAutosize],\n                    imports: [PlatformModule],\n                    exports: [CdkAutofill, CdkTextareaAutosize],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n","/**\n * @license Angular v13.1.1\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, forwardRef, Optional, Inject, ɵisPromise, ɵisObservable, Self, EventEmitter, Input, Host, SkipSelf, Output, NgModule, Injectable, Version } from '@angular/core';\nimport { ɵgetDOM } from '@angular/common';\nimport { from, forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class for all ControlValueAccessor classes defined in Forms package.\n * Contains common logic and utility functions.\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BaseControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * The registered callback function called when a change or input event occurs on the input\n         * element.\n         * @nodoc\n         */\n        this.onChange = (_) => { };\n        /**\n         * The registered callback function called when a blur event occurs on the input element.\n         * @nodoc\n         */\n        this.onTouched = () => { };\n    }\n    /**\n     * Helper method that sets a property on a target element using the current Renderer\n     * implementation.\n     * @nodoc\n     */\n    setProperty(key, value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, key, value);\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the range input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n        this.setProperty('disabled', isDisabled);\n    }\n}\nBaseControlValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BaseControlValueAccessor, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nBaseControlValueAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: BaseControlValueAccessor, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BaseControlValueAccessor, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; } });\n/**\n * Base class for all built-in ControlValueAccessor classes (except DefaultValueAccessor, which is\n * used in case no other CVAs can be found). We use this class to distinguish between default CVA,\n * built-in CVAs and custom CVAs, so that Forms logic can recognize built-in CVAs and treat custom\n * ones with higher priority (when both built-in and custom CVAs are present).\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BuiltInControlValueAccessor extends BaseControlValueAccessor {\n}\nBuiltInControlValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BuiltInControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nBuiltInControlValueAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: BuiltInControlValueAccessor, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BuiltInControlValueAccessor, decorators: [{\n            type: Directive\n        }] });\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nconst NG_VALUE_ACCESSOR = new InjectionToken('NgValueAccessor');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessor),\n    multi: true,\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass CheckboxControlValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"checked\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.setProperty('checked', value);\n    }\n}\nCheckboxControlValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: CheckboxControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nCheckboxControlValueAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\", host: { listeners: { \"change\": \"onChange($event.target.checked)\", \"blur\": \"onTouched()\" } }, providers: [CHECKBOX_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: CheckboxControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                    host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                    providers: [CHECKBOX_VALUE_ACCESSOR]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultValueAccessor),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n    const userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = new InjectionToken('CompositionEventMode');\n/**\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * {@searchKeywords ngDefaultControl}\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * This value accessor is used by default for `<input type=\"text\">` and `<textarea>` elements, but\n * you could also use it for custom components that have similar behavior and do not require special\n * processing. In order to attach the default value accessor to a custom element, add the\n * `ngDefaultControl` attribute as shown below.\n *\n * ```\n * <custom-input-component ngDefaultControl [(ngModel)]=\"value\"></custom-input-component>\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass DefaultValueAccessor extends BaseControlValueAccessor {\n    constructor(renderer, elementRef, _compositionMode) {\n        super(renderer, elementRef);\n        this._compositionMode = _compositionMode;\n        /** Whether the user is creating a composition string (IME events). */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        const normalizedValue = value == null ? '' : value;\n        this.setProperty('value', normalizedValue);\n    }\n    /** @internal */\n    _handleInput(value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    }\n    /** @internal */\n    _compositionStart() {\n        this._composing = true;\n    }\n    /** @internal */\n    _compositionEnd(value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    }\n}\nDefaultValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DefaultValueAccessor, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: COMPOSITION_BUFFER_MODE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nDefaultValueAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\", host: { listeners: { \"input\": \"$any(this)._handleInput($event.target.value)\", \"blur\": \"onTouched()\", \"compositionstart\": \"$any(this)._compositionStart()\", \"compositionend\": \"$any(this)._compositionEnd($event.target.value)\" } }, providers: [DEFAULT_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: DefaultValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                    // TODO: vsavkin replace the above selector with the one below it once\n                    // https://github.com/angular/angular/issues/3011 is implemented\n                    // selector: '[ngModel],[formControl],[formControlName]',\n                    host: {\n                        '(input)': '$any(this)._handleInput($event.target.value)',\n                        '(blur)': 'onTouched()',\n                        '(compositionstart)': '$any(this)._compositionStart()',\n                        '(compositionend)': '$any(this)._compositionEnd($event.target.value)'\n                    },\n                    providers: [DEFAULT_VALUE_ACCESSOR]\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [COMPOSITION_BUFFER_MODE]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\nfunction hasValidLength(value) {\n    // non-strict comparison is intentional, to check for both `null` and `undefined` values\n    return value != null && typeof value.length === 'number';\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_ASYNC_VALIDATORS`\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = new InjectionToken('NgValidators');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_VALIDATORS`\n *\n * @usageNotes\n *\n * ### Provide a custom async validator directive\n *\n * The following example implements the `AsyncValidator` interface to create an\n * async validator directive with a custom error key.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customAsyncValidator]',\n *   providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:\n * true}]\n * })\n * class CustomAsyncValidatorDirective implements AsyncValidator {\n *   validate(control: AbstractControl): Promise<ValidationErrors|null> {\n *     return Promise.resolve({'custom': true});\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = new InjectionToken('NgAsyncValidators');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n    /**\n     * @description\n     * Validator that requires the control's value to be greater than or equal to the provided number.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a minimum of 3\n     *\n     * ```typescript\n     * const control = new FormControl(2, Validators.min(3));\n     *\n     * console.log(control.errors); // {min: {min: 3, actual: 2}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `min` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static min(min) {\n        return minValidator(min);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to be less than or equal to the provided number.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a maximum of 15\n     *\n     * ```typescript\n     * const control = new FormControl(16, Validators.max(15));\n     *\n     * console.log(control.errors); // {max: {max: 15, actual: 16}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `max` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static max(max) {\n        return maxValidator(max);\n    }\n    /**\n     * @description\n     * Validator that requires the control have a non-empty value.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field is non-empty\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.required);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map with the `required` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static required(control) {\n        return requiredValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value be true. This validator is commonly\n     * used for required checkboxes.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field value is true\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.requiredTrue);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map that contains the `required` property\n     * set to `true` if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static requiredTrue(control) {\n        return requiredTrueValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value pass an email validation test.\n     *\n     * Tests the value using a [regular\n     * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n     * pattern suitable for common usecases. The pattern is based on the definition of a valid email\n     * address in the [WHATWG HTML\n     * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n     * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n     * lengths of different parts of the address).\n     *\n     * The differences from the WHATWG version include:\n     * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n     * - Disallow `local-part` to be longer than 64 characters.\n     * - Disallow the whole address to be longer than 254 characters.\n     *\n     * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n     * validate the value against a different pattern.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field matches a valid email pattern\n     *\n     * ```typescript\n     * const control = new FormControl('bad@', Validators.email);\n     *\n     * console.log(control.errors); // {email: true}\n     * ```\n     *\n     * @returns An error map with the `email` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static email(control) {\n        return emailValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be greater than or equal\n     * to the provided minimum length. This validator is also provided by default if you use the\n     * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays. The\n     * `minLength` validator logic is also not invoked for values when their `length` property is 0\n     * (for example in case of an empty string or an empty array), to support optional controls. You\n     * can use the standard `required` validator if empty values should not be considered valid.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has a minimum of 3 characters\n     *\n     * ```typescript\n     * const control = new FormControl('ng', Validators.minLength(3));\n     *\n     * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n     * ```\n     *\n     * ```html\n     * <input minlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `minlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static minLength(minLength) {\n        return minLengthValidator(minLength);\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be less than or equal\n     * to the provided maximum length. This validator is also provided by default if you use the\n     * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has maximum of 5 characters\n     *\n     * ```typescript\n     * const control = new FormControl('Angular', Validators.maxLength(5));\n     *\n     * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n     * ```\n     *\n     * ```html\n     * <input maxlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `maxlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static maxLength(maxLength) {\n        return maxLengthValidator(maxLength);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to match a regex pattern. This validator is also\n     * provided by default if you use the HTML5 `pattern` attribute.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field only contains letters or spaces\n     *\n     * ```typescript\n     * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n     *\n     * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n     * ```\n     *\n     * ```html\n     * <input pattern=\"[a-zA-Z ]*\">\n     * ```\n     *\n     * ### Pattern matching with the global or sticky flag\n     *\n     * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`\n     * can produce different results on the same input when validations are run consecutively. This is\n     * due to how the behavior of `RegExp.prototype.test` is\n     * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)\n     * (`RegExp` preserves the index of the last match when the global or sticky flag is used).\n     * Due to this behavior, it is recommended that when using\n     * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky\n     * flag enabled.\n     *\n     * ```typescript\n     * // Not recommended (since the `g` flag is used)\n     * const controlOne = new FormControl('1', Validators.pattern(/foo/g));\n     *\n     * // Good\n     * const controlTwo = new FormControl('1', Validators.pattern(/foo/));\n     * ```\n     *\n     * @param pattern A regular expression to be used as is to test the values, or a string.\n     * If a string is passed, the `^` character is prepended and the `$` character is\n     * appended to the provided string (if not already present), and the resulting regular\n     * expression is used to test the values.\n     *\n     * @returns A validator function that returns an error map with the\n     * `pattern` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static pattern(pattern) {\n        return patternValidator(pattern);\n    }\n    /**\n     * @description\n     * Validator that performs no operation.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static nullValidator(control) {\n        return nullValidator(control);\n    }\n    static compose(validators) {\n        return compose(validators);\n    }\n    /**\n     * @description\n     * Compose multiple async validators into a single function that returns the union\n     * of the individual error objects for the provided control.\n     *\n     * @returns A validator function that returns an error map with the\n     * merged error objects of the async validators if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static composeAsync(validators) {\n        return composeAsync(validators);\n    }\n}\n/**\n * Validator that requires the control's value to be greater than or equal to the provided number.\n * See `Validators.min` for additional information.\n */\nfunction minValidator(min) {\n    return (control) => {\n        if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = parseFloat(control.value);\n        // Controls with NaN values after parsing should be treated as not having a\n        // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n        return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n    };\n}\n/**\n * Validator that requires the control's value to be less than or equal to the provided number.\n * See `Validators.max` for additional information.\n */\nfunction maxValidator(max) {\n    return (control) => {\n        if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = parseFloat(control.value);\n        // Controls with NaN values after parsing should be treated as not having a\n        // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n        return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n    };\n}\n/**\n * Validator that requires the control have a non-empty value.\n * See `Validators.required` for additional information.\n */\nfunction requiredValidator(control) {\n    return isEmptyInputValue(control.value) ? { 'required': true } : null;\n}\n/**\n * Validator that requires the control's value be true. This validator is commonly\n * used for required checkboxes.\n * See `Validators.requiredTrue` for additional information.\n */\nfunction requiredTrueValidator(control) {\n    return control.value === true ? null : { 'required': true };\n}\n/**\n * Validator that requires the control's value pass an email validation test.\n * See `Validators.email` for additional information.\n */\nfunction emailValidator(control) {\n    if (isEmptyInputValue(control.value)) {\n        return null; // don't validate empty values to allow optional controls\n    }\n    return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n}\n/**\n * Validator that requires the length of the control's value to be greater than or equal\n * to the provided minimum length. See `Validators.minLength` for additional information.\n */\nfunction minLengthValidator(minLength) {\n    return (control) => {\n        if (isEmptyInputValue(control.value) || !hasValidLength(control.value)) {\n            // don't validate empty values to allow optional controls\n            // don't validate values without `length` property\n            return null;\n        }\n        return control.value.length < minLength ?\n            { 'minlength': { 'requiredLength': minLength, 'actualLength': control.value.length } } :\n            null;\n    };\n}\n/**\n * Validator that requires the length of the control's value to be less than or equal\n * to the provided maximum length. See `Validators.maxLength` for additional information.\n */\nfunction maxLengthValidator(maxLength) {\n    return (control) => {\n        return hasValidLength(control.value) && control.value.length > maxLength ?\n            { 'maxlength': { 'requiredLength': maxLength, 'actualLength': control.value.length } } :\n            null;\n    };\n}\n/**\n * Validator that requires the control's value to match a regex pattern.\n * See `Validators.pattern` for additional information.\n */\nfunction patternValidator(pattern) {\n    if (!pattern)\n        return nullValidator;\n    let regex;\n    let regexStr;\n    if (typeof pattern === 'string') {\n        regexStr = '';\n        if (pattern.charAt(0) !== '^')\n            regexStr += '^';\n        regexStr += pattern;\n        if (pattern.charAt(pattern.length - 1) !== '$')\n            regexStr += '$';\n        regex = new RegExp(regexStr);\n    }\n    else {\n        regexStr = pattern.toString();\n        regex = pattern;\n    }\n    return (control) => {\n        if (isEmptyInputValue(control.value)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = control.value;\n        return regex.test(value) ? null :\n            { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n    };\n}\n/**\n * Function that has `ValidatorFn` shape, but performs no operation.\n */\nfunction nullValidator(control) {\n    return null;\n}\nfunction isPresent(o) {\n    return o != null;\n}\nfunction toObservable(r) {\n    const obs = ɵisPromise(r) ? from(r) : r;\n    if (!(ɵisObservable(obs)) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new Error(`Expected validator to return Promise or Observable.`);\n    }\n    return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n    let res = {};\n    // Not using Array.reduce here due to a Chrome 80 bug\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n    arrayOfErrors.forEach((errors) => {\n        res = errors != null ? Object.assign(Object.assign({}, res), errors) : res;\n    });\n    return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n    return validators.map(validator => validator(control));\n}\nfunction isValidatorFn(validator) {\n    return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n    return validators.map(validator => {\n        return isValidatorFn(validator) ?\n            validator :\n            ((c) => validator.validate(c));\n    });\n}\n/**\n * Merges synchronous validators into a single validator function.\n * See `Validators.compose` for additional information.\n */\nfunction compose(validators) {\n    if (!validators)\n        return null;\n    const presentValidators = validators.filter(isPresent);\n    if (presentValidators.length == 0)\n        return null;\n    return function (control) {\n        return mergeErrors(executeValidators(control, presentValidators));\n    };\n}\n/**\n * Accepts a list of validators of different possible shapes (`Validator` and `ValidatorFn`),\n * normalizes the list (converts everything to `ValidatorFn`) and merges them into a single\n * validator function.\n */\nfunction composeValidators(validators) {\n    return validators != null ? compose(normalizeValidators(validators)) : null;\n}\n/**\n * Merges asynchronous validators into a single validator function.\n * See `Validators.composeAsync` for additional information.\n */\nfunction composeAsync(validators) {\n    if (!validators)\n        return null;\n    const presentValidators = validators.filter(isPresent);\n    if (presentValidators.length == 0)\n        return null;\n    return function (control) {\n        const observables = executeValidators(control, presentValidators).map(toObservable);\n        return forkJoin(observables).pipe(map(mergeErrors));\n    };\n}\n/**\n * Accepts a list of async validators of different possible shapes (`AsyncValidator` and\n * `AsyncValidatorFn`), normalizes the list (converts everything to `AsyncValidatorFn`) and merges\n * them into a single validator function.\n */\nfunction composeAsyncValidators(validators) {\n    return validators != null ? composeAsync(normalizeValidators(validators)) :\n        null;\n}\n/**\n * Merges raw control validators with a given directive validator and returns the combined list of\n * validators as an array.\n */\nfunction mergeValidators(controlValidators, dirValidator) {\n    if (controlValidators === null)\n        return [dirValidator];\n    return Array.isArray(controlValidators) ? [...controlValidators, dirValidator] :\n        [controlValidators, dirValidator];\n}\n/**\n * Retrieves the list of raw synchronous validators attached to a given control.\n */\nfunction getControlValidators(control) {\n    return control._rawValidators;\n}\n/**\n * Retrieves the list of raw asynchronous validators attached to a given control.\n */\nfunction getControlAsyncValidators(control) {\n    return control._rawAsyncValidators;\n}\n/**\n * Accepts a singleton validator, an array, or null, and returns an array type with the provided\n * validators.\n *\n * @param validators A validator, validators, or null.\n * @returns A validators array.\n */\nfunction makeValidatorsArray(validators) {\n    if (!validators)\n        return [];\n    return Array.isArray(validators) ? validators : [validators];\n}\n/**\n * Determines whether a validator or validators array has a given validator.\n *\n * @param validators The validator or validators to compare against.\n * @param validator The validator to check.\n * @returns Whether the validator is present.\n */\nfunction hasValidator(validators, validator) {\n    return Array.isArray(validators) ? validators.includes(validator) : validators === validator;\n}\n/**\n * Combines two arrays of validators into one. If duplicates are provided, only one will be added.\n *\n * @param validators The new validators.\n * @param currentValidators The base array of currrent validators.\n * @returns An array of validators.\n */\nfunction addValidators(validators, currentValidators) {\n    const current = makeValidatorsArray(currentValidators);\n    const validatorsToAdd = makeValidatorsArray(validators);\n    validatorsToAdd.forEach((v) => {\n        // Note: if there are duplicate entries in the new validators array,\n        // only the first one would be added to the current list of validarors.\n        // Duplicate ones would be ignored since `hasValidator` would detect\n        // the presence of a validator function and we update the current list in place.\n        if (!hasValidator(current, v)) {\n            current.push(v);\n        }\n    });\n    return current;\n}\nfunction removeValidators(validators, currentValidators) {\n    return makeValidatorsArray(currentValidators).filter(v => !hasValidator(validators, v));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n    constructor() {\n        /**\n         * Set of synchronous validators as they were provided while calling `setValidators` function.\n         * @internal\n         */\n        this._rawValidators = [];\n        /**\n         * Set of asynchronous validators as they were provided while calling `setAsyncValidators`\n         * function.\n         * @internal\n         */\n        this._rawAsyncValidators = [];\n        /*\n         * The set of callbacks to be invoked when directive instance is being destroyed.\n         */\n        this._onDestroyCallbacks = [];\n    }\n    /**\n     * @description\n     * Reports the value of the control if it is present, otherwise null.\n     */\n    get value() {\n        return this.control ? this.control.value : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is valid. A control is considered valid if no\n     * validation errors exist with the current value.\n     * If the control is not present, null is returned.\n     */\n    get valid() {\n        return this.control ? this.control.valid : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is invalid, meaning that an error exists in the input value.\n     * If the control is not present, null is returned.\n     */\n    get invalid() {\n        return this.control ? this.control.invalid : null;\n    }\n    /**\n     * @description\n     * Reports whether a control is pending, meaning that that async validation is occurring and\n     * errors are not yet available for the input value. If the control is not present, null is\n     * returned.\n     */\n    get pending() {\n        return this.control ? this.control.pending : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is disabled, meaning that the control is disabled\n     * in the UI and is exempt from validation checks and excluded from aggregate\n     * values of ancestor controls. If the control is not present, null is returned.\n     */\n    get disabled() {\n        return this.control ? this.control.disabled : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is enabled, meaning that the control is included in ancestor\n     * calculations of validity or value. If the control is not present, null is returned.\n     */\n    get enabled() {\n        return this.control ? this.control.enabled : null;\n    }\n    /**\n     * @description\n     * Reports the control's validation errors. If the control is not present, null is returned.\n     */\n    get errors() {\n        return this.control ? this.control.errors : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is pristine, meaning that the user has not yet changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get pristine() {\n        return this.control ? this.control.pristine : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is dirty, meaning that the user has changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get dirty() {\n        return this.control ? this.control.dirty : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is touched, meaning that the user has triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get touched() {\n        return this.control ? this.control.touched : null;\n    }\n    /**\n     * @description\n     * Reports the validation status of the control. Possible values include:\n     * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n     * If the control is not present, null is returned.\n     */\n    get status() {\n        return this.control ? this.control.status : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is untouched, meaning that the user has not yet triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get untouched() {\n        return this.control ? this.control.untouched : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable that emits a validation status whenever it is\n     * calculated for the control. If the control is not present, null is returned.\n     */\n    get statusChanges() {\n        return this.control ? this.control.statusChanges : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable of value changes for the control that emits every time the\n     * value of the control changes in the UI or programmatically.\n     * If the control is not present, null is returned.\n     */\n    get valueChanges() {\n        return this.control ? this.control.valueChanges : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return null;\n    }\n    /**\n     * Sets synchronous validators for this directive.\n     * @internal\n     */\n    _setValidators(validators) {\n        this._rawValidators = validators || [];\n        this._composedValidatorFn = composeValidators(this._rawValidators);\n    }\n    /**\n     * Sets asynchronous validators for this directive.\n     * @internal\n     */\n    _setAsyncValidators(validators) {\n        this._rawAsyncValidators = validators || [];\n        this._composedAsyncValidatorFn = composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators registered with this\n     * directive.\n     */\n    get validator() {\n        return this._composedValidatorFn || null;\n    }\n    /**\n     * @description\n     * Asynchronous validator function composed of all the asynchronous validators registered with\n     * this directive.\n     */\n    get asyncValidator() {\n        return this._composedAsyncValidatorFn || null;\n    }\n    /**\n     * Internal function to register callbacks that should be invoked\n     * when directive instance is being destroyed.\n     * @internal\n     */\n    _registerOnDestroy(fn) {\n        this._onDestroyCallbacks.push(fn);\n    }\n    /**\n     * Internal function to invoke all registered \"on destroy\" callbacks.\n     * Note: calling this function also clears the list of callbacks.\n     * @internal\n     */\n    _invokeOnDestroyCallbacks() {\n        this._onDestroyCallbacks.forEach(fn => fn());\n        this._onDestroyCallbacks = [];\n    }\n    /**\n     * @description\n     * Resets the control with the provided value if the control is present.\n     */\n    reset(value = undefined) {\n        if (this.control)\n            this.control.reset(value);\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n    constructor() {\n        super(...arguments);\n        /**\n         * @description\n         * The parent form for the control.\n         *\n         * @internal\n         */\n        this._parent = null;\n        /**\n         * @description\n         * The name for the control\n         */\n        this.name = null;\n        /**\n         * @description\n         * The value accessor for the control\n         */\n        this.valueAccessor = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n    /**\n     * @description\n     * The top-level form directive for the control.\n     */\n    get formDirective() {\n        return null;\n    }\n    /**\n     * @description\n     * The path to this group.\n     */\n    get path() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass AbstractControlStatus {\n    constructor(cd) {\n        this._cd = cd;\n    }\n    is(status) {\n        var _a, _b, _c;\n        // Currently with ViewEngine (in AOT mode) it's not possible to use private methods in host\n        // bindings.\n        // TODO: once ViewEngine is removed, this function should be refactored:\n        //  - make the `is` method `protected`, so it's not accessible publicly\n        //  - move the `submitted` status logic to the `NgControlStatusGroup` class\n        //    and make it `private` or `protected` too.\n        if (status === 'submitted') {\n            // We check for the `submitted` field from `NgForm` and `FormGroupDirective` classes, but\n            // we avoid instanceof checks to prevent non-tree-shakable references to those types.\n            return !!((_a = this._cd) === null || _a === void 0 ? void 0 : _a.submitted);\n        }\n        return !!((_c = (_b = this._cd) === null || _b === void 0 ? void 0 : _b.control) === null || _c === void 0 ? void 0 : _c[status]);\n    }\n}\nconst ngControlStatusHost = {\n    '[class.ng-untouched]': 'is(\"untouched\")',\n    '[class.ng-touched]': 'is(\"touched\")',\n    '[class.ng-pristine]': 'is(\"pristine\")',\n    '[class.ng-dirty]': 'is(\"dirty\")',\n    '[class.ng-valid]': 'is(\"valid\")',\n    '[class.ng-invalid]': 'is(\"invalid\")',\n    '[class.ng-pending]': 'is(\"pending\")',\n};\nconst ngGroupStatusHost = {\n    '[class.ng-untouched]': 'is(\"untouched\")',\n    '[class.ng-touched]': 'is(\"touched\")',\n    '[class.ng-pristine]': 'is(\"pristine\")',\n    '[class.ng-dirty]': 'is(\"dirty\")',\n    '[class.ng-valid]': 'is(\"valid\")',\n    '[class.ng-invalid]': 'is(\"invalid\")',\n    '[class.ng-pending]': 'is(\"pending\")',\n    '[class.ng-submitted]': 'is(\"submitted\")',\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatus extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n}\nNgControlStatus.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgControlStatus, deps: [{ token: NgControl, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgControlStatus.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\", host: { properties: { \"class.ng-untouched\": \"is(\\\"untouched\\\")\", \"class.ng-touched\": \"is(\\\"touched\\\")\", \"class.ng-pristine\": \"is(\\\"pristine\\\")\", \"class.ng-dirty\": \"is(\\\"dirty\\\")\", \"class.ng-valid\": \"is(\\\"valid\\\")\", \"class.ng-invalid\": \"is(\\\"invalid\\\")\", \"class.ng-pending\": \"is(\\\"pending\\\")\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgControlStatus, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost }]\n        }], ctorParameters: function () {\n        return [{ type: NgControl, decorators: [{\n                        type: Self\n                    }] }];\n    } });\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc). On groups, this includes the additional\n * class ng-submitted.\n *\n * @see `NgControlStatus`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatusGroup extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n}\nNgControlStatusGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgControlStatusGroup, deps: [{ token: ControlContainer, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgControlStatusGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\", host: { properties: { \"class.ng-untouched\": \"is(\\\"untouched\\\")\", \"class.ng-touched\": \"is(\\\"touched\\\")\", \"class.ng-pristine\": \"is(\\\"pristine\\\")\", \"class.ng-dirty\": \"is(\\\"dirty\\\")\", \"class.ng-valid\": \"is(\\\"valid\\\")\", \"class.ng-invalid\": \"is(\\\"invalid\\\")\", \"class.ng-pending\": \"is(\\\"pending\\\")\", \"class.ng-submitted\": \"is(\\\"submitted\\\")\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgControlStatusGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                    host: ngGroupStatusHost\n                }]\n        }], ctorParameters: function () {\n        return [{ type: ControlContainer, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formControlNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <input formControlName=\"firstName\">\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      firstName: new FormControl()\n  });`;\nconst formGroupNameExample = `\n  <div [formGroup]=\"myGroup\">\n      <div formGroupName=\"person\">\n        <input formControlName=\"firstName\">\n      </div>\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      person: new FormGroup({ firstName: new FormControl() })\n  });`;\nconst formArrayNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <div formArrayName=\"cities\">\n      <div *ngFor=\"let city of cityArray.controls; index as i\">\n        <input [formControlName]=\"i\">\n      </div>\n    </div>\n  </div>\n\n  In your class:\n\n  this.cityArray = new FormArray([new FormControl('SF')]);\n  this.myGroup = new FormGroup({\n    cities: this.cityArray\n  });`;\nconst ngModelGroupExample = `\n  <form>\n      <div ngModelGroup=\"person\">\n        <input [(ngModel)]=\"person.name\" name=\"firstName\">\n      </div>\n  </form>`;\nconst ngModelWithFormGroupExample = `\n  <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n      <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n  </div>\n`;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction controlParentException() {\n    return new Error(`formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formControlNameExample}`);\n}\nfunction ngModelGroupException() {\n    return new Error(`formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n      that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n      Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n      ${formGroupNameExample}\n\n      Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n      ${ngModelGroupExample}`);\n}\nfunction missingFormException() {\n    return new Error(`formGroup expects a FormGroup instance. Please pass one in.\n\n      Example:\n\n      ${formControlNameExample}`);\n}\nfunction groupParentException() {\n    return new Error(`formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n    directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formGroupNameExample}`);\n}\nfunction arrayParentException() {\n    return new Error(`formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${formArrayNameExample}`);\n}\nconst disabledAttrWarning = `\n  It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n  when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n  you. We recommend using this approach to avoid 'changed after checked' errors.\n\n  Example:\n  form = new FormGroup({\n    first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n    last: new FormControl('Drew', Validators.required)\n  });\n`;\nfunction ngModelWarning(directiveName) {\n    return `\n  It looks like you're using ngModel on the same form field as ${directiveName}.\n  Support for using the ngModel input property and ngModelChange event with\n  reactive form directives has been deprecated in Angular v6 and will be removed\n  in a future version of Angular.\n\n  For more information on this, see our API docs here:\n  https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' : 'FormControlName'}#use-with-ngmodel\n  `;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction controlPath(name, parent) {\n    return [...parent.path, name];\n}\n/**\n * Links a Form control and a Form directive by setting up callbacks (such as `onChange`) on both\n * instances. This function is typically invoked when form directive is being initialized.\n *\n * @param control Form control instance that should be linked.\n * @param dir Directive that should be linked with a given control.\n */\nfunction setUpControl(control, dir) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!control)\n            _throwError(dir, 'Cannot find control with');\n        if (!dir.valueAccessor)\n            _throwError(dir, 'No value accessor for form control with');\n    }\n    setUpValidators(control, dir);\n    dir.valueAccessor.writeValue(control.value);\n    setUpViewChangePipeline(control, dir);\n    setUpModelChangePipeline(control, dir);\n    setUpBlurPipeline(control, dir);\n    setUpDisabledChangeHandler(control, dir);\n}\n/**\n * Reverts configuration performed by the `setUpControl` control function.\n * Effectively disconnects form control with a given form directive.\n * This function is typically invoked when corresponding form directive is being destroyed.\n *\n * @param control Form control which should be cleaned up.\n * @param dir Directive that should be disconnected from a given control.\n * @param validateControlPresenceOnChange Flag that indicates whether onChange handler should\n *     contain asserts to verify that it's not called once directive is destroyed. We need this flag\n *     to avoid potentially breaking changes caused by better control cleanup introduced in #39235.\n */\nfunction cleanUpControl(control, dir, validateControlPresenceOnChange = true) {\n    const noop = () => {\n        if (validateControlPresenceOnChange && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            _noControlError(dir);\n        }\n    };\n    // The `valueAccessor` field is typically defined on FromControl and FormControlName directive\n    // instances and there is a logic in `selectValueAccessor` function that throws if it's not the\n    // case. We still check the presence of `valueAccessor` before invoking its methods to make sure\n    // that cleanup works correctly if app code or tests are setup to ignore the error thrown from\n    // `selectValueAccessor`. See https://github.com/angular/angular/issues/40521.\n    if (dir.valueAccessor) {\n        dir.valueAccessor.registerOnChange(noop);\n        dir.valueAccessor.registerOnTouched(noop);\n    }\n    cleanUpValidators(control, dir);\n    if (control) {\n        dir._invokeOnDestroyCallbacks();\n        control._registerOnCollectionChange(() => { });\n    }\n}\nfunction registerOnValidatorChange(validators, onChange) {\n    validators.forEach((validator) => {\n        if (validator.registerOnValidatorChange)\n            validator.registerOnValidatorChange(onChange);\n    });\n}\n/**\n * Sets up disabled change handler function on a given form control if ControlValueAccessor\n * associated with a given directive instance supports the `setDisabledState` call.\n *\n * @param control Form control where disabled change handler should be setup.\n * @param dir Corresponding directive instance associated with this control.\n */\nfunction setUpDisabledChangeHandler(control, dir) {\n    if (dir.valueAccessor.setDisabledState) {\n        const onDisabledChange = (isDisabled) => {\n            dir.valueAccessor.setDisabledState(isDisabled);\n        };\n        control.registerOnDisabledChange(onDisabledChange);\n        // Register a callback function to cleanup disabled change handler\n        // from a control instance when a directive is destroyed.\n        dir._registerOnDestroy(() => {\n            control._unregisterOnDisabledChange(onDisabledChange);\n        });\n    }\n}\n/**\n * Sets up sync and async directive validators on provided form control.\n * This function merges validators from the directive into the validators of the control.\n *\n * @param control Form control where directive validators should be setup.\n * @param dir Directive instance that contains validators to be setup.\n */\nfunction setUpValidators(control, dir) {\n    const validators = getControlValidators(control);\n    if (dir.validator !== null) {\n        control.setValidators(mergeValidators(validators, dir.validator));\n    }\n    else if (typeof validators === 'function') {\n        // If sync validators are represented by a single validator function, we force the\n        // `Validators.compose` call to happen by executing the `setValidators` function with\n        // an array that contains that function. We need this to avoid possible discrepancies in\n        // validators behavior, so sync validators are always processed by the `Validators.compose`.\n        // Note: we should consider moving this logic inside the `setValidators` function itself, so we\n        // have consistent behavior on AbstractControl API level. The same applies to the async\n        // validators logic below.\n        control.setValidators([validators]);\n    }\n    const asyncValidators = getControlAsyncValidators(control);\n    if (dir.asyncValidator !== null) {\n        control.setAsyncValidators(mergeValidators(asyncValidators, dir.asyncValidator));\n    }\n    else if (typeof asyncValidators === 'function') {\n        control.setAsyncValidators([asyncValidators]);\n    }\n    // Re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    const onValidatorChange = () => control.updateValueAndValidity();\n    registerOnValidatorChange(dir._rawValidators, onValidatorChange);\n    registerOnValidatorChange(dir._rawAsyncValidators, onValidatorChange);\n}\n/**\n * Cleans up sync and async directive validators on provided form control.\n * This function reverts the setup performed by the `setUpValidators` function, i.e.\n * removes directive-specific validators from a given control instance.\n *\n * @param control Form control from where directive validators should be removed.\n * @param dir Directive instance that contains validators to be removed.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpValidators(control, dir) {\n    let isControlUpdated = false;\n    if (control !== null) {\n        if (dir.validator !== null) {\n            const validators = getControlValidators(control);\n            if (Array.isArray(validators) && validators.length > 0) {\n                // Filter out directive validator function.\n                const updatedValidators = validators.filter(validator => validator !== dir.validator);\n                if (updatedValidators.length !== validators.length) {\n                    isControlUpdated = true;\n                    control.setValidators(updatedValidators);\n                }\n            }\n        }\n        if (dir.asyncValidator !== null) {\n            const asyncValidators = getControlAsyncValidators(control);\n            if (Array.isArray(asyncValidators) && asyncValidators.length > 0) {\n                // Filter out directive async validator function.\n                const updatedAsyncValidators = asyncValidators.filter(asyncValidator => asyncValidator !== dir.asyncValidator);\n                if (updatedAsyncValidators.length !== asyncValidators.length) {\n                    isControlUpdated = true;\n                    control.setAsyncValidators(updatedAsyncValidators);\n                }\n            }\n        }\n    }\n    // Clear onValidatorChange callbacks by providing a noop function.\n    const noop = () => { };\n    registerOnValidatorChange(dir._rawValidators, noop);\n    registerOnValidatorChange(dir._rawAsyncValidators, noop);\n    return isControlUpdated;\n}\nfunction setUpViewChangePipeline(control, dir) {\n    dir.valueAccessor.registerOnChange((newValue) => {\n        control._pendingValue = newValue;\n        control._pendingChange = true;\n        control._pendingDirty = true;\n        if (control.updateOn === 'change')\n            updateControl(control, dir);\n    });\n}\nfunction setUpBlurPipeline(control, dir) {\n    dir.valueAccessor.registerOnTouched(() => {\n        control._pendingTouched = true;\n        if (control.updateOn === 'blur' && control._pendingChange)\n            updateControl(control, dir);\n        if (control.updateOn !== 'submit')\n            control.markAsTouched();\n    });\n}\nfunction updateControl(control, dir) {\n    if (control._pendingDirty)\n        control.markAsDirty();\n    control.setValue(control._pendingValue, { emitModelToViewChange: false });\n    dir.viewToModelUpdate(control._pendingValue);\n    control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n    const onChange = (newValue, emitModelEvent) => {\n        // control -> view\n        dir.valueAccessor.writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    };\n    control.registerOnChange(onChange);\n    // Register a callback function to cleanup onChange handler\n    // from a control instance when a directive is destroyed.\n    dir._registerOnDestroy(() => {\n        control._unregisterOnChange(onChange);\n    });\n}\n/**\n * Links a FormGroup or FormArray instance and corresponding Form directive by setting up validators\n * present in the view.\n *\n * @param control FormGroup or FormArray instance that should be linked.\n * @param dir Directive that provides view validators.\n */\nfunction setUpFormContainer(control, dir) {\n    if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwError(dir, 'Cannot find control with');\n    setUpValidators(control, dir);\n}\n/**\n * Reverts the setup performed by the `setUpFormContainer` function.\n *\n * @param control FormGroup or FormArray instance that should be cleaned up.\n * @param dir Directive that provided view validators.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpFormContainer(control, dir) {\n    return cleanUpValidators(control, dir);\n}\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n    let messageEnd;\n    if (dir.path.length > 1) {\n        messageEnd = `path: '${dir.path.join(' -> ')}'`;\n    }\n    else if (dir.path[0]) {\n        messageEnd = `name: '${dir.path}'`;\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(`${message} ${messageEnd}`);\n}\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    const change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !Object.is(viewModel, change.currentValue);\n}\nfunction isBuiltInAccessor(valueAccessor) {\n    // Check if a given value accessor is an instance of a class that directly extends\n    // `BuiltInControlValueAccessor` one.\n    return Object.getPrototypeOf(valueAccessor.constructor) === BuiltInControlValueAccessor;\n}\nfunction syncPendingControls(form, directives) {\n    form._syncPendingControls();\n    directives.forEach(dir => {\n        const control = dir.control;\n        if (control.updateOn === 'submit' && control._pendingChange) {\n            dir.viewToModelUpdate(control._pendingValue);\n            control._pendingChange = false;\n        }\n    });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwError(dir, 'Value accessor was not provided as an array for form control with');\n    let defaultAccessor = undefined;\n    let builtinAccessor = undefined;\n    let customAccessor = undefined;\n    valueAccessors.forEach((v) => {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _throwError(dir, 'No valid value accessor for form control with');\n    }\n    return null;\n}\nfunction removeListItem(list, el) {\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n    if (warningConfig === 'never')\n        return;\n    if (((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce) ||\n        (warningConfig === 'always' && !instance._ngModelWarningSent)) {\n        console.warn(ngModelWarning(name));\n        type._ngModelWarningSentOnce = true;\n        instance._ngModelWarningSent = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reports that a FormControl is valid, meaning that no errors exist in the input value.\n *\n * @see `status`\n */\nconst VALID = 'VALID';\n/**\n * Reports that a FormControl is invalid, meaning that an error exists in the input value.\n *\n * @see `status`\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a FormControl is pending, meaning that that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see `markAsPending`\n * @see `status`\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a FormControl is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see `markAsDisabled`\n * @see `status`\n */\nconst DISABLED = 'DISABLED';\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!Array.isArray(path)) {\n        path = path.split(delimiter);\n    }\n    if (Array.isArray(path) && path.length === 0)\n        return null;\n    // Not using Array.reduce here due to a Chrome 80 bug\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n    let controlToFind = control;\n    path.forEach((name) => {\n        if (controlToFind instanceof FormGroup) {\n            controlToFind = controlToFind.controls.hasOwnProperty(name) ?\n                controlToFind.controls[name] :\n                null;\n        }\n        else if (controlToFind instanceof FormArray) {\n            controlToFind = controlToFind.at(name) || null;\n        }\n        else {\n            controlToFind = null;\n        }\n    });\n    return controlToFind;\n}\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts) {\n    return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator) {\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(asyncValidator, validatorOrOpts) {\n    return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n    return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) :\n        asyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n    return validatorOrOpts != null && !Array.isArray(validatorOrOpts) &&\n        typeof validatorOrOpts === 'object';\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * @see [Forms Guide](/guide/forms)\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n * @see [Dynamic Forms Guide](/guide/dynamic-form)\n *\n * @publicApi\n */\nclass AbstractControl {\n    /**\n     * Initialize the AbstractControl instance.\n     *\n     * @param validators The function or array of functions that is used to determine the validity of\n     *     this control synchronously.\n     * @param asyncValidators The function or array of functions that is used to determine validity of\n     *     this control asynchronously.\n     */\n    constructor(validators, asyncValidators) {\n        /** @internal */\n        this._pendingDirty = false;\n        /**\n         * Indicates that a control has its own pending asynchronous validation in progress.\n         *\n         * @internal\n         */\n        this._hasOwnPendingAsyncValidator = false;\n        /** @internal */\n        this._pendingTouched = false;\n        /** @internal */\n        this._onCollectionChange = () => { };\n        this._parent = null;\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n         * Programmatic changes to a control's value do not mark it dirty.\n         */\n        this.pristine = true;\n        /**\n         * True if the control is marked as `touched`.\n         *\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         */\n        this.touched = false;\n        /** @internal */\n        this._onDisabledChange = [];\n        this._rawValidators = validators;\n        this._rawAsyncValidators = asyncValidators;\n        this._composedValidatorFn = coerceToValidator(this._rawValidators);\n        this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n    }\n    /**\n     * Returns the function that is used to determine the validity of this control synchronously.\n     * If multiple validators have been added, this will be a single composed function.\n     * See `Validators.compose()` for additional information.\n     */\n    get validator() {\n        return this._composedValidatorFn;\n    }\n    set validator(validatorFn) {\n        this._rawValidators = this._composedValidatorFn = validatorFn;\n    }\n    /**\n     * Returns the function that is used to determine the validity of this control asynchronously.\n     * If multiple validators have been added, this will be a single composed function.\n     * See `Validators.compose()` for additional information.\n     */\n    get asyncValidator() {\n        return this._composedAsyncValidatorFn;\n    }\n    set asyncValidator(asyncValidatorFn) {\n        this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n    }\n    /**\n     * The parent control.\n     */\n    get parent() {\n        return this._parent;\n    }\n    /**\n     * A control is `valid` when its `status` is `VALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control has passed all of its validation tests,\n     * false otherwise.\n     */\n    get valid() {\n        return this.status === VALID;\n    }\n    /**\n     * A control is `invalid` when its `status` is `INVALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control has failed one or more of its validation checks,\n     * false otherwise.\n     */\n    get invalid() {\n        return this.status === INVALID;\n    }\n    /**\n     * A control is `pending` when its `status` is `PENDING`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control is in the process of conducting a validation check,\n     * false otherwise.\n     */\n    get pending() {\n        return this.status == PENDING;\n    }\n    /**\n     * A control is `disabled` when its `status` is `DISABLED`.\n     *\n     * Disabled controls are exempt from validation checks and\n     * are not included in the aggregate value of their ancestor\n     * controls.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control is disabled, false otherwise.\n     */\n    get disabled() {\n        return this.status === DISABLED;\n    }\n    /**\n     * A control is `enabled` as long as its `status` is not `DISABLED`.\n     *\n     * @returns True if the control has any status other than 'DISABLED',\n     * false if the status is 'DISABLED'.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     */\n    get enabled() {\n        return this.status !== DISABLED;\n    }\n    /**\n     * A control is `dirty` if the user has changed the value\n     * in the UI.\n     *\n     * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    get dirty() {\n        return !this.pristine;\n    }\n    /**\n     * True if the control has not been marked as touched\n     *\n     * A control is `untouched` if the user has not yet triggered\n     * a `blur` event on it.\n     */\n    get untouched() {\n        return !this.touched;\n    }\n    /**\n     * Reports the update strategy of the `AbstractControl` (meaning\n     * the event on which the control updates itself).\n     * Possible values: `'change'` | `'blur'` | `'submit'`\n     * Default value: `'change'`\n     */\n    get updateOn() {\n        return this._updateOn ? this._updateOn : (this.parent ? this.parent.updateOn : 'change');\n    }\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this overwrites any existing synchronous validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * If you want to add a new validator without affecting existing ones, consider\n     * using `addValidators()` method instead.\n     */\n    setValidators(validators) {\n        this._rawValidators = validators;\n        this._composedValidatorFn = coerceToValidator(validators);\n    }\n    /**\n     * Sets the asynchronous validators that are active on this control. Calling this\n     * overwrites any existing asynchronous validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * If you want to add a new validator without affecting existing ones, consider\n     * using `addAsyncValidators()` method instead.\n     */\n    setAsyncValidators(validators) {\n        this._rawAsyncValidators = validators;\n        this._composedAsyncValidatorFn = coerceToAsyncValidator(validators);\n    }\n    /**\n     * Add a synchronous validator or validators to this control, without affecting other validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * Adding a validator that already exists will have no effect. If duplicate validator functions\n     * are present in the `validators` array, only the first instance would be added to a form\n     * control.\n     *\n     * @param validators The new validator function or functions to add to this control.\n     */\n    addValidators(validators) {\n        this.setValidators(addValidators(validators, this._rawValidators));\n    }\n    /**\n     * Add an asynchronous validator or validators to this control, without affecting other\n     * validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * Adding a validator that already exists will have no effect.\n     *\n     * @param validators The new asynchronous validator function or functions to add to this control.\n     */\n    addAsyncValidators(validators) {\n        this.setAsyncValidators(addValidators(validators, this._rawAsyncValidators));\n    }\n    /**\n     * Remove a synchronous validator from this control, without affecting other validators.\n     * Validators are compared by function reference; you must pass a reference to the exact same\n     * validator function as the one that was originally set. If a provided validator is not found,\n     * it is ignored.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @param validators The validator or validators to remove.\n     */\n    removeValidators(validators) {\n        this.setValidators(removeValidators(validators, this._rawValidators));\n    }\n    /**\n     * Remove an asynchronous validator from this control, without affecting other validators.\n     * Validators are compared by function reference; you must pass a reference to the exact same\n     * validator function as the one that was originally set. If a provided validator is not found, it\n     * is ignored.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @param validators The asynchronous validator or validators to remove.\n     */\n    removeAsyncValidators(validators) {\n        this.setAsyncValidators(removeValidators(validators, this._rawAsyncValidators));\n    }\n    /**\n     * Check whether a synchronous validator function is present on this control. The provided\n     * validator must be a reference to the exact same function that was provided.\n     *\n     * @param validator The validator to check for presence. Compared by function reference.\n     * @returns Whether the provided validator was found on this control.\n     */\n    hasValidator(validator) {\n        return hasValidator(this._rawValidators, validator);\n    }\n    /**\n     * Check whether an asynchronous validator function is present on this control. The provided\n     * validator must be a reference to the exact same function that was provided.\n     *\n     * @param validator The asynchronous validator to check for presence. Compared by function\n     *     reference.\n     * @returns Whether the provided asynchronous validator was found on this control.\n     */\n    hasAsyncValidator(validator) {\n        return hasValidator(this._rawAsyncValidators, validator);\n    }\n    /**\n     * Empties out the synchronous validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearValidators() {\n        this.validator = null;\n    }\n    /**\n     * Empties out the async validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearAsyncValidators() {\n        this.asyncValidator = null;\n    }\n    /**\n     * Marks the control as `touched`. A control is touched by focus and\n     * blur events that do not change the value.\n     *\n     * @see `markAsUntouched()`\n     * @see `markAsDirty()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsTouched(opts = {}) {\n        this.touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    }\n    /**\n     * Marks the control and all its descendant controls as `touched`.\n     * @see `markAsTouched()`\n     */\n    markAllAsTouched() {\n        this.markAsTouched({ onlySelf: true });\n        this._forEachChild((control) => control.markAllAsTouched());\n    }\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, also marks all children as `untouched`\n     * and recalculates the `touched` status of all parent controls.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsDirty()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after the marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsUntouched(opts = {}) {\n        this.touched = false;\n        this._pendingTouched = false;\n        this._forEachChild((control) => {\n            control.markAsUntouched({ onlySelf: true });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /**\n     * Marks the control as `dirty`. A control becomes dirty when\n     * the control's value is changed through the UI; compare `markAsTouched`.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsUntouched()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsDirty(opts = {}) {\n        this.pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    }\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, marks all children as `pristine`,\n     * and recalculates the `pristine` status of all parent\n     * controls.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsUntouched()`\n     * @see `markAsDirty()`\n     *\n     * @param opts Configuration options that determine how the control emits events after\n     * marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsPristine(opts = {}) {\n        this.pristine = true;\n        this._pendingDirty = false;\n        this._forEachChild((control) => {\n            control.markAsPristine({ onlySelf: true });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /**\n     * Marks the control as `pending`.\n     *\n     * A control is pending while the control performs async validation.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates changes and\n     * emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n     * observable emits an event with the latest status the control is marked pending.\n     * When false, no events are emitted.\n     *\n     */\n    markAsPending(opts = {}) {\n        this.status = PENDING;\n        if (opts.emitEvent !== false) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    }\n    /**\n     * Disables the control. This means the control is exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children are also disabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates\n     * changes and emits events after the control is disabled.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is disabled.\n     * When false, no events are emitted.\n     */\n    disable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = DISABLED;\n        this.errors = null;\n        this._forEachChild((control) => {\n            control.disable(Object.assign(Object.assign({}, opts), { onlySelf: true }));\n        });\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        this._updateAncestors(Object.assign(Object.assign({}, opts), { skipPristineCheck }));\n        this._onDisabledChange.forEach((changeFn) => changeFn(true));\n    }\n    /**\n     * Enables the control. This means the control is included in validation checks and\n     * the aggregate value of its parent. Its status recalculates based on its value and\n     * its validators.\n     *\n     * By default, if the control has children, all children are enabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configure options that control how the control propagates changes and\n     * emits events when marked as untouched\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is enabled.\n     * When false, no events are emitted.\n     */\n    enable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = VALID;\n        this._forEachChild((control) => {\n            control.enable(Object.assign(Object.assign({}, opts), { onlySelf: true }));\n        });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors(Object.assign(Object.assign({}, opts), { skipPristineCheck }));\n        this._onDisabledChange.forEach((changeFn) => changeFn(false));\n    }\n    _updateAncestors(opts) {\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n            if (!opts.skipPristineCheck) {\n                this._parent._updatePristine();\n            }\n            this._parent._updateTouched();\n        }\n    }\n    /**\n     * @param parent Sets the parent of the control\n     */\n    setParent(parent) {\n        this._parent = parent;\n    }\n    /**\n     * Recalculates the value and validation status of the control.\n     *\n     * By default, it also updates the value and validity of its ancestors.\n     *\n     * @param opts Configuration options determine how the control propagates changes and emits events\n     * after updates and validity checks are applied.\n     * * `onlySelf`: When true, only update this control. When false or not supplied,\n     * update all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is updated.\n     * When false, no events are emitted.\n     */\n    updateValueAndValidity(opts = {}) {\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            this.errors = this._runValidator();\n            this.status = this._calculateStatus();\n            if (this.status === VALID || this.status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    }\n    /** @internal */\n    _updateTreeValidity(opts = { emitEvent: true }) {\n        this._forEachChild((ctrl) => ctrl._updateTreeValidity(opts));\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    }\n    _setInitialStatus() {\n        this.status = this._allControlsDisabled() ? DISABLED : VALID;\n    }\n    _runValidator() {\n        return this.validator ? this.validator(this) : null;\n    }\n    _runAsyncValidator(emitEvent) {\n        if (this.asyncValidator) {\n            this.status = PENDING;\n            this._hasOwnPendingAsyncValidator = true;\n            const obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription = obs.subscribe((errors) => {\n                this._hasOwnPendingAsyncValidator = false;\n                // This will trigger the recalculation of the validation status, which depends on\n                // the state of the asynchronous validation (whether it is in progress or not). So, it is\n                // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n                this.setErrors(errors, { emitEvent });\n            });\n        }\n    }\n    _cancelExistingSubscription() {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n            this._hasOwnPendingAsyncValidator = false;\n        }\n    }\n    /**\n     * Sets errors on a form control when running validations manually, rather than automatically.\n     *\n     * Calling `setErrors` also updates the validity of the parent control.\n     *\n     * @usageNotes\n     *\n     * ### Manually set the errors for a control\n     *\n     * ```\n     * const login = new FormControl('someLogin');\n     * login.setErrors({\n     *   notUnique: true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({ notUnique: true });\n     *\n     * login.setValue('someOtherLogin');\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     */\n    setErrors(errors, opts = {}) {\n        this.errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    }\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * @param path A dot-delimited string or array of string/number values that define the path to the\n     * control.\n     *\n     * @usageNotes\n     * ### Retrieve a nested control\n     *\n     * For example, to get a `name` control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     *\n     * ### Retrieve a control in a FormArray\n     *\n     * When accessing an element inside a FormArray, you can use an element index.\n     * For example, to get a `price` control from the first element in an `items` array you can use:\n     *\n     * * `this.form.get('items.0.price');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['items', 0, 'price']);`\n     */\n    get(path) {\n        return _find(this, path, '.');\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        const control = path ? this.get(path) : this;\n        return control && control.errors ? control.errors[errorCode] : null;\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return !!this.getError(errorCode, path);\n    }\n    /**\n     * Retrieves the top-level ancestor of this control.\n     */\n    get root() {\n        let x = this;\n        while (x._parent) {\n            x = x._parent;\n        }\n        return x;\n    }\n    /** @internal */\n    _updateControlsErrors(emitEvent) {\n        this.status = this._calculateStatus();\n        if (emitEvent) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    }\n    /** @internal */\n    _initObservables() {\n        this.valueChanges = new EventEmitter();\n        this.statusChanges = new EventEmitter();\n    }\n    _calculateStatus() {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this.errors)\n            return INVALID;\n        if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    }\n    /** @internal */\n    _anyControlsHaveStatus(status) {\n        return this._anyControls((control) => control.status === status);\n    }\n    /** @internal */\n    _anyControlsDirty() {\n        return this._anyControls((control) => control.dirty);\n    }\n    /** @internal */\n    _anyControlsTouched() {\n        return this._anyControls((control) => control.touched);\n    }\n    /** @internal */\n    _updatePristine(opts = {}) {\n        this.pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /** @internal */\n    _updateTouched(opts = {}) {\n        this.touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /** @internal */\n    _isBoxedValue(formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    }\n    /** @internal */\n    _registerOnCollectionChange(fn) {\n        this._onCollectionChange = fn;\n    }\n    /** @internal */\n    _setUpdateStrategy(opts) {\n        if (isOptionsObj(opts) && opts.updateOn != null) {\n            this._updateOn = opts.updateOn;\n        }\n    }\n    /**\n     * Check to see if parent has been marked artificially dirty.\n     *\n     * @internal\n     */\n    _parentMarkedDirty(onlySelf) {\n        const parentDirty = this._parent && this._parent.dirty;\n        return !onlySelf && !!parentDirty && !this._parent._anyControlsDirty();\n    }\n}\n/**\n * Tracks the value and validation status of an individual form control.\n *\n * This is one of the three fundamental building blocks of Angular forms, along with\n * `FormGroup` and `FormArray`. It extends the `AbstractControl` class that\n * implements most of the base functionality for accessing the value, validation status,\n * user interactions and events. See [usage examples below](#usage-notes).\n *\n * @see `AbstractControl`\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see [Usage Notes](#usage-notes)\n *\n * @usageNotes\n *\n * ### Initializing Form Controls\n *\n * Instantiate a `FormControl`, with an initial value.\n *\n * ```ts\n * const control = new FormControl('some value');\n * console.log(control.value);     // 'some value'\n *```\n *\n * The following example initializes the control with a form state object. The `value`\n * and `disabled` keys are required in this case.\n *\n * ```ts\n * const control = new FormControl({ value: 'n/a', disabled: true });\n * console.log(control.value);     // 'n/a'\n * console.log(control.status);    // 'DISABLED'\n * ```\n *\n * The following example initializes the control with a synchronous validator.\n *\n * ```ts\n * const control = new FormControl('', Validators.required);\n * console.log(control.value);      // ''\n * console.log(control.status);     // 'INVALID'\n * ```\n *\n * The following example initializes the control using an options object.\n *\n * ```ts\n * const control = new FormControl('', {\n *    validators: Validators.required,\n *    asyncValidators: myAsyncValidator\n * });\n * ```\n *\n * ### Configure the control to update on a blur event\n *\n * Set the `updateOn` option to `'blur'` to update on the blur `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'blur' });\n * ```\n *\n * ### Configure the control to update on a submit event\n *\n * Set the `updateOn` option to `'submit'` to update on a submit `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'submit' });\n * ```\n *\n * ### Reset the control back to an initial value\n *\n * You reset to a specific form state by passing through a standalone\n * value or a form state object that contains both a value and a disabled state\n * (these are the only two properties that cannot be calculated).\n *\n * ```ts\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n *\n * control.reset('Drew');\n *\n * console.log(control.value); // 'Drew'\n * ```\n *\n * ### Reset the control back to an initial value and disabled\n *\n * ```\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n * console.log(control.status); // 'VALID'\n *\n * control.reset({ value: 'Drew', disabled: true });\n *\n * console.log(control.value); // 'Drew'\n * console.log(control.status); // 'DISABLED'\n * ```\n *\n * @publicApi\n */\nclass FormControl extends AbstractControl {\n    /**\n     * Creates a new `FormControl` instance.\n     *\n     * @param formState Initializes the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(formState = null, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        /** @internal */\n        this._onChange = [];\n        /** @internal */\n        this._pendingChange = false;\n        this._applyFormState(formState);\n        this._setUpdateStrategy(validatorOrOpts);\n        this._initObservables();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`.\n            // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`\n            // to `true` to allow that during the control creation process.\n            emitEvent: !!this.asyncValidator\n        });\n    }\n    /**\n     * Sets a new value for the form control.\n     *\n     * @param value The new value for the control.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * * `emitModelToViewChange`: When true or not supplied  (the default), each change triggers an\n     * `onChange` event to\n     * update the view.\n     * * `emitViewToModelChange`: When true or not supplied (the default), each change triggers an\n     * `ngModelChange`\n     * event to update the model.\n     *\n     */\n    setValue(value, options = {}) {\n        this.value = this._pendingValue = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach((changeFn) => changeFn(this.value, options.emitViewToModelChange !== false));\n        }\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {@link FormControl#setValue setValue} at this level.\n     * It exists for symmetry with {@link FormGroup#patchValue patchValue} on `FormGroups` and\n     * `FormArrays`, where it does behave differently.\n     *\n     * @see `setValue` for options\n     */\n    patchValue(value, options = {}) {\n        this.setValue(value, options);\n    }\n    /**\n     * Resets the form control, marking it `pristine` and `untouched`, and setting\n     * the value to null.\n     *\n     * @param formState Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     *\n     */\n    reset(formState = null, options = {}) {\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this.value, options);\n        this._pendingChange = false;\n    }\n    /**\n     * @internal\n     */\n    _updateValue() { }\n    /**\n     * @internal\n     */\n    _anyControls(condition) {\n        return false;\n    }\n    /**\n     * @internal\n     */\n    _allControlsDisabled() {\n        return this.disabled;\n    }\n    /**\n     * Register a listener for change events.\n     *\n     * @param fn The method that is called when the value changes\n     */\n    registerOnChange(fn) {\n        this._onChange.push(fn);\n    }\n    /**\n     * Internal function to unregister a change events listener.\n     * @internal\n     */\n    _unregisterOnChange(fn) {\n        removeListItem(this._onChange, fn);\n    }\n    /**\n     * Register a listener for disabled events.\n     *\n     * @param fn The method that is called when the disabled status changes.\n     */\n    registerOnDisabledChange(fn) {\n        this._onDisabledChange.push(fn);\n    }\n    /**\n     * Internal function to unregister a disabled event listener.\n     * @internal\n     */\n    _unregisterOnDisabledChange(fn) {\n        removeListItem(this._onDisabledChange, fn);\n    }\n    /**\n     * @internal\n     */\n    _forEachChild(cb) { }\n    /** @internal */\n    _syncPendingControls() {\n        if (this.updateOn === 'submit') {\n            if (this._pendingDirty)\n                this.markAsDirty();\n            if (this._pendingTouched)\n                this.markAsTouched();\n            if (this._pendingChange) {\n                this.setValue(this._pendingValue, { onlySelf: true, emitModelToViewChange: false });\n                return true;\n            }\n        }\n        return false;\n    }\n    _applyFormState(formState) {\n        if (this._isBoxedValue(formState)) {\n            this.value = this._pendingValue = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this.value = this._pendingValue = formState;\n        }\n    }\n}\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormArray`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n    /**\n     * Creates a new `FormGroup` instance.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`. The status should be broadcasted via the `statusChanges` observable,\n            // so we set `emitEvent` to `true` to allow that during the control creation process.\n            emitEvent: !!this.asyncValidator\n        });\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update the value or validity of the control.\n     * Use {@link FormGroup#addControl addControl} instead.\n     *\n     * @param name The control name to register in the collection\n     * @param control Provides the control for the given name\n     */\n    registerControl(name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    }\n    /**\n     * Add a control to this group.\n     *\n     * If a control with a given name already exists, it would *not* be replaced with a new one.\n     * If you want to replace an existing control, use the {@link FormGroup#setControl setControl}\n     * method instead. This method also updates the value and validity of the control.\n     *\n     * @param name The control name to add to the collection\n     * @param control Provides the control for the given name\n     * @param options Specifies whether this FormGroup instance should emit events after a new\n     *     control is added.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * added. When false, no events are emitted.\n     */\n    addControl(name, control, options = {}) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Remove a control from this group.\n     *\n     * This method also updates the value and validity of the control.\n     *\n     * @param name The control name to remove from the collection\n     * @param options Specifies whether this FormGroup instance should emit events after a\n     *     control is removed.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * removed. When false, no events are emitted.\n     */\n    removeControl(name, options = {}) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Replace an existing control.\n     *\n     * If a control with a given name does not exist in this `FormGroup`, it will be added.\n     *\n     * @param name The control name to replace in the collection\n     * @param control Provides the control for the given name\n     * @param options Specifies whether this FormGroup instance should emit events after an\n     *     existing control is replaced.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * replaced with a new one. When false, no events are emitted.\n     */\n    setControl(name, control, options = {}) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * Reports false for disabled controls. If you'd like to check for existence in the group\n     * only, use {@link AbstractControl#get get} instead.\n     *\n     * @param controlName The control name to check for existence in the collection\n     *\n     * @returns false for disabled controls, true otherwise.\n     */\n    contains(controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    }\n    /**\n     * Sets the value of the `FormGroup`. It accepts an object that matches\n     * the structure of the group, with control names as keys.\n     *\n     * @usageNotes\n     * ### Set the complete value for the form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl(),\n     *   last: new FormControl()\n     * });\n     *\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.setValue({first: 'Nancy', last: 'Drew'});\n     * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     * ```\n     *\n     * @throws When strict checks fail, such as setting the value of a control\n     * that doesn't exist or if you exclude a value of a control that does exist.\n     *\n     * @param value The new value for the control that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach(name => {\n            this._throwIfControlMissing(name);\n            this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormGroup`. It accepts an object with control\n     * names as keys, and does its best to match the values to the correct controls\n     * in the group.\n     *\n     * It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the value for a form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *    first: new FormControl(),\n     *    last: new FormControl()\n     * });\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.patchValue({first: 'Nancy'});\n     * console.log(form.value);   // {first: 'Nancy', last: null}\n     * ```\n     *\n     * @param value The object that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes and\n     * emits events after the value is patched.\n     * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n     * true.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control value\n     * is updated. When false, no events are emitted. The configuration options are passed to\n     * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n        // `patchValue` can be called recursively and inner data structures might have these values, so\n        // we just ignore such cases when a field containing FormGroup instance receives `null` or\n        // `undefined` as a value.\n        if (value == null /* both `null` and `undefined` */)\n            return;\n        Object.keys(value).forEach(name => {\n            if (this.controls[name]) {\n                this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets\n     * the value of all descendants to null.\n     *\n     * You reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * is a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * @param value Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the group is reset.\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * @usageNotes\n     *\n     * ### Reset the form group values\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * console.log(form.value);  // {first: 'first name', last: 'last name'}\n     *\n     * form.reset({ first: 'name', last: 'last name' });\n     *\n     * console.log(form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * ### Reset the form group values and disabled status\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(form.value);  // {last: 'last'}\n     * console.log(form.get('first').status);  // 'DISABLED'\n     * ```\n     */\n    reset(value = {}, options = {}) {\n        this._forEachChild((control, name) => {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the `FormGroup`, including any disabled controls.\n     *\n     * Retrieves all values regardless of disabled status.\n     * The `value` property is the best way to get the value of the group, because\n     * it excludes disabled controls in the `FormGroup`.\n     */\n    getRawValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            acc[name] = control instanceof FormControl ? control.value : control.getRawValue();\n            return acc;\n        });\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        });\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _throwIfControlMissing(name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(`\n        There are no form controls registered with this group yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.controls[name]) {\n            throw new Error(`Cannot find form control with name: ${name}.`);\n        }\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        Object.keys(this.controls).forEach(key => {\n            // The list of controls can change (for ex. controls might be removed) while the loop\n            // is running (as a result of invoking Forms API in `valueChanges` subscription), so we\n            // have to null check before invoking the callback.\n            const control = this.controls[key];\n            control && cb(control, key);\n        });\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value = this._reduceValue();\n    }\n    /** @internal */\n    _anyControls(condition) {\n        for (const controlName of Object.keys(this.controls)) {\n            const control = this.controls[controlName];\n            if (this.contains(controlName) && condition(control)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** @internal */\n    _reduceValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            if (control.enabled || this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    }\n    /** @internal */\n    _reduceChildren(initValue, fn) {\n        let res = initValue;\n        this._forEachChild((control, name) => {\n            res = fn(res, control, name);\n        });\n        return res;\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const controlName of Object.keys(this.controls)) {\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    }\n    /** @internal */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((control, name) => {\n            if (value[name] === undefined) {\n                throw new Error(`Must supply a value for form control with name: '${name}'.`);\n            }\n        });\n    }\n}\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormGroup`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n    /**\n     * Creates a new `FormArray` instance.\n     *\n     * @param controls An array of child controls. Each child control is given an index\n     * where it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`.\n            // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`\n            // to `true` to allow that during the control creation process.\n            emitEvent: !!this.asyncValidator\n        });\n    }\n    /**\n     * Get the `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to retrieve the control\n     */\n    at(index) {\n        return this.controls[index];\n    }\n    /**\n     * Insert a new `AbstractControl` at the end of the array.\n     *\n     * @param control Form control to be inserted\n     * @param options Specifies whether this FormArray instance should emit events after a new\n     *     control is added.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * inserted. When false, no events are emitted.\n     */\n    push(control, options = {}) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Insert a new `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to insert the control\n     * @param control Form control to be inserted\n     * @param options Specifies whether this FormArray instance should emit events after a new\n     *     control is inserted.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * inserted. When false, no events are emitted.\n     */\n    insert(index, control, options = {}) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n    }\n    /**\n     * Remove the control at the given `index` in the array.\n     *\n     * @param index Index in the array to remove the control\n     * @param options Specifies whether this FormArray instance should emit events after a\n     *     control is removed.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * removed. When false, no events are emitted.\n     */\n    removeAt(index, options = {}) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(() => { });\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param index Index in the array to replace the control\n     * @param control The `AbstractControl` control to replace the existing control\n     * @param options Specifies whether this FormArray instance should emit events after an\n     *     existing control is replaced with a new one.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * replaced with a new one. When false, no events are emitted.\n     */\n    setControl(index, control, options = {}) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(() => { });\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Length of the control array.\n     */\n    get length() {\n        return this.controls.length;\n    }\n    /**\n     * Sets the value of the `FormArray`. It accepts an array that matches\n     * the structure of the control.\n     *\n     * This method performs strict checks, and throws an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     * @usageNotes\n     * ### Set the values for the controls in the form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl(),\n     *   new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.setValue(['Nancy', 'Drew']);\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        value.forEach((newValue, index) => {\n            this._throwIfControlMissing(index);\n            this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormArray`. It accepts an array that matches the\n     * structure of the control, and does its best to match the values to the correct\n     * controls in the group.\n     *\n     * It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the values for controls in a form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.patchValue(['Nancy']);\n     * console.log(arr.value);   // ['Nancy', null]\n     * ```\n     *\n     * @param value Array of latest values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control value\n     * is updated. When false, no events are emitted. The configuration options are passed to\n     * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n        // `patchValue` can be called recursively and inner data structures might have these values, so\n        // we just ignore such cases when a field containing FormArray instance receives `null` or\n        // `undefined` as a value.\n        if (value == null /* both `null` and `undefined` */)\n            return;\n        value.forEach((newValue, index) => {\n            if (this.at(index)) {\n                this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n     * value of all descendants to null or null maps.\n     *\n     * You reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state is a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * @usageNotes\n     * ### Reset the values in a form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * arr.reset(['name', 'last name']);\n     *\n     * console.log(arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * ### Reset the values in a form array and the disabled status for the first control\n     *\n     * ```\n     * arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(arr.value);  // ['last']\n     * console.log(arr.at(0).status);  // 'DISABLED'\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    reset(value = [], options = {}) {\n        this._forEachChild((control, index) => {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * Reports all values regardless of disabled status.\n     * For enabled controls only, the `value` property is the best way to get the value of the array.\n     */\n    getRawValue() {\n        return this.controls.map((control) => {\n            return control instanceof FormControl ? control.value : control.getRawValue();\n        });\n    }\n    /**\n     * Remove all controls in the `FormArray`.\n     *\n     * @param options Specifies whether this FormArray instance should emit events after all\n     *     controls are removed.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when all controls\n     * in this FormArray instance are removed. When false, no events are emitted.\n     *\n     * @usageNotes\n     * ### Remove all elements from a FormArray\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.length);  // 2\n     *\n     * arr.clear();\n     * console.log(arr.length);  // 0\n     * ```\n     *\n     * It's a simpler and more efficient alternative to removing all elements one by one:\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     *\n     * while (arr.length) {\n     *    arr.removeAt(0);\n     * }\n     * ```\n     */\n    clear(options = {}) {\n        if (this.controls.length < 1)\n            return;\n        this._forEachChild((control) => control._registerOnCollectionChange(() => { }));\n        this.controls.splice(0);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this.controls.reduce((updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        }, false);\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _throwIfControlMissing(index) {\n        if (!this.controls.length) {\n            throw new Error(`\n        There are no form controls registered with this array yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.at(index)) {\n            throw new Error(`Cannot find form control at index ${index}`);\n        }\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        this.controls.forEach((control, index) => {\n            cb(control, index);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value =\n            this.controls.filter((control) => control.enabled || this.disabled)\n                .map((control) => control.value);\n    }\n    /** @internal */\n    _anyControls(condition) {\n        return this.controls.some((control) => control.enabled && condition(control));\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => this._registerControl(control));\n    }\n    /** @internal */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((control, i) => {\n            if (value[i] === undefined) {\n                throw new Error(`Must supply a value for form control at index: ${i}.`);\n            }\n        });\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const control of this.controls) {\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    }\n    _registerControl(control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgForm)\n};\nconst resolvedPromise$1 = (() => Promise.resolve(null))();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgForm extends ControlContainer {\n    constructor(validators, asyncValidators) {\n        super();\n        /**\n         * @description\n         * Returns whether the form submission has been triggered.\n         */\n        this.submitted = false;\n        this._directives = [];\n        /**\n         * @description\n         * Event emitter for the \"ngSubmit\" event\n         */\n        this.ngSubmit = new EventEmitter();\n        this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    /** @nodoc */\n    ngAfterViewInit() {\n        this._setUpdateStrategy();\n    }\n    /**\n     * @description\n     * The directive instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * The internal `FormGroup` instance.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it is always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Returns a map of the controls in this group.\n     */\n    get controls() {\n        return this.form.controls;\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    addControl(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            dir.control =\n                container.registerControl(dir.name, dir.control);\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n            this._directives.push(dir);\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `NgModel` instance from the internal list of directives\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    removeControl(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n            removeListItem(this._directives, dir);\n        });\n    }\n    /**\n     * @description\n     * Adds a new `NgModelGroup` directive instance to the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    addFormGroup(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            const group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    }\n    /**\n     * @description\n     * Removes the `NgModelGroup` directive instance from the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    removeFormGroup(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `NgControl` directive.\n     *\n     * @param dir The `NgControl` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        resolvedPromise$1.then(() => {\n            const ctrl = this.form.get(dir.path);\n            ctrl.setValue(value);\n        });\n    }\n    /**\n     * @description\n     * Sets the value for this `FormGroup`.\n     *\n     * @param value The new value\n     */\n    setValue(value) {\n        this.control.setValue(value);\n    }\n    /**\n     * @description\n     * Method called when the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this.submitted = true;\n        syncPendingControls(this.form, this._directives);\n        this.ngSubmit.emit($event);\n        return false;\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        this.submitted = false;\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.form._updateOn = this.options.updateOn;\n        }\n    }\n    /** @internal */\n    _findContainer(path) {\n        path.pop();\n        return path.length ? this.form.get(path) : this.form;\n    }\n}\nNgForm.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgForm, deps: [{ token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgForm.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: { options: [\"ngFormOptions\", \"options\"] }, outputs: { ngSubmit: \"ngSubmit\" }, host: { listeners: { \"submit\": \"onSubmit($event)\", \"reset\": \"onReset()\" } }, providers: [formDirectiveProvider$1], exportAs: [\"ngForm\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgForm, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]',\n                    providers: [formDirectiveProvider$1],\n                    host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                    outputs: ['ngSubmit'],\n                    exportAs: 'ngForm'\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [NG_VALIDATORS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [NG_ASYNC_VALIDATORS]\n                    }] }];\n    }, propDecorators: { options: [{\n                type: Input,\n                args: ['ngFormOptions']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nclass AbstractFormGroupDirective extends ControlContainer {\n    /** @nodoc */\n    ngOnInit() {\n        this._checkParentType();\n        // Register the group with its parent group.\n        this.formDirective.addFormGroup(this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            // Remove the group from its parent group.\n            this.formDirective.removeFormGroup(this);\n        }\n    }\n    /**\n     * @description\n     * The `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormGroup(this);\n    }\n    /**\n     * @description\n     * The path to this group from the top-level directive.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /** @internal */\n    _checkParentType() { }\n}\nAbstractFormGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: AbstractFormGroupDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nAbstractFormGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: AbstractFormGroupDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: AbstractFormGroupDirective, decorators: [{\n            type: Directive\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction modelParentException() {\n    return new Error(`\n    ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n    formGroup's partner directive \"formControlName\" instead.  Example:\n\n    ${formControlNameExample}\n\n    Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n    Example:\n\n    ${ngModelWithFormGroupExample}`);\n}\nfunction formGroupNameException() {\n    return new Error(`\n    ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n    Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nfunction missingNameException() {\n    return new Error(`If ngModel is used within a form tag, either the name attribute must be set or the form\n    control must be defined as 'standalone' in ngModelOptions.\n\n    Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n    Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n}\nfunction modelGroupParentException() {\n    return new Error(`\n    ngModelGroup cannot be used with a parent formGroup directive.\n\n    Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgModelGroup)\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModelGroup extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw modelGroupParentException();\n        }\n    }\n}\nNgModelGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgModelGroup, deps: [{ token: ControlContainer, host: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgModelGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: NgModelGroup, selector: \"[ngModelGroup]\", inputs: { name: [\"ngModelGroup\", \"name\"] }, providers: [modelGroupProvider], exportAs: [\"ngModelGroup\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgModelGroup, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' }]\n        }], ctorParameters: function () {\n        return [{ type: ControlContainer, decorators: [{\n                        type: Host\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [NG_VALIDATORS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [NG_ASYNC_VALIDATORS]\n                    }] }];\n    }, propDecorators: { name: [{\n                type: Input,\n                args: ['ngModelGroup']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef(() => NgModel)\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have an old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel`s have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise = (() => Promise.resolve(null))();\n/**\n * @description\n * Creates a `FormControl` instance from a domain model and binds it\n * to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the domain model's value in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-in-a-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like the validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You can then access the control using the directive's `control` property.\n * However, the most commonly used properties (like `valid` and `dirty`) also exist on the control\n * for direct access. See a full list of properties directly available in\n * `AbstractControlDirective`.\n *\n * @see `RadioControlValueAccessor`\n * @see `SelectControlValueAccessor`\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel `name` attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. Here,\n * an attribute identified as name is used within a custom form control component. To still be able\n * to specify the NgModel's name, you must specify it using the `ngModelOptions` input instead.\n *\n * ```html\n * <form>\n *   <my-custom-form-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-custom-form-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModel extends NgControl {\n    constructor(parent, validators, asyncValidators, valueAccessors) {\n        super();\n        this.control = new FormControl();\n        /** @internal */\n        this._registered = false;\n        /**\n         * @description\n         * Event emitter for producing the `ngModelChange` event after\n         * the view model updates.\n         */\n        this.update = new EventEmitter();\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        this.formDirective && this.formDirective.removeControl(this);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return this._parent ? controlPath(this.name, this._parent) : [this.name];\n    }\n    /**\n     * @description\n     * The top-level directive for this control if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value emitted by `ngModelChange`.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _setUpControl() {\n        this._setUpdateStrategy();\n        this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n        this._registered = true;\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.control._updateOn = this.options.updateOn;\n        }\n    }\n    _isStandalone() {\n        return !this._parent || !!(this.options && this.options.standalone);\n    }\n    _setUpStandalone() {\n        setUpControl(this.control, this);\n        this.control.updateValueAndValidity({ emitEvent: false });\n    }\n    _checkForErrors() {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    }\n    _checkParentType() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!(this._parent instanceof NgModelGroup) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                throw formGroupNameException();\n            }\n            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                throw modelParentException();\n            }\n        }\n    }\n    _checkName() {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw missingNameException();\n        }\n    }\n    _updateValue(value) {\n        resolvedPromise.then(() => {\n            this.control.setValue(value, { emitViewToModelChange: false });\n        });\n    }\n    _updateDisabled(changes) {\n        const disabledValue = changes['isDisabled'].currentValue;\n        const isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n        resolvedPromise.then(() => {\n            if (isDisabled && !this.control.disabled) {\n                this.control.disable();\n            }\n            else if (!isDisabled && this.control.disabled) {\n                this.control.enable();\n            }\n        });\n    }\n}\nNgModel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgModel, deps: [{ token: ControlContainer, host: true, optional: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgModel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: { name: \"name\", isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"], options: [\"ngModelOptions\", \"options\"] }, outputs: { update: \"ngModelChange\" }, providers: [formControlBinding$1], exportAs: [\"ngModel\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgModel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngModel]:not([formControlName]):not([formControl])',\n                    providers: [formControlBinding$1],\n                    exportAs: 'ngModel'\n                }]\n        }], ctorParameters: function () {\n        return [{ type: ControlContainer, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Host\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [NG_VALIDATORS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [NG_ASYNC_VALIDATORS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [NG_VALUE_ACCESSOR]\n                    }] }];\n    }, propDecorators: { name: [{\n                type: Input\n            }], isDisabled: [{\n                type: Input,\n                args: ['disabled']\n            }], model: [{\n                type: Input,\n                args: ['ngModel']\n            }], options: [{\n                type: Input,\n                args: ['ngModelOptions']\n            }], update: [{\n                type: Output,\n                args: ['ngModelChange']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nclass ɵNgNoValidate {\n}\nɵNgNoValidate.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ɵNgNoValidate, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nɵNgNoValidate.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\", host: { attributes: { \"novalidate\": \"\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ɵNgNoValidate, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                    host: { 'novalidate': '' },\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberValueAccessor),\n    multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NumberValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        const normalizedValue = value == null ? '' : value;\n        this.setProperty('value', normalizedValue);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n}\nNumberValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NumberValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nNumberValueAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\", host: { listeners: { \"input\": \"onChange($event.target.value)\", \"blur\": \"onTouched()\" } }, providers: [NUMBER_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NumberValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                    host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                    providers: [NUMBER_VALUE_ACCESSOR]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioControlValueAccessor),\n    multi: true\n};\nfunction throwNameError() {\n    throw new Error(`\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\n/**\n * Internal-only NgModule that works as a host for the `RadioControlRegistry` tree-shakable\n * provider. Note: the `InternalFormsSharedModule` can not be used here directly, since it's\n * declared *after* the `RadioControlRegistry` class and the `providedIn` doesn't support\n * `forwardRef` logic.\n */\nclass RadioControlRegistryModule {\n}\nRadioControlRegistryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RadioControlRegistryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRadioControlRegistryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RadioControlRegistryModule });\nRadioControlRegistryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RadioControlRegistryModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RadioControlRegistryModule, decorators: [{\n            type: NgModule\n        }] });\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nclass RadioControlRegistry {\n    constructor() {\n        this._accessors = [];\n    }\n    /**\n     * @description\n     * Adds a control to the internal registry. For internal use only.\n     */\n    add(control, accessor) {\n        this._accessors.push([control, accessor]);\n    }\n    /**\n     * @description\n     * Removes a control from the internal registry. For internal use only.\n     */\n    remove(accessor) {\n        for (let i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    }\n    /**\n     * @description\n     * Selects a radio button. For internal use only.\n     */\n    select(accessor) {\n        this._accessors.forEach((c) => {\n            if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    }\n    _isSameGroup(controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    }\n}\nRadioControlRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RadioControlRegistry, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nRadioControlRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RadioControlRegistry, providedIn: RadioControlRegistryModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RadioControlRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: RadioControlRegistryModule }]\n        }] });\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RadioControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor(renderer, elementRef, _registry, _injector) {\n        super(renderer, elementRef);\n        this._registry = _registry;\n        this._injector = _injector;\n        /**\n         * The registered callback function called when a change event occurs on the input element.\n         * Note: we declare `onChange` here (also used as host listener) as a function with no arguments\n         * to override the `onChange` function (which expects 1 argument) in the parent\n         * `BaseControlValueAccessor` class.\n         * @nodoc\n         */\n        this.onChange = () => { };\n    }\n    /** @nodoc */\n    ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        this._registry.remove(this);\n    }\n    /**\n     * Sets the \"checked\" property value on the radio input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this._state = value === this.value;\n        this.setProperty('checked', this._state);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this._fn = fn;\n        this.onChange = () => {\n            fn(this.value);\n            this._registry.select(this);\n        };\n    }\n    /**\n     * Sets the \"value\" on the radio input element and unchecks it.\n     *\n     * @param value\n     */\n    fireUncheck(value) {\n        this.writeValue(value);\n    }\n    _checkName() {\n        if (this.name && this.formControlName && this.name !== this.formControlName &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    }\n}\nRadioControlValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RadioControlValueAccessor, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: RadioControlRegistry }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Directive });\nRadioControlValueAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: RadioControlValueAccessor, selector: \"input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]\", inputs: { name: \"name\", formControlName: \"formControlName\", value: \"value\" }, host: { listeners: { \"change\": \"onChange()\", \"blur\": \"onTouched()\" } }, providers: [RADIO_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RadioControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                    host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                    providers: [RADIO_VALUE_ACCESSOR]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: RadioControlRegistry }, { type: i0.Injector }]; }, propDecorators: { name: [{\n                type: Input\n            }], formControlName: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeValueAccessor),\n    multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RangeValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.setProperty('value', parseFloat(value));\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n}\nRangeValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RangeValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nRangeValueAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: RangeValueAccessor, selector: \"input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]\", host: { listeners: { \"change\": \"onChange($event.target.value)\", \"input\": \"onChange($event.target.value)\", \"blur\": \"onTouched()\" } }, providers: [RANGE_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RangeValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                    host: {\n                        '(change)': 'onChange($event.target.value)',\n                        '(input)': 'onChange($event.target.value)',\n                        '(blur)': 'onTouched()'\n                    },\n                    providers: [RANGE_VALUE_ACCESSOR]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = new InjectionToken('NgModelWithFormControlWarning');\nconst formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlDirective)\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlDirective extends NgControl {\n    constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        /** @deprecated as of v6 */\n        this.update = new EventEmitter();\n        /**\n         * @description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n         *\n         * @internal\n         */\n        this._ngModelWarningSent = false;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            console.warn(disabledAttrWarning);\n        }\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if (this._isControlChanged(changes)) {\n            const previousForm = changes['form'].previousValue;\n            if (previousForm) {\n                cleanUpControl(previousForm, this, /* validateControlPresenceOnChange */ false);\n            }\n            setUpControl(this.form, this);\n            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                this.valueAccessor.setDisabledState(true);\n            }\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n            }\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.form) {\n            cleanUpControl(this.form, this, /* validateControlPresenceOnChange */ false);\n        }\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * The `FormControl` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _isControlChanged(changes) {\n        return changes.hasOwnProperty('form');\n    }\n}\n/**\n * @description\n * Static property used to track whether any ngModel warnings have been sent across\n * all instances of FormControlDirective. Used to support warning config of \"once\".\n *\n * @internal\n */\nFormControlDirective._ngModelWarningSentOnce = false;\nFormControlDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: FormControlDirective, deps: [{ token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }, { token: NG_MODEL_WITH_FORM_CONTROL_WARNING, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nFormControlDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: FormControlDirective, selector: \"[formControl]\", inputs: { form: [\"formControl\", \"form\"], isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, providers: [formControlBinding], exportAs: [\"ngForm\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: FormControlDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formControl]', providers: [formControlBinding], exportAs: 'ngForm' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [NG_VALIDATORS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [NG_ASYNC_VALIDATORS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [NG_VALUE_ACCESSOR]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n                    }] }];\n    }, propDecorators: { form: [{\n                type: Input,\n                args: ['formControl']\n            }], isDisabled: [{\n                type: Input,\n                args: ['disabled']\n            }], model: [{\n                type: Input,\n                args: ['ngModel']\n            }], update: [{\n                type: Output,\n                args: ['ngModelChange']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupDirective)\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * @usageNotes\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupDirective extends ControlContainer {\n    constructor(validators, asyncValidators) {\n        super();\n        this.validators = validators;\n        this.asyncValidators = asyncValidators;\n        /**\n         * @description\n         * Reports whether the form submission has been triggered.\n         */\n        this.submitted = false;\n        /**\n         * Callback that should be invoked when controls in FormGroup or FormArray collection change\n         * (added or removed). This callback triggers corresponding DOM updates.\n         */\n        this._onCollectionChange = () => this._updateDomValue();\n        /**\n         * @description\n         * Tracks the list of added `FormControlName` instances\n         */\n        this.directives = [];\n        /**\n         * @description\n         * Tracks the `FormGroup` bound to this directive.\n         */\n        this.form = null;\n        /**\n         * @description\n         * Emits an event when the form submission has been triggered.\n         */\n        this.ngSubmit = new EventEmitter();\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n            this._oldForm = this.form;\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.form) {\n            cleanUpValidators(this.form, this);\n            // Currently the `onCollectionChange` callback is rewritten each time the\n            // `_registerOnCollectionChange` function is invoked. The implication is that cleanup should\n            // happen *only* when the `onCollectionChange` callback was set by this directive instance.\n            // Otherwise it might cause overriding a callback of some other directive instances. We should\n            // consider updating this logic later to make it similar to how `onChange` callbacks are\n            // handled, see https://github.com/angular/angular/issues/39732 for additional info.\n            if (this.form._onCollectionChange === this._onCollectionChange) {\n                this.form._registerOnCollectionChange(() => { });\n            }\n        }\n    }\n    /**\n     * @description\n     * Returns this directive's instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * Returns the `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    addControl(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `FormControlName` instance from the internal list of directives\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    removeControl(dir) {\n        cleanUpControl(dir.control || null, dir, /* validateControlPresenceOnChange */ false);\n        removeListItem(this.directives, dir);\n    }\n    /**\n     * Adds a new `FormGroupName` directive instance to the form.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    addFormGroup(dir) {\n        this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormGroupName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    removeFormGroup(dir) {\n        this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Performs the necessary setup when a `FormArrayName` directive instance is added to the view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    addFormArray(dir) {\n        this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormArrayName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    removeFormArray(dir) {\n        this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    getFormArray(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `FormControlName` directive.\n     *\n     * @param dir The `FormControlName` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        const ctrl = this.form.get(dir.path);\n        ctrl.setValue(value);\n    }\n    /**\n     * @description\n     * Method called with the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this.submitted = true;\n        syncPendingControls(this.form, this.directives);\n        this.ngSubmit.emit($event);\n        return false;\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        this.submitted = false;\n    }\n    /** @internal */\n    _updateDomValue() {\n        this.directives.forEach(dir => {\n            const oldCtrl = dir.control;\n            const newCtrl = this.form.get(dir.path);\n            if (oldCtrl !== newCtrl) {\n                // Note: the value of the `dir.control` may not be defined, for example when it's a first\n                // `FormControl` that is added to a `FormGroup` instance (via `addControl` call).\n                cleanUpControl(oldCtrl || null, dir);\n                // Check whether new control at the same location inside the corresponding `FormGroup` is an\n                // instance of `FormControl` and perform control setup only if that's the case.\n                // Note: we don't need to clear the list of directives (`this.directives`) here, it would be\n                // taken care of in the `removeControl` method invoked when corresponding `formControlName`\n                // directive instance is being removed (invoked from `FormControlName.ngOnDestroy`).\n                if (newCtrl instanceof FormControl) {\n                    setUpControl(newCtrl, dir);\n                    dir.control = newCtrl;\n                }\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    }\n    _setUpFormContainer(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        // NOTE: this operation looks unnecessary in case no new validators were added in\n        // `setUpFormContainer` call. Consider updating this code to match the logic in\n        // `_cleanUpFormContainer` function.\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    _cleanUpFormContainer(dir) {\n        if (this.form) {\n            const ctrl = this.form.get(dir.path);\n            if (ctrl) {\n                const isControlUpdated = cleanUpFormContainer(ctrl, dir);\n                if (isControlUpdated) {\n                    // Run validity check only in case a control was updated (i.e. view validators were\n                    // removed) as removing view validators might cause validity to change.\n                    ctrl.updateValueAndValidity({ emitEvent: false });\n                }\n            }\n        }\n    }\n    _updateRegistrations() {\n        this.form._registerOnCollectionChange(this._onCollectionChange);\n        if (this._oldForm) {\n            this._oldForm._registerOnCollectionChange(() => { });\n        }\n    }\n    _updateValidators() {\n        setUpValidators(this.form, this);\n        if (this._oldForm) {\n            cleanUpValidators(this._oldForm, this);\n        }\n    }\n    _checkFormPresent() {\n        if (!this.form && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw missingFormException();\n        }\n    }\n}\nFormGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: FormGroupDirective, deps: [{ token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nFormGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: FormGroupDirective, selector: \"[formGroup]\", inputs: { form: [\"formGroup\", \"form\"] }, outputs: { ngSubmit: \"ngSubmit\" }, host: { listeners: { \"submit\": \"onSubmit($event)\", \"reset\": \"onReset()\" } }, providers: [formDirectiveProvider], exportAs: [\"ngForm\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: FormGroupDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formGroup]',\n                    providers: [formDirectiveProvider],\n                    host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                    exportAs: 'ngForm'\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [NG_VALIDATORS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [NG_ASYNC_VALIDATORS]\n                    }] }];\n    }, propDecorators: { form: [{\n                type: Input,\n                args: ['formGroup']\n            }], ngSubmit: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` to link, and\n * looks for a `FormGroup` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the {@link AbstractControl#get get} method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the {@link AbstractControl#get get} method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupName extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw groupParentException();\n        }\n    }\n}\nFormGroupName.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: FormGroupName, deps: [{ token: ControlContainer, host: true, optional: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nFormGroupName.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: FormGroupName, selector: \"[formGroupName]\", inputs: { name: [\"formGroupName\", \"name\"] }, providers: [formGroupNameProvider], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: FormGroupName, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] }]\n        }], ctorParameters: function () {\n        return [{ type: ControlContainer, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Host\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [NG_VALIDATORS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [NG_ASYNC_VALIDATORS]\n                    }] }];\n    }, propDecorators: { name: [{\n                type: Input,\n                args: ['formGroupName']\n            }] } });\nconst formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormArrayName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormArrayName extends ControlContainer {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /**\n     * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n     * @throws If the directive does not have a valid parent.\n     * @nodoc\n     */\n    ngOnInit() {\n        this._checkParentType();\n        this.formDirective.addFormArray(this);\n    }\n    /**\n     * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @nodoc\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    }\n    /**\n     * @description\n     * The `FormArray` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormArray(this);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw arrayParentException();\n        }\n    }\n}\nFormArrayName.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: FormArrayName, deps: [{ token: ControlContainer, host: true, optional: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nFormArrayName.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: FormArrayName, selector: \"[formArrayName]\", inputs: { name: [\"formArrayName\", \"name\"] }, providers: [formArrayNameProvider], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: FormArrayName, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] }]\n        }], ctorParameters: function () {\n        return [{ type: ControlContainer, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Host\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [NG_VALIDATORS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [NG_ASYNC_VALIDATORS]\n                    }] }];\n    }, propDecorators: { name: [{\n                type: Input,\n                args: ['formArrayName']\n            }] } });\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlName)\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlName extends NgControl {\n    constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        this._added = false;\n        /** @deprecated as of v6 */\n        this.update = new EventEmitter();\n        /**\n         * @description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular FormControlName instance. Used to support warning config of \"always\".\n         *\n         * @internal\n         */\n        this._ngModelWarningSent = false;\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            console.warn(disabledAttrWarning);\n        }\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n            }\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    _checkParentType() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!(this._parent instanceof FormGroupName) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                throw ngModelGroupException();\n            }\n            else if (!(this._parent instanceof FormGroupName) &&\n                !(this._parent instanceof FormGroupDirective) &&\n                !(this._parent instanceof FormArrayName)) {\n                throw controlParentException();\n            }\n        }\n    }\n    _setUpControl() {\n        this._checkParentType();\n        this.control = this.formDirective.addControl(this);\n        if (this.control.disabled && this.valueAccessor.setDisabledState) {\n            this.valueAccessor.setDisabledState(true);\n        }\n        this._added = true;\n    }\n}\n/**\n * @description\n * Static property used to track whether any ngModel warnings have been sent across\n * all instances of FormControlName. Used to support warning config of \"once\".\n *\n * @internal\n */\nFormControlName._ngModelWarningSentOnce = false;\nFormControlName.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: FormControlName, deps: [{ token: ControlContainer, host: true, optional: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }, { token: NG_MODEL_WITH_FORM_CONTROL_WARNING, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nFormControlName.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: FormControlName, selector: \"[formControlName]\", inputs: { name: [\"formControlName\", \"name\"], isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, providers: [controlNameBinding], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: FormControlName, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formControlName]', providers: [controlNameBinding] }]\n        }], ctorParameters: function () {\n        return [{ type: ControlContainer, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Host\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [NG_VALIDATORS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [NG_ASYNC_VALIDATORS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [NG_VALUE_ACCESSOR]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n                    }] }];\n    }, propDecorators: { name: [{\n                type: Input,\n                args: ['formControlName']\n            }], isDisabled: [{\n                type: Input,\n                args: ['disabled']\n            }], model: [{\n                type: Input,\n                args: ['ngModel']\n            }], update: [{\n                type: Output,\n                args: ['ngModelChange']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessor),\n    multi: true\n};\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in IE, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on the input element. The \"selectedIndex\"\n     * property is also set if an ID is provided on the option element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.value = value;\n        const id = this._getOptionId(value);\n        if (id == null) {\n            this.setProperty('selectedIndex', -1);\n        }\n        const valueString = _buildValueString$1(id, value);\n        this.setProperty('value', valueString);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (valueString) => {\n            this.value = this._getOptionValue(valueString);\n            fn(this.value);\n        };\n    }\n    /** @internal */\n    _registerOption() {\n        return (this._idCounter++).toString();\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of Array.from(this._optionMap.keys())) {\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    }\n}\nSelectControlValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: SelectControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nSelectControlValueAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: { compareWith: \"compareWith\" }, host: { listeners: { \"change\": \"onChange($event.target.value)\", \"blur\": \"onTouched()\" } }, providers: [SELECT_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: SelectControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                    host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                    providers: [SELECT_VALUE_ACCESSOR]\n                }]\n        }], propDecorators: { compareWith: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectControlValueAccessor`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgSelectOption {\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._select._optionMap.set(this.id, value);\n        this._setElementValue(_buildValueString$1(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        this._setElementValue(value);\n        if (this._select)\n            this._select.writeValue(this._select.value);\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n}\nNgSelectOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgSelectOption, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: SelectControlValueAccessor, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgSelectOption.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: NgSelectOption, selector: \"option\", inputs: { ngValue: \"ngValue\", value: \"value\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: NgSelectOption, decorators: [{\n            type: Directive,\n            args: [{ selector: 'option' }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: SelectControlValueAccessor, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Host\n                    }] }];\n    }, propDecorators: { ngValue: [{\n                type: Input,\n                args: ['ngValue']\n            }], value: [{\n                type: Input,\n                args: ['value']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n    multi: true\n};\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (typeof value === 'string')\n        value = `'${value}'`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/** Mock interface for HTMLCollection */\nclass HTMLCollection {\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see `SelectControlValueAccessor`\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectMultipleControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on one or of more of the select's options.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.value = value;\n        let optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            const ids = value.map((v) => this._getOptionId(v));\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(ids.indexOf(o.toString()) > -1);\n            };\n        }\n        else {\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(false);\n            };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    }\n    /**\n     * Registers a function called when the control value changes\n     * and writes an array of the selected options.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (element) => {\n            const selected = [];\n            const selectedOptions = element.selectedOptions;\n            if (selectedOptions !== undefined) {\n                const options = selectedOptions;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options[i];\n                    const val = this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            // Degrade to use `options` when `selectedOptions` property is not available.\n            // Note: the `selectedOptions` is available in all supported browsers, but the Domino lib\n            // doesn't have it currently, see https://github.com/fgnass/domino/issues/177.\n            else {\n                const options = element.options;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options[i];\n                    if (opt.selected) {\n                        const val = this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            this.value = selected;\n            fn(selected);\n        };\n    }\n    /** @internal */\n    _registerOption(value) {\n        const id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of Array.from(this._optionMap.keys())) {\n            if (this._compareWith(this._optionMap.get(id)._value, value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n    }\n}\nSelectMultipleControlValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: SelectMultipleControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nSelectMultipleControlValueAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: SelectMultipleControlValueAccessor, selector: \"select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]\", inputs: { compareWith: \"compareWith\" }, host: { listeners: { \"change\": \"onChange($event.target)\", \"blur\": \"onTouched()\" } }, providers: [SELECT_MULTIPLE_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: SelectMultipleControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                    host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                    providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n                }]\n        }], propDecorators: { compareWith: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectMultipleControlValueAccessor`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass ɵNgSelectMultipleOption {\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._value = value;\n        this._setElementValue(_buildValueString(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        if (this._select) {\n            this._value = value;\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        }\n        else {\n            this._setElementValue(value);\n        }\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @internal */\n    _setSelected(selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n}\nɵNgSelectMultipleOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ɵNgSelectMultipleOption, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: SelectMultipleControlValueAccessor, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nɵNgSelectMultipleOption.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: ɵNgSelectMultipleOption, selector: \"option\", inputs: { ngValue: \"ngValue\", value: \"value\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ɵNgSelectMultipleOption, decorators: [{\n            type: Directive,\n            args: [{ selector: 'option' }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: SelectMultipleControlValueAccessor, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Host\n                    }] }];\n    }, propDecorators: { ngValue: [{\n                type: Input,\n                args: ['ngValue']\n            }], value: [{\n                type: Input,\n                args: ['value']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Method that updates string to integer if not already a number\n *\n * @param value The value to convert to integer\n * @returns value of parameter in number or integer.\n */\nfunction toInteger(value) {\n    return typeof value === 'number' ? value : parseInt(value, 10);\n}\n/**\n * Method that ensures that provided value is a float (and converts it to float if needed).\n *\n * @param value The value to convert to float\n * @returns value of parameter in number or float.\n */\nfunction toFloat(value) {\n    return typeof value === 'number' ? value : parseFloat(value);\n}\n/**\n * A base class for Validator-based Directives. The class contains common logic shared across such\n * Directives.\n *\n * For internal use only, this class is not intended for use outside of the Forms package.\n */\nclass AbstractValidatorDirective {\n    constructor() {\n        this._validator = nullValidator;\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if (this.inputName in changes) {\n            const input = this.normalizeInput(changes[this.inputName].currentValue);\n            this._validator = this.enabled() ? this.createValidator(input) : nullValidator;\n            if (this._onChange) {\n                this._onChange();\n            }\n        }\n    }\n    /** @nodoc */\n    validate(control) {\n        return this._validator(control);\n    }\n    /** @nodoc */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @description\n     * Determines whether this validator is active or not. Base class implementation\n     * checks whether an input is defined (if the value is different from `null` and `undefined`).\n     * Validator classes that extend this base class can override this function with the logic\n     * specific to a particular validator directive.\n     */\n    enabled() {\n        const inputValue = this[this.inputName];\n        return inputValue != null /* both `null` and `undefined` */;\n    }\n}\nAbstractValidatorDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: AbstractValidatorDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nAbstractValidatorDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: AbstractValidatorDirective, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: AbstractValidatorDirective, decorators: [{\n            type: Directive\n        }] });\n/**\n * @description\n * Provider which adds `MaxValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `max` attribute.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a max validator\n *\n * The following example shows how to add a max validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel max=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'max';\n        /** @internal */\n        this.normalizeInput = (input) => toFloat(input);\n        /** @internal */\n        this.createValidator = (max) => maxValidator(max);\n    }\n}\nMaxValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: MaxValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMaxValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: MaxValidator, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: { max: \"max\" }, host: { properties: { \"attr.max\": \"enabled() ? max : null\" } }, providers: [MAX_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: MaxValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]',\n                    providers: [MAX_VALIDATOR],\n                    host: { '[attr.max]': 'enabled() ? max : null' }\n                }]\n        }], propDecorators: { max: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `MinValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a min validator\n *\n * The following example shows how to add a min validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel min=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'min';\n        /** @internal */\n        this.normalizeInput = (input) => toFloat(input);\n        /** @internal */\n        this.createValidator = (min) => minValidator(min);\n    }\n}\nMinValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: MinValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMinValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: { min: \"min\" }, host: { properties: { \"attr.min\": \"enabled() ? min : null\" } }, providers: [MIN_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: MinValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]',\n                    providers: [MIN_VALIDATOR],\n                    host: { '[attr.min]': 'enabled() ? min : null' }\n                }]\n        }], propDecorators: { min: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => RequiredValidator),\n    multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => CheckboxRequiredValidator),\n    multi: true\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass RequiredValidator {\n    constructor() {\n        this._required = false;\n    }\n    /**\n     * @description\n     * Tracks changes to the required attribute bound to this directive.\n     */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = value != null && value !== false && `${value}` !== 'false';\n        if (this._onChange)\n            this._onChange();\n    }\n    /**\n     * Method that validates whether the control is empty.\n     * Returns the validation result if enabled, otherwise null.\n     * @nodoc\n     */\n    validate(control) {\n        return this.required ? requiredValidator(control) : null;\n    }\n    /**\n     * Registers a callback function to call when the validator inputs change.\n     * @nodoc\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n}\nRequiredValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RequiredValidator, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nRequiredValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: { required: \"required\" }, host: { properties: { \"attr.required\": \"required ? \\\"\\\" : null\" } }, providers: [REQUIRED_VALIDATOR], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: RequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                    providers: [REQUIRED_VALIDATOR],\n                    host: { '[attr.required]': 'required ? \"\" : null' }\n                }]\n        }], propDecorators: { required: [{\n                type: Input\n            }] } });\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass CheckboxRequiredValidator extends RequiredValidator {\n    /**\n     * Method that validates whether or not the checkbox has been checked.\n     * Returns the validation result if enabled, otherwise null.\n     * @nodoc\n     */\n    validate(control) {\n        return this.required ? requiredTrueValidator(control) : null;\n    }\n}\nCheckboxRequiredValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: CheckboxRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nCheckboxRequiredValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: CheckboxRequiredValidator, selector: \"input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]\", host: { properties: { \"attr.required\": \"required ? \\\"\\\" : null\" } }, providers: [CHECKBOX_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: CheckboxRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                    providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                    host: { '[attr.required]': 'required ? \"\" : null' }\n                }]\n        }] });\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => EmailValidator),\n    multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass EmailValidator {\n    constructor() {\n        this._enabled = false;\n    }\n    /**\n     * @description\n     * Tracks changes to the email attribute bound to this directive.\n     */\n    set email(value) {\n        this._enabled = value === '' || value === true || value === 'true';\n        if (this._onChange)\n            this._onChange();\n    }\n    /**\n     * Method that validates whether an email address is valid.\n     * Returns the validation result if enabled, otherwise null.\n     * @nodoc\n     */\n    validate(control) {\n        return this._enabled ? emailValidator(control) : null;\n    }\n    /**\n     * Registers a callback function to call when the validator inputs change.\n     * @nodoc\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n}\nEmailValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: EmailValidator, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nEmailValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: EmailValidator, selector: \"[email][formControlName],[email][formControl],[email][ngModel]\", inputs: { email: \"email\" }, providers: [EMAIL_VALIDATOR], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: EmailValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                    providers: [EMAIL_VALIDATOR]\n                }]\n        }], propDecorators: { email: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinLengthValidator),\n    multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinLengthValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'minlength';\n        /** @internal */\n        this.normalizeInput = (input) => toInteger(input);\n        /** @internal */\n        this.createValidator = (minlength) => minLengthValidator(minlength);\n    }\n}\nMinLengthValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: MinLengthValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMinLengthValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: MinLengthValidator, selector: \"[minlength][formControlName],[minlength][formControl],[minlength][ngModel]\", inputs: { minlength: \"minlength\" }, host: { properties: { \"attr.minlength\": \"enabled() ? minlength : null\" } }, providers: [MIN_LENGTH_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: MinLengthValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                    providers: [MIN_LENGTH_VALIDATOR],\n                    host: { '[attr.minlength]': 'enabled() ? minlength : null' }\n                }]\n        }], propDecorators: { minlength: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxLengthValidator),\n    multi: true\n};\n/**\n * A directive that adds max length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxLengthValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'maxlength';\n        /** @internal */\n        this.normalizeInput = (input) => toInteger(input);\n        /** @internal */\n        this.createValidator = (maxlength) => maxLengthValidator(maxlength);\n    }\n}\nMaxLengthValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: MaxLengthValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMaxLengthValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: MaxLengthValidator, selector: \"[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]\", inputs: { maxlength: \"maxlength\" }, host: { properties: { \"attr.maxlength\": \"enabled() ? maxlength : null\" } }, providers: [MAX_LENGTH_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: MaxLengthValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                    providers: [MAX_LENGTH_VALIDATOR],\n                    host: { '[attr.maxlength]': 'enabled() ? maxlength : null' }\n                }]\n        }], propDecorators: { maxlength: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PatternValidator),\n    multi: true\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass PatternValidator {\n    constructor() {\n        this._validator = nullValidator;\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if ('pattern' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * Method that validates whether the value matches the pattern requirement.\n     * @nodoc\n     */\n    validate(control) {\n        return this._validator(control);\n    }\n    /**\n     * Registers a callback function to call when the validator inputs change.\n     * @nodoc\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    _createValidator() {\n        this._validator = patternValidator(this.pattern);\n    }\n}\nPatternValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: PatternValidator, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nPatternValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: PatternValidator, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: { pattern: \"pattern\" }, host: { properties: { \"attr.pattern\": \"pattern ? pattern : null\" } }, providers: [PATTERN_VALIDATOR], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: PatternValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                    providers: [PATTERN_VALIDATOR],\n                    host: { '[attr.pattern]': 'pattern ? pattern : null' }\n                }]\n        }], propDecorators: { pattern: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SHARED_FORM_DIRECTIVES = [\n    ɵNgNoValidate,\n    NgSelectOption,\n    ɵNgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n    MinValidator,\n    MaxValidator,\n];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nclass ɵInternalFormsSharedModule {\n}\nɵInternalFormsSharedModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ɵInternalFormsSharedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nɵInternalFormsSharedModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ɵInternalFormsSharedModule, declarations: [ɵNgNoValidate,\n        NgSelectOption,\n        ɵNgSelectMultipleOption,\n        DefaultValueAccessor,\n        NumberValueAccessor,\n        RangeValueAccessor,\n        CheckboxControlValueAccessor,\n        SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor,\n        RadioControlValueAccessor,\n        NgControlStatus,\n        NgControlStatusGroup,\n        RequiredValidator,\n        MinLengthValidator,\n        MaxLengthValidator,\n        PatternValidator,\n        CheckboxRequiredValidator,\n        EmailValidator,\n        MinValidator,\n        MaxValidator], imports: [RadioControlRegistryModule], exports: [ɵNgNoValidate,\n        NgSelectOption,\n        ɵNgSelectMultipleOption,\n        DefaultValueAccessor,\n        NumberValueAccessor,\n        RangeValueAccessor,\n        CheckboxControlValueAccessor,\n        SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor,\n        RadioControlValueAccessor,\n        NgControlStatus,\n        NgControlStatusGroup,\n        RequiredValidator,\n        MinLengthValidator,\n        MaxLengthValidator,\n        PatternValidator,\n        CheckboxRequiredValidator,\n        EmailValidator,\n        MinValidator,\n        MaxValidator] });\nɵInternalFormsSharedModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ɵInternalFormsSharedModule, imports: [[RadioControlRegistryModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ɵInternalFormsSharedModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: SHARED_FORM_DIRECTIVES,\n                    imports: [RadioControlRegistryModule],\n                    exports: SHARED_FORM_DIRECTIVES,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * Providers associated with this module:\n * * `RadioControlRegistry`\n *\n * @see [Forms Overview](/guide/forms-overview)\n * @see [Template-driven Forms Guide](/guide/forms)\n *\n * @publicApi\n */\nclass FormsModule {\n}\nFormsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: FormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFormsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: FormsModule, declarations: [NgModel, NgModelGroup, NgForm], exports: [ɵInternalFormsSharedModule, NgModel, NgModelGroup, NgForm] });\nFormsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: FormsModule, imports: [ɵInternalFormsSharedModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: FormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                    exports: [ɵInternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n                }]\n        }] });\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * Providers associated with this module:\n * * `FormBuilder`\n * * `RadioControlRegistry`\n *\n * @see [Forms Overview](guide/forms-overview)\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nclass ReactiveFormsModule {\n    /**\n     * @description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param opts An object of configuration options\n     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n     * binding is used with reactive form directives.\n     */\n    static withConfig(opts) {\n        return {\n            ngModule: ReactiveFormsModule,\n            providers: [\n                { provide: NG_MODEL_WITH_FORM_CONTROL_WARNING, useValue: opts.warnOnNgModelWithFormControl }\n            ]\n        };\n    }\n}\nReactiveFormsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ReactiveFormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nReactiveFormsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ReactiveFormsModule, declarations: [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName], exports: [ɵInternalFormsSharedModule, FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName] });\nReactiveFormsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ReactiveFormsModule, imports: [ɵInternalFormsSharedModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: ReactiveFormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                    exports: [ɵInternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isAbstractControlOptions(options) {\n    return options.asyncValidators !== undefined ||\n        options.validators !== undefined ||\n        options.updateOn !== undefined;\n}\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a `FormControl`,\n * `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to build complex\n * forms.\n *\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n *\n * @publicApi\n */\nclass FormBuilder {\n    group(controlsConfig, options = null) {\n        const controls = this._reduceControls(controlsConfig);\n        let validators = null;\n        let asyncValidators = null;\n        let updateOn = undefined;\n        if (options != null) {\n            if (isAbstractControlOptions(options)) {\n                // `options` are `AbstractControlOptions`\n                validators = options.validators != null ? options.validators : null;\n                asyncValidators = options.asyncValidators != null ? options.asyncValidators : null;\n                updateOn = options.updateOn != null ? options.updateOn : undefined;\n            }\n            else {\n                // `options` are legacy form group options\n                validators = options['validator'] != null ? options['validator'] : null;\n                asyncValidators = options['asyncValidator'] != null ? options['asyncValidator'] : null;\n            }\n        }\n        return new FormGroup(controls, { asyncValidators, updateOn, validators });\n    }\n    /**\n     * @description\n     * Construct a new `FormControl` with the given state, validators and options.\n     *\n     * @param formState Initializes the control with an initial state value, or\n     * with an object that contains both a value and a disabled status.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     *\n     * @usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n     * </code-example>\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n        return new FormControl(formState, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * Constructs a new `FormArray` from the given array of configurations,\n     * validators and options.\n     *\n     * @param controlsConfig An array of child controls or control configs. Each\n     * child control is given an index when it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     */\n    array(controlsConfig, validatorOrOpts, asyncValidator) {\n        const controls = controlsConfig.map(c => this._createControl(c));\n        return new FormArray(controls, validatorOrOpts, asyncValidator);\n    }\n    /** @internal */\n    _reduceControls(controlsConfig) {\n        const controls = {};\n        Object.keys(controlsConfig).forEach(controlName => {\n            controls[controlName] = this._createControl(controlsConfig[controlName]);\n        });\n        return controls;\n    }\n    /** @internal */\n    _createControl(controlConfig) {\n        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n            controlConfig instanceof FormArray) {\n            return controlConfig;\n        }\n        else if (Array.isArray(controlConfig)) {\n            const value = controlConfig[0];\n            const validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            const asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    }\n}\nFormBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: FormBuilder, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nFormBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: FormBuilder, providedIn: ReactiveFormsModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: FormBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: ReactiveFormsModule }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('13.1.1');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormsModule, MaxLengthValidator, MaxValidator, MinLengthValidator, MinValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NumberValueAccessor, PatternValidator, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, VERSION, Validators, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i1 from '@angular/cdk/a11y';\n\n/** Default color palette for round buttons (mat-fab and mat-mini-fab) */\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\nconst _MatButtonBase = mixinColor(mixinDisabled(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n})));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonBase {\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /** Whether the button is round. */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /** Whether the button is icon button. */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                this._getHostElement().classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the button. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n    }\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Gets whether the button has one of the given attributes. */\n    _hasHostAttributes(...attributes) {\n        return attributes.some(attribute => this._getHostElement().hasAttribute(attribute));\n    }\n}\nMatButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatButton, deps: [{ token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],\\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\\n             button[mat-flat-button]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, host: { properties: { \"attr.disabled\": \"disabled || null\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"class.mat-button-disabled\": \"disabled\" }, classAttribute: \"mat-focus-indicator\" }, viewQueries: [{ propertyName: \"ripple\", first: true, predicate: MatRipple, descendants: true }], exportAs: [\"matButton\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\", styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"], directives: [{ type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatButton, decorators: [{\n            type: Component,\n            args: [{ selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`, exportAs: 'matButton', host: {\n                        '[attr.disabled]': 'disabled || null',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        // Add a class for disabled button styling instead of the using attribute\n                        // selector or pseudo-selector.  This allows users to create focusabled\n                        // disabled buttons without recreating the styles.\n                        '[class.mat-button-disabled]': 'disabled',\n                        'class': 'mat-focus-indicator',\n                    }, inputs: ['disabled', 'disableRipple', 'color'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\", styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }] } });\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    constructor(focusMonitor, elementRef, animationMode) {\n        super(elementRef, focusMonitor, animationMode);\n    }\n    _haltDisabledEvents(event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\nMatAnchor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatAnchor, deps: [{ token: i1.FocusMonitor }, { token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatAnchor.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatAnchor, selector: \"a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, host: { listeners: { \"click\": \"_haltDisabledEvents($event)\" }, properties: { \"attr.tabindex\": \"disabled ? -1 : (tabIndex || 0)\", \"attr.disabled\": \"disabled || null\", \"attr.aria-disabled\": \"disabled.toString()\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"class.mat-button-disabled\": \"disabled\" }, classAttribute: \"mat-focus-indicator\" }, exportAs: [\"matButton\", \"matAnchor\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\", styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"], directives: [{ type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatAnchor, decorators: [{\n            type: Component,\n            args: [{ selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`, exportAs: 'matButton, matAnchor', host: {\n                        // Note that we ignore the user-specified tabindex when it's disabled for\n                        // consistency with the `mat-button` applied on native buttons where even\n                        // though they have an index, they're not tabbable.\n                        '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                        '[attr.disabled]': 'disabled || null',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '(click)': '_haltDisabledEvents($event)',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        '[class.mat-button-disabled]': 'disabled',\n                        'class': 'mat-focus-indicator',\n                    }, inputs: ['disabled', 'disableRipple', 'color'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\", styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i1.FocusMonitor }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { tabIndex: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatButtonModule {\n}\nMatButtonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatButtonModule, declarations: [MatButton, MatAnchor], imports: [MatRippleModule, MatCommonModule], exports: [MatButton, MatAnchor, MatCommonModule] });\nMatButtonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatButtonModule, imports: [[MatRippleModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, MatCommonModule],\n                    exports: [MatButton, MatAnchor, MatCommonModule],\n                    declarations: [MatButton, MatAnchor],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n","import * as i4 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Attribute, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i1 from '@angular/cdk/bidi';\nimport * as i2 from '@angular/cdk/platform';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor(ariaLive, elementRef) {\n        this.id = `mat-error-${nextUniqueId$2++}`;\n        // If no aria-live value is set add 'polite' as a default. This is preferred over setting\n        // role='alert' so that screen readers do not interrupt the current task to read this aloud.\n        if (!ariaLive) {\n            elementRef.nativeElement.setAttribute('aria-live', 'polite');\n        }\n    }\n}\nMatError.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatError, deps: [{ token: 'aria-live', attribute: true }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatError.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatError, selector: \"mat-error\", inputs: { id: \"id\" }, host: { attributes: { \"aria-atomic\": \"true\" }, properties: { \"attr.id\": \"id\" }, classAttribute: \"mat-error\" }, providers: [{ provide: MAT_ERROR, useExisting: MatError }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatError, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-error',\n                    host: {\n                        'class': 'mat-error',\n                        '[attr.id]': 'id',\n                        'aria-atomic': 'true',\n                    },\n                    providers: [{ provide: MAT_ERROR, useExisting: MatError }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['aria-live']\n                    }] }, { type: i0.ElementRef }];\n    }, propDecorators: { id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-5px)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ]),\n};\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormFieldControl, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatFormFieldControl.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatFormFieldControl, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormFieldControl, decorators: [{\n            type: Directive\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHint, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatHint.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatHint, selector: \"mat-hint\", inputs: { align: \"align\", id: \"id\" }, host: { properties: { \"class.mat-form-field-hint-end\": \"align === \\\"end\\\"\", \"attr.id\": \"id\", \"attr.align\": \"null\" }, classAttribute: \"mat-hint\" }, providers: [{ provide: _MAT_HINT, useExisting: MatHint }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHint, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-hint',\n                    host: {\n                        'class': 'mat-hint',\n                        '[class.mat-form-field-hint-end]': 'align === \"end\"',\n                        '[attr.id]': 'id',\n                        // Remove align attribute to prevent it from interfering with layout.\n                        '[attr.align]': 'null',\n                    },\n                    providers: [{ provide: _MAT_HINT, useExisting: MatHint }],\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatLabel, selector: \"mat-label\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-label',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPlaceholder, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatPlaceholder.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatPlaceholder, selector: \"mat-placeholder\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-placeholder',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPrefix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatPrefix.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatPrefix, selector: \"[matPrefix]\", providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPrefix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matPrefix]',\n                    providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSuffix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatSuffix.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSuffix, selector: \"[matSuffix]\", providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSuffix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSuffix]',\n                    providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }],\n                }]\n        }] });\n\nlet nextUniqueId = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nconst _MatFormFieldBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldBase {\n    constructor(elementRef, _changeDetectorRef, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId++}`;\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = _defaults && _defaults.appearance ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker =\n            _defaults && _defaults.hideRequiredMarker != null ? _defaults.hideRequiredMarker : false;\n    }\n    /** The form-field appearance style. */\n    get appearance() {\n        return this._appearance;\n    }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() {\n        return this._hideRequiredMarker;\n    }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() {\n        return this.floatLabel !== 'never';\n    }\n    /** Text for the form field hint. */\n    get hintLabel() {\n        return this._hintLabel;\n    }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop) {\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    _hasPlaceholder() {\n        return !!((this._control && this._control.placeholder) || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return (this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat()));\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return ((this.appearance === 'legacy' && !this._hasLabel()) ||\n            (this._hasLabel() && !this._shouldLabelFloat()));\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || (this.appearance === 'legacy' && this._hasPlaceholder());\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState\n            ? 'error'\n            : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend')\n                    .pipe(take(1))\n                    .subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder &&\n            this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'start')\n                    : null;\n                const endHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'end')\n                    : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' ||\n            !labelEl ||\n            !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const container = this._connectionContainerRef.nativeElement;\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable = this._outlineGapCalculationNeededImmediately =\n            false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return this._dir && this._dir.value === 'rtl' ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormField, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Directionality, optional: true }, { token: MAT_FORM_FIELD_DEFAULT_OPTIONS, optional: true }, { token: i2.Platform }, { token: i0.NgZone }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatFormField.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatFormField, selector: \"mat-form-field\", inputs: { color: \"color\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\", floatLabel: \"floatLabel\" }, host: { properties: { \"class.mat-form-field-appearance-standard\": \"appearance == \\\"standard\\\"\", \"class.mat-form-field-appearance-fill\": \"appearance == \\\"fill\\\"\", \"class.mat-form-field-appearance-outline\": \"appearance == \\\"outline\\\"\", \"class.mat-form-field-appearance-legacy\": \"appearance == \\\"legacy\\\"\", \"class.mat-form-field-invalid\": \"_control.errorState\", \"class.mat-form-field-can-float\": \"_canLabelFloat()\", \"class.mat-form-field-should-float\": \"_shouldLabelFloat()\", \"class.mat-form-field-has-label\": \"_hasFloatingLabel()\", \"class.mat-form-field-hide-placeholder\": \"_hideControlPlaceholder()\", \"class.mat-form-field-disabled\": \"_control.disabled\", \"class.mat-form-field-autofilled\": \"_control.autofilled\", \"class.mat-focused\": \"_control.focused\", \"class.ng-untouched\": \"_shouldForward(\\\"untouched\\\")\", \"class.ng-touched\": \"_shouldForward(\\\"touched\\\")\", \"class.ng-pristine\": \"_shouldForward(\\\"pristine\\\")\", \"class.ng-dirty\": \"_shouldForward(\\\"dirty\\\")\", \"class.ng-valid\": \"_shouldForward(\\\"valid\\\")\", \"class.ng-invalid\": \"_shouldForward(\\\"invalid\\\")\", \"class.ng-pending\": \"_shouldForward(\\\"pending\\\")\", \"class._mat-animation-noopable\": \"!_animationsEnabled\" }, classAttribute: \"mat-form-field\" }, providers: [{ provide: MAT_FORM_FIELD, useExisting: MatFormField }], queries: [{ propertyName: \"_controlNonStatic\", first: true, predicate: MatFormFieldControl, descendants: true }, { propertyName: \"_controlStatic\", first: true, predicate: MatFormFieldControl, descendants: true, static: true }, { propertyName: \"_labelChildNonStatic\", first: true, predicate: MatLabel, descendants: true }, { propertyName: \"_labelChildStatic\", first: true, predicate: MatLabel, descendants: true, static: true }, { propertyName: \"_placeholderChild\", first: true, predicate: MatPlaceholder, descendants: true }, { propertyName: \"_errorChildren\", predicate: MAT_ERROR, descendants: true }, { propertyName: \"_hintChildren\", predicate: _MAT_HINT, descendants: true }, { propertyName: \"_prefixChildren\", predicate: MAT_PREFIX, descendants: true }, { propertyName: \"_suffixChildren\", predicate: MAT_SUFFIX, descendants: true }], viewQueries: [{ propertyName: \"_connectionContainerRef\", first: true, predicate: [\"connectionContainer\"], descendants: true, static: true }, { propertyName: \"_inputContainerRef\", first: true, predicate: [\"inputContainer\"], descendants: true }, { propertyName: \"_label\", first: true, predicate: [\"label\"], descendants: true }], exportAs: [\"matFormField\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div\\n      class=\\\"mat-form-field-prefix\\\"\\n      *ngIf=\\\"_prefixChildren.length\\\"\\n      (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n      [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\"\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { type: i3.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i3.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }], animations: [matFormFieldAnimations.transitionMessages], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormField, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-form-field', exportAs: 'matFormField', animations: [matFormFieldAnimations.transitionMessages], host: {\n                        'class': 'mat-form-field',\n                        '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                        '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                        '[class.mat-form-field-invalid]': '_control.errorState',\n                        '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                        '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                        '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                        '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                        '[class.mat-form-field-disabled]': '_control.disabled',\n                        '[class.mat-form-field-autofilled]': '_control.autofilled',\n                        '[class.mat-focused]': '_control.focused',\n                        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                        '[class.ng-touched]': '_shouldForward(\"touched\")',\n                        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                        '[class.ng-valid]': '_shouldForward(\"valid\")',\n                        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                        '[class.ng-pending]': '_shouldForward(\"pending\")',\n                        '[class._mat-animation-noopable]': '!_animationsEnabled',\n                    }, inputs: ['color'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_FORM_FIELD, useExisting: MatFormField }], template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div\\n      class=\\\"mat-form-field-prefix\\\"\\n      *ngIf=\\\"_prefixChildren.length\\\"\\n      (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n      [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\"\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n                    }] }, { type: i2.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { appearance: [{\n                type: Input\n            }], hideRequiredMarker: [{\n                type: Input\n            }], hintLabel: [{\n                type: Input\n            }], floatLabel: [{\n                type: Input\n            }], _connectionContainerRef: [{\n                type: ViewChild,\n                args: ['connectionContainer', { static: true }]\n            }], _inputContainerRef: [{\n                type: ViewChild,\n                args: ['inputContainer']\n            }], _label: [{\n                type: ViewChild,\n                args: ['label']\n            }], _controlNonStatic: [{\n                type: ContentChild,\n                args: [MatFormFieldControl]\n            }], _controlStatic: [{\n                type: ContentChild,\n                args: [MatFormFieldControl, { static: true }]\n            }], _labelChildNonStatic: [{\n                type: ContentChild,\n                args: [MatLabel]\n            }], _labelChildStatic: [{\n                type: ContentChild,\n                args: [MatLabel, { static: true }]\n            }], _placeholderChild: [{\n                type: ContentChild,\n                args: [MatPlaceholder]\n            }], _errorChildren: [{\n                type: ContentChildren,\n                args: [MAT_ERROR, { descendants: true }]\n            }], _hintChildren: [{\n                type: ContentChildren,\n                args: [_MAT_HINT, { descendants: true }]\n            }], _prefixChildren: [{\n                type: ContentChildren,\n                args: [MAT_PREFIX, { descendants: true }]\n            }], _suffixChildren: [{\n                type: ContentChildren,\n                args: [MAT_SUFFIX, { descendants: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatFormFieldModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormFieldModule, declarations: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix], imports: [CommonModule, MatCommonModule, ObserversModule], exports: [MatCommonModule,\n        MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix] });\nMatFormFieldModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormFieldModule, imports: [[CommonModule, MatCommonModule, ObserversModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix],\n                    imports: [CommonModule, MatCommonModule, ObserversModule],\n                    exports: [\n                        MatCommonModule,\n                        MatError,\n                        MatFormField,\n                        MatHint,\n                        MatLabel,\n                        MatPlaceholder,\n                        MatPrefix,\n                        MatSuffix,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { getSupportedInputTypes } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Optional, Self, Inject, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport * as i3 from '@angular/material/core';\nimport { mixinErrorState, MatCommonModule, ErrorStateMatcher } from '@angular/material/core';\nimport * as i5 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport * as i4 from '@angular/cdk/text-field';\nimport { TextFieldModule } from '@angular/cdk/text-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit',\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nconst _MatInputBase = mixinErrorState(class {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n});\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputBase {\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form-field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week',\n        ].filter(t => getSupportedInputTypes().has(t));\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', (event) => {\n                    const el = event.target;\n                    // Note: We specifically check for 0, rather than `!el.selectionStart`, because the two\n                    // indicate different things. If the value is 0, it means that the caret is at the start\n                    // of the input, whereas a value of `null` means that the input doesn't support\n                    // manipulating the selection range. Inputs that don't support setting the selection range\n                    // will throw an error so we want to avoid calling `setSelectionRange` on them. See:\n                    // https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n                    if (!el.value && el.selectionStart === 0 && el.selectionEnd === 0) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                });\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        this._isInFormField = !!_formField;\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple\n                ? 'mat-native-select-multiple'\n                : 'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n        var _a, _b, _c, _d;\n        return (_d = (_a = this._required) !== null && _a !== void 0 ? _a : (_c = (_b = this.ngControl) === null || _b === void 0 ? void 0 : _b.control) === null || _c === void 0 ? void 0 : _c.hasValidator(Validators.required)) !== null && _d !== void 0 ? _d : false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Input type of the element. */\n    get type() {\n        return this._type;\n    }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n        return this._inputValueAccessor.value;\n    }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() {\n        return this._readonly;\n    }\n    set readonly(value) {\n        this._readonly = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        var _a, _b;\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const placeholder = ((_b = (_a = this._formField) === null || _a === void 0 ? void 0 : _a._hideControlPlaceholder) === null || _b === void 0 ? void 0 : _b.call(_a)) ? null : this.placeholder;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder\n                ? element.setAttribute('placeholder', placeholder)\n                : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return (!this._isNeverEmpty() &&\n            !this._elementRef.nativeElement.value &&\n            !this._isBadInput() &&\n            !this.autofilled);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return (this.focused ||\n                selectElement.multiple ||\n                !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label));\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n    /** Whether the form control is a native select that is displayed inline. */\n    _isInlineSelect() {\n        const element = this._elementRef.nativeElement;\n        return this._isNativeSelect && (element.multiple || element.size > 1);\n    }\n}\nMatInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInput, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i2.NgControl, optional: true, self: true }, { token: i2.NgForm, optional: true }, { token: i2.FormGroupDirective, optional: true }, { token: i3.ErrorStateMatcher }, { token: MAT_INPUT_VALUE_ACCESSOR, optional: true, self: true }, { token: i4.AutofillMonitor }, { token: i0.NgZone }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],\\n      input[matNativeControl], textarea[matNativeControl]\", inputs: { disabled: \"disabled\", id: \"id\", placeholder: \"placeholder\", required: \"required\", type: \"type\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"], value: \"value\", readonly: \"readonly\" }, host: { listeners: { \"focus\": \"_focusChanged(true)\", \"blur\": \"_focusChanged(false)\", \"input\": \"_onInput()\" }, properties: { \"class.mat-input-server\": \"_isServer\", \"attr.id\": \"id\", \"attr.data-placeholder\": \"placeholder\", \"disabled\": \"disabled\", \"required\": \"required\", \"attr.readonly\": \"readonly && !_isNativeSelect || null\", \"class.mat-native-select-inline\": \"_isInlineSelect()\", \"attr.aria-invalid\": \"(empty && required) ? null : errorState\", \"attr.aria-required\": \"required\" }, classAttribute: \"mat-input-element mat-form-field-autofill-control\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatInput }], exportAs: [\"matInput\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                    exportAs: 'matInput',\n                    host: {\n                        /**\n                         * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                         */\n                        'class': 'mat-input-element mat-form-field-autofill-control',\n                        '[class.mat-input-server]': '_isServer',\n                        // Native input properties that are overwritten by Angular inputs need to be synced with\n                        // the native input element. Otherwise property bindings for those don't work.\n                        '[attr.id]': 'id',\n                        // At the time of writing, we have a lot of customer tests that look up the input based on its\n                        // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                        // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                        '[attr.data-placeholder]': 'placeholder',\n                        '[disabled]': 'disabled',\n                        '[required]': 'required',\n                        '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                        '[class.mat-native-select-inline]': '_isInlineSelect()',\n                        // Only mark the input as invalid for assistive technology if it has a value since the\n                        // state usually overlaps with `aria-required` when the input is empty and can be redundant.\n                        '[attr.aria-invalid]': '(empty && required) ? null : errorState',\n                        '[attr.aria-required]': 'required',\n                        '(focus)': '_focusChanged(true)',\n                        '(blur)': '_focusChanged(false)',\n                        '(input)': '_onInput()',\n                    },\n                    providers: [{ provide: MatFormFieldControl, useExisting: MatInput }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i2.NgControl, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }, { type: i2.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: i3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [MAT_INPUT_VALUE_ACCESSOR]\n                    }] }, { type: i4.AutofillMonitor }, { type: i0.NgZone }, { type: i5.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }] }];\n    }, propDecorators: { disabled: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], errorStateMatcher: [{\n                type: Input\n            }], userAriaDescribedBy: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], value: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInputModule, declarations: [MatInput], imports: [TextFieldModule, MatFormFieldModule, MatCommonModule], exports: [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput] });\nMatInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInputModule, providers: [ErrorStateMatcher], imports: [[TextFieldModule, MatFormFieldModule, MatCommonModule], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MatInput],\n                    imports: [TextFieldModule, MatFormFieldModule, MatCommonModule],\n                    exports: [\n                        TextFieldModule,\n                        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                        // be used together with `MatFormField`.\n                        MatFormFieldModule,\n                        MatInput,\n                    ],\n                    providers: [ErrorStateMatcher],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, getMatInputUnsupportedTypeError };\n"],"names":["i1","ScrollingModule","CdkScrollable","ScrollDispatcher","ViewportRuler","i6","DOCUMENT","i0","Injectable","Inject","ElementRef","ApplicationRef","InjectionToken","Directive","EventEmitter","Optional","Input","Output","NgModule","coerceCssPixelValue","coerceArray","coerceBooleanProperty","i1$1","supportsScrollBehavior","_isTestEnvironment","_getEventTarget","i5","BidiModule","DomPortalOutlet","TemplatePortal","PortalModule","Subject","Subscription","merge","take","takeUntil","takeWhile","ESCAPE","hasModifierKey","scrollBehaviorSupported","BlockScrollStrategy","constructor","_viewportRuler","document","_previousHTMLStyles","top","left","_isEnabled","_document","attach","enable","_canBeEnabled","root","documentElement","_previousScrollPosition","getViewportScrollPosition","style","classList","add","disable","html","body","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","remove","window","scroll","contains","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","getMatScrollStrategyAlreadyAttachedError","Error","CloseScrollStrategy","_scrollDispatcher","_ngZone","_config","_scrollSubscription","_detach","_overlayRef","hasAttached","run","detach","overlayRef","ngDevMode","stream","scrolled","threshold","_initialScrollPosition","subscribe","scrollPosition","Math","abs","updatePosition","unsubscribe","NoopScrollStrategy","isElementScrolledOutsideView","element","scrollContainers","some","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","overlayElement","getBoundingClientRect","parentRects","ScrollStrategyOptions","noop","close","config","block","reposition","ɵfac","NgZone","ɵprov","type","args","providedIn","undefined","decorators","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","keys","key","ConnectionPositionPair","origin","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","value","validateHorizontalPosition","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_outsideClickDispatcher","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","EMPTY","_backdropClickHandler","event","next","_keydownEvents","_outsidePointerEvents","_scrollStrategy","_positionStrategy","positionStrategy","backdropElement","hostElement","portal","attachResult","parentElement","_previousHostParent","appendChild","_updateStackingOrder","_updateElementSize","_updateElementDirection","onStable","pipe","_togglePointerEvents","_attachBackdrop","_toggleClasses","dispose","detachBackdrop","detachmentResult","_detachContentWhenStable","_a","isAttached","_disposeScrollStrategy","_disposeBackdrop","complete","backdropClick","attachments","detachments","keydownEvents","outsidePointerEvents","getConfig","apply","updatePositionStrategy","strategy","updateSize","sizeConfig","assign","setDirection","dir","direction","addPanelClass","classes","removePanelClass","getDirection","updateScrollStrategy","setAttribute","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","createElement","insertBefore","addEventListener","requestAnimationFrame","runOutsideAngular","nextSibling","parentNode","backdropToDetach","timeoutId","finishDetach","removeEventListener","clearTimeout","setTimeout","cssClasses","isAdd","filter","c","length","subscription","children","backdrop","OverlayContainer","_platform","ngOnDestroy","_containerElement","getContainerElement","_createContainer","containerClass","isBrowser","oppositePlatformContainers","querySelectorAll","i","container","Platform","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","positions","_validatePositions","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","change","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","push","position","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","withScrollableContainers","scrollables","withPositions","indexOf","withViewportMargin","margin","withFlexibleDimensions","flexibleDimensions","withGrowAfterOpen","growAfterOpen","withPush","canPush","withLockedPosition","isLocked","_origin","withDefaultOffsetX","offset","withDefaultOffsetY","withTransformOriginOn","selector","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","rawOverlayRect","getRoundedBoundingClientRect","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","verticalFit","horizontalFit","_pushOverlayOnScreen","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","observers","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","styles","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","trim","virtualKeyboardOffset","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","map","scrollable","getElementRef","nativeElement","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentValue","currentOverflow","axis","forEach","pair","cssClass","Element","destination","source","hasOwnProperty","input","units","split","parseFloat","clientRect","floor","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","centerHorizontally","centerVertically","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","global","flexibleConnectedTo","BaseOverlayDispatcher","_attachedOverlays","index","splice","OverlayKeyboardDispatcher","_keydownListener","overlays","_isAttached","OverlayOutsideClickDispatcher","_cursorStyleIsSet","_pointerDownListener","_pointerDownEventTarget","_clickListener","target","slice","IOS","_cursorOriginalValue","cursor","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","create","host","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","id","_appRef","get","ComponentFactoryResolver","Injector","Directionality","Location","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CdkOverlayOrigin","elementRef","ɵdir","exportAs","CdkConnectedOverlay","_overlay","templateRef","viewContainerRef","scrollStrategyFactory","_dir","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","_attachSubscription","_detachSubscription","_positionSubscription","viewportMargin","open","disableClose","positionChange","overlayKeydown","overlayOutsideClick","_templatePortal","_scrollStrategyFactory","_position","_updatePositionStrategy","lockPosition","ngOnChanges","changes","_attachOverlay","_detachOverlay","_createOverlay","_buildConfig","emit","keyCode","preventDefault","_createPositionStrategy","currentPosition","_getFlexibleConnectedPositionStrategyOrigin","transformOriginSelector","TemplateRef","ViewContainerRef","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","OverlayModule","ɵmod","ɵinj","imports","exports","declarations","providers","FullscreenOverlayContainer","platform","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","fn","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","normalizePassiveListenerOptions","PlatformModule","coerceElement","coerceNumberProperty","fromEvent","auditTime","listenerOptions","passive","AutofillMonitor","_monitoredElements","Map","monitor","elementOrRef","info","subject","result","listener","animationName","isAutofilled","set","unlisten","stopMonitoring","delete","_info","CdkAutofill","_elementRef","_autofillMonitor","cdkAutofill","ngOnInit","CdkTextareaAutosize","_destroyed","_enabled","_previousMinRows","_isViewInited","_handleFocusEvent","_hasFocus","_textareaElement","minRows","_minRows","_setMinHeight","maxRows","_maxRows","_setMaxHeight","enabled","resizeToFitContent","reset","placeholder","_cachedPlaceholderHeight","_cacheTextareaPlaceholderHeight","_cachedLineHeight","ngAfterViewInit","_initialHeight","_getWindow","_cacheTextareaLineHeight","textareaClone","cloneNode","rows","visibility","border","padding","overflow","_measureScrollHeight","previousMargin","isFirefox","FIREFOX","needsMarginFiller","measuringClass","ngDoCheck","force","textarea","_previousValue","_scrollToCaretPosition","_noopInputHandler","_getDocument","doc","defaultView","selectionStart","selectionEnd","isStopped","setSelectionRange","TextFieldModule","forwardRef","ɵisPromise","ɵisObservable","Self","Host","SkipSelf","Version","ɵgetDOM","from","forkJoin","BaseControlValueAccessor","_renderer","onChange","_","onTouched","setProperty","registerOnTouched","registerOnChange","setDisabledState","isDisabled","Renderer2","BuiltInControlValueAccessor","NG_VALUE_ACCESSOR","CHECKBOX_VALUE_ACCESSOR","useExisting","CheckboxControlValueAccessor","multi","writeValue","DEFAULT_VALUE_ACCESSOR","DefaultValueAccessor","_isAndroid","userAgent","getUserAgent","test","toLowerCase","COMPOSITION_BUFFER_MODE","renderer","_compositionMode","_composing","normalizedValue","_handleInput","_compositionStart","_compositionEnd","isEmptyInputValue","hasValidLength","NG_VALIDATORS","NG_ASYNC_VALIDATORS","EMAIL_REGEXP","Validators","minValidator","maxValidator","required","control","requiredValidator","requiredTrue","requiredTrueValidator","email","emailValidator","minLength","minLengthValidator","maxLength","maxLengthValidator","pattern","patternValidator","nullValidator","compose","validators","composeAsync","isNaN","regex","regexStr","charAt","RegExp","toString","isPresent","o","toObservable","r","obs","mergeErrors","arrayOfErrors","res","errors","executeValidators","validator","isValidatorFn","validate","normalizeValidators","presentValidators","composeValidators","observables","composeAsyncValidators","mergeValidators","controlValidators","dirValidator","Array","isArray","getControlValidators","_rawValidators","getControlAsyncValidators","_rawAsyncValidators","makeValidatorsArray","hasValidator","includes","addValidators","currentValidators","current","validatorsToAdd","v","removeValidators","AbstractControlDirective","_onDestroyCallbacks","valid","invalid","pending","disabled","pristine","dirty","touched","status","untouched","statusChanges","valueChanges","path","_setValidators","_composedValidatorFn","_setAsyncValidators","_composedAsyncValidatorFn","asyncValidator","_registerOnDestroy","_invokeOnDestroyCallbacks","hasError","errorCode","getError","NgControl","arguments","_parent","name","valueAccessor","ControlContainer","formDirective","AbstractControlStatus","cd","_cd","is","_b","_c","submitted","ngControlStatusHost","ngGroupStatusHost","NgControlStatus","NgControlStatusGroup","formControlNameExample","formGroupNameExample","formArrayNameExample","ngModelGroupExample","ngModelWithFormGroupExample","controlParentException","ngModelGroupException","missingFormException","groupParentException","arrayParentException","disabledAttrWarning","ngModelWarning","directiveName","controlPath","setUpControl","_throwError","setUpValidators","setUpViewChangePipeline","setUpModelChangePipeline","setUpBlurPipeline","setUpDisabledChangeHandler","cleanUpControl","validateControlPresenceOnChange","_noControlError","cleanUpValidators","_registerOnCollectionChange","registerOnValidatorChange","onDisabledChange","registerOnDisabledChange","_unregisterOnDisabledChange","setValidators","asyncValidators","setAsyncValidators","onValidatorChange","updateValueAndValidity","isControlUpdated","updatedValidators","updatedAsyncValidators","newValue","_pendingValue","_pendingChange","_pendingDirty","updateOn","updateControl","_pendingTouched","markAsTouched","markAsDirty","setValue","emitModelToViewChange","viewToModelUpdate","emitModelEvent","_unregisterOnChange","setUpFormContainer","cleanUpFormContainer","message","messageEnd","join","isPropertyUpdated","viewModel","isFirstChange","isBuiltInAccessor","getPrototypeOf","syncPendingControls","form","directives","_syncPendingControls","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","removeListItem","list","el","_ngModelWarning","instance","warningConfig","_ngModelWarningSentOnce","_ngModelWarningSent","console","warn","VALID","INVALID","PENDING","DISABLED","_find","delimiter","controlToFind","FormGroup","controls","FormArray","at","pickValidators","validatorOrOpts","isOptionsObj","coerceToValidator","pickAsyncValidators","coerceToAsyncValidator","AbstractControl","_hasOwnPendingAsyncValidator","_onCollectionChange","_onDisabledChange","validatorFn","asyncValidatorFn","_updateOn","addAsyncValidators","removeAsyncValidators","hasAsyncValidator","clearValidators","clearAsyncValidators","opts","onlySelf","markAllAsTouched","_forEachChild","markAsUntouched","_updateTouched","markAsPristine","_updatePristine","markAsPending","emitEvent","skipPristineCheck","_parentMarkedDirty","_updateValue","_updateAncestors","changeFn","setParent","_setInitialStatus","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","_updateTreeValidity","ctrl","_allControlsDisabled","_asyncValidationSubscription","setErrors","_updateControlsErrors","_initObservables","_anyControlsHaveStatus","_anyControls","_anyControlsDirty","_anyControlsTouched","_isBoxedValue","formState","_setUpdateStrategy","parentDirty","FormControl","_onChange","_applyFormState","options","emitViewToModelChange","patchValue","condition","cb","_setUpControls","registerControl","addControl","removeControl","setControl","controlName","_checkAllValuesPresent","_throwIfControlMissing","getRawValue","_reduceChildren","acc","subtreeUpdated","updated","child","_reduceValue","initValue","_registerControl","insert","removeAt","clear","formDirectiveProvider$1","NgForm","resolvedPromise$1","Promise","resolve","_directives","ngSubmit","then","_findContainer","getControl","addFormGroup","group","removeFormGroup","getFormGroup","updateModel","onSubmit","$event","onReset","resetForm","pop","outputs","AbstractFormGroupDirective","_checkParentType","modelParentException","formGroupNameException","missingNameException","modelGroupParentException","modelGroupProvider","NgModelGroup","formControlBinding$1","NgModel","resolvedPromise","_registered","update","_checkForErrors","_setUpControl","_updateDisabled","model","_isStandalone","_setUpStandalone","standalone","_checkName","disabledValue","ɵNgNoValidate","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","RADIO_VALUE_ACCESSOR","RadioControlValueAccessor","throwNameError","RadioControlRegistryModule","RadioControlRegistry","_accessors","accessor","select","_isSameGroup","fireUncheck","controlPair","_control","_registry","_state","_fn","formControlName","RANGE_VALUE_ACCESSOR","RangeValueAccessor","NG_MODEL_WITH_FORM_CONTROL_WARNING","formControlBinding","FormControlDirective","_ngModelWarningConfig","_isControlChanged","previousForm","previousValue","formDirectiveProvider","FormGroupDirective","_updateDomValue","_checkFormPresent","_updateValidators","_updateRegistrations","_oldForm","_setUpFormContainer","_cleanUpFormContainer","addFormArray","removeFormArray","getFormArray","oldCtrl","newCtrl","formGroupNameProvider","FormGroupName","_hasInvalidParent","formArrayNameProvider","FormArrayName","controlNameBinding","FormControlName","_added","SELECT_VALUE_ACCESSOR","SelectControlValueAccessor","_buildValueString$1","_extractId$1","valueString","_optionMap","_idCounter","_compareWith","compareWith","JSON","stringify","_getOptionId","_getOptionValue","_registerOption","has","NgSelectOption","_element","_select","ngValue","_setElementValue","SELECT_MULTIPLE_VALUE_ACCESSOR","SelectMultipleControlValueAccessor","_buildValueString","_extractId","HTMLCollection","optionSelectedStateSetter","ids","opt","_setSelected","selected","selectedOptions","val","_value","ɵNgSelectMultipleOption","toInteger","parseInt","toFloat","AbstractValidatorDirective","_validator","inputName","normalizeInput","createValidator","inputValue","MAX_VALIDATOR","MaxValidator","MIN_VALIDATOR","MinValidator","REQUIRED_VALIDATOR","RequiredValidator","CHECKBOX_REQUIRED_VALIDATOR","CheckboxRequiredValidator","_required","EMAIL_VALIDATOR","EmailValidator","MIN_LENGTH_VALIDATOR","MinLengthValidator","minlength","MAX_LENGTH_VALIDATOR","MaxLengthValidator","maxlength","PATTERN_VALIDATOR","PatternValidator","_createValidator","SHARED_FORM_DIRECTIVES","TEMPLATE_DRIVEN_DIRECTIVES","REACTIVE_DRIVEN_DIRECTIVES","ɵInternalFormsSharedModule","FormsModule","ReactiveFormsModule","withConfig","ngModule","useValue","warnOnNgModelWithFormControl","isAbstractControlOptions","FormBuilder","controlsConfig","_reduceControls","array","_createControl","controlConfig","VERSION","Component","ViewEncapsulation","ChangeDetectionStrategy","ViewChild","i2","mixinColor","mixinDisabled","mixinDisableRipple","MatRipple","MatRippleModule","MatCommonModule","ANIMATION_MODULE_TYPE","DEFAULT_ROUND_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","_MatButtonBase","MatButton","_focusMonitor","_animationMode","isRoundButton","_hasHostAttributes","isIconButton","attr","_getHostElement","color","focus","focusVia","_isRippleDisabled","disableRipple","attributes","attribute","hasAttribute","FocusMonitor","ɵcmp","inputs","encapsulation","None","changeDetection","OnPush","template","ripple","MatAnchor","focusMonitor","animationMode","_haltDisabledEvents","stopImmediatePropagation","tabIndex","MatButtonModule","i4","ObserversModule","i3","CommonModule","Attribute","ContentChild","ContentChildren","startWith","trigger","state","transition","animate","nextUniqueId$2","MAT_ERROR","MatError","ariaLive","matFormFieldAnimations","transitionMessages","opacity","MatFormFieldControl","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","nextUniqueId$1","_MAT_HINT","MatHint","MatLabel","MatPlaceholder","MAT_PREFIX","MatPrefix","MAT_SUFFIX","MatSuffix","floatingLabelScale","outlineGapPadding","_MatFormFieldBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","_changeDetectorRef","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_subscriptAnimationState","_hintLabel","_hintLabelId","_labelId","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","appearance","_hideRequiredMarker","hideRequiredMarker","_appearance","oldValue","_shouldAlwaysFloat","_canLabelFloat","hintLabel","_processHints","_floatLabel","markForCheck","_explicitFormFieldControl","_controlNonStatic","_controlStatic","getLabelId","_hasFloatingLabel","getConnectedOverlayOrigin","_connectionContainerRef","ngAfterContentInit","_validateControlChild","controlType","stateChanges","_validatePlaceholders","_syncDescribedByIds","ngControl","updateOutlineGap","_prefixChildren","_suffixChildren","_hintChildren","_errorChildren","ngAfterContentChecked","detectChanges","_shouldForward","prop","_hasPlaceholder","_placeholderChild","_hasLabel","_labelChildNonStatic","_labelChildStatic","_shouldLabelFloat","shouldLabelFloat","_hideControlPlaceholder","_getDisplayedMessages","errorState","_animateAndLockLabel","_label","_validateHints","startHint","endHint","hint","userAriaDescribedBy","find","error","setDescribedByIds","labelEl","textContent","_isAttachedToDOM","startWidth","gapWidth","startEls","gapEls","containerRect","containerStart","_getStartEnd","labelChildren","labelStart","labelWidth","offsetWidth","rect","getRootNode","rootNode","ChangeDetectorRef","NgIf","NgSwitch","NgSwitchCase","CdkObserveContent","animations","static","_inputContainerRef","descendants","MatFormFieldModule","getSupportedInputTypes","mixinErrorState","ErrorStateMatcher","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","_MatInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","MatInput","inputValueAccessor","ngZone","_formField","_uid","focused","autofilled","_disabled","_type","_readonly","_neverEmptyInputTypes","t","nodeName","_inputValueAccessor","_previousNativeValue","_isServer","_isNativeSelect","_isTextarea","_isInFormField","multiple","_id","_d","_validateType","readonly","updateErrorState","_dirtyCheckNativeValue","_dirtyCheckPlaceholder","_focusChanged","isFocused","_onInput","call","_previousPlaceholder","removeAttribute","_isNeverEmpty","_isBadInput","validity","badInput","empty","selectElement","firstOption","selectedIndex","label","onContainerClick","_isInlineSelect","size","errorStateMatcher","MatInputModule"],"sourceRoot":"webpack:///"}