{"version":3,"file":"src_app_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;AAG2D;;;AAMpD,MAAM,WAAW;IAEtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,GAAG,CAAC,GAAG;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAC7C,CAAC;IAED,IAAI,CAAC,GAAG,EAAC,IAAI;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAC,IAAI,CAAC;IACnD,CAAC;IAED,SAAS,CAAC,GAAG;QACT,OAAO,4EAAkB,GAAC,GAAG,GAAC,yEAAe,GAAC,GAAG,GAAC,GAAG,CAAE;IAC3D,CAAC;;sEAdU,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;ACNmC;AACE;;;AAEzD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAc;KAC1B;CACF,CAAC;AAMK,MAAM,kBAAkB;;oFAAlB,kBAAkB;+GAAlB,kBAAkB;mHAHpB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,kBAAkB,oFAFnB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;ACZuB;AACmB;AAEV;AACG;AACI;AACN;AAEG;AACH;AACO;AACc;;AAiBvE,MAAM,WAAW;;sEAAX,WAAW;wGAAX,WAAW;4GAdb;YACP,yDAAY;YACZ,uDAAW;YACX,+DAAmB;YACnB,kEAAgB;YAChB,mEAAc;YACd,yEAAiB;YACjB,qEAAe;YACf,qEAAkB;YAClB,0EAAiB;YACjB,yFAAwB;SACzB;mIAGU,WAAW,mBAFP,kEAAc,aAX3B,yDAAY;QACZ,uDAAW;QACX,+DAAmB;QACnB,kEAAgB;QAChB,mEAAc;QACd,yEAAiB;QACjB,qEAAe;QACf,qEAAkB;QAClB,0EAAiB;QACjB,yFAAwB;;;;;;;;;;;;;;;;;;;AChBrB,MAAM,YAAY;IAEvB,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAE1C,YAAY,CAAC,WAAuB;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,WAAW,CAAC;IACzD,CAAC;;wEANU,YAAY;6GAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOb,MAAM,cAAc;IAGzB,YAAoB,MAAc,EACxB,aAA2B,EAC3B,SAAsB,EACtB,aAAmC;QAHzB,WAAM,GAAN,MAAM,CAAQ;QACxB,kBAAa,GAAb,aAAa,CAAc;QAC3B,cAAS,GAAT,SAAS,CAAa;QACtB,kBAAa,GAAb,aAAa,CAAsB;QAJ7C,WAAM,GAAa,KAAK,CAAC;IAIwB,CAAC;IAIlD,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG;YAChB,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb,CAAC;IAEJ,CAAC;IACD,QAAQ,CAAC,SAAS;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CACxD,GAAG,CAAC,EAAE;YACJ,IAAI,GAAG,CAAC,eAAe,EAAE;gBACvB,oBAAoB;gBACpB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,cAAc;gBAC9B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACvC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBAC9C,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;gBAChC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;aAEtC;iBAAM;gBACL,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,uBAAuB;gBACvB,kDAAkD;gBAClD,oBAAoB;gBACpB,+BAA+B;gBAC/B,6BAA6B;gBAC7B,MAAM;gBACN,+CAA+C;aAChD;QACH,CAAC;QACD,gCAAgC;QAChC,GAAG,CAAC,EAAE;YACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE;gBACxC,QAAQ,EAAE,IAAI;gBACd,kBAAkB,EAAE,KAAK;gBACzB,gBAAgB,EAAE,KAAK;gBACvB,UAAU,EAAE,CAAC,uBAAuB,CAAC;aACtC,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC,CACF;IACH,CAAC;;4EArDU,cAAc;4GAAd,cAAc;;;;;;;QCd3B,yEAAwB;QACtB,yEAA0B;QACxB,6EAA8E;QAAjC,sRAAY,iBAAmB,IAAC;QAC3E,yEAAyB;QACvB,wEAAqB;QAAA,gEAAK;QAAA,4DAAK;QACjC,4DAAM;QACN,yEAAoB;QAClB,yEAAgB;QACd,oFAA8B;QAC5B,4EAAoG;QAA/B,6LAA8B;QAAnG,4DAAoG;QACtG,4DAAiB;QACjB,qFAA8B;QAC5B,6EACoC;QAAlC,gMAAiC;QADnC,4DACoC;QACtC,4DAAiB;QACnB,4DAAM;QACR,4DAAM;QACN,2EAAyF;QACvF,oFAAsE;QAAA,uEAAW;QAAA,4DAAe;QAChG,yEAA6B;QAAA,2EAAe;QAAA,4DAAI;QAClD,4DAAM;QACN,0EAAoB;QAClB,0EAAgB;QACd,8EAA0F;QAC1F,mEACA;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAM;QACR,4DAAO;QACT,4DAAM;QACR,4DAAM;;QArB2E,2DAA8B;QAA9B,yFAA8B;QAIjG,0DAAiC;QAAjC,4FAAiC;QAKT,0DAAuC;QAAvC,6IAAuC;QAK3D,0DAAmB;QAAnB,gFAAmB","sources":["./src/app/lib/http.Service.ts","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.service.ts","./src/app/login/login/login.component.ts","./src/app/login/login/login.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { loginModel } from '../Models/LoginModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  get(url) : Observable<any>{\r\n      return this.http.get(this.updataUrl(url))\r\n  }\r\n\r\n  post(url,body): Observable<any>{\r\n      return this.http.post(this.updataUrl(url),body)\r\n  }\r\n  \r\n  updataUrl(url) : string{\r\n      return environment.origin+'/'+environment.api+'/'+url ;\r\n  }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    LoginRoutingModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule\n  ],\n  declarations: [LoginComponent]\n})\nexport class LoginModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpService } from '../lib/http.Service';\nimport { loginModel } from '../Models/LoginModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private http: HttpService) { }\n\n  logInFormApi(loginDetail: loginModel): Observable<any> {\n    return this.http.post('user/Authenticate', loginDetail)\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { loginModel } from 'src/app/Models/LoginModel';\nimport { User } from 'src/app/Models/user/User';\nimport { TokenStorageService } from 'src/app/Services/token.storage.service';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss', './login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  user : User;\n  loader : boolean = false;\n  constructor(private router: Router,\n    private _loginService: LoginService,\n    private _snackBar: MatSnackBar,\n    private _tokenService : TokenStorageService) { }\n  loginModel: loginModel;\n  @ViewChild('loginForm') loginForm: NgForm;\n\n  ngOnInit() {\n    this.loginModel = {\n      email: \"\",\n      password: ''\n    };\n\n  }\n  onSubmit(loginForm) {\n    this.loader = true;\n\n    this._loginService.logInFormApi(this.loginModel).subscribe(\n      res => {\n        if (res.isAuthenticated) {\n          // Authenticate user\n          this.user = res.applicatonUser\n          this._tokenService.saveUser(this.user);\n          this._tokenService.saveToken(res.accessToken);\n          this._tokenService.isLoggedin();\n          this.loader = false;\n          this.router.navigate(['/dashboard']);\n          \n        } else {\n          this.loader = false;\n          // user isAuthenticated\n          // this._snackBar.open('Cannonball!!', 'Splash', {\n          //   duration: 2000,\n          //   horizontalPosition: 'end',\n          //   verticalPosition: 'top',\n          // });\n          // localStorage.setItem('isLoggedin', 'false');\n        }\n      },\n      // unAuthenticated user logined \n      err => {\n        this._snackBar.open(err.error.errors, '', {\n          duration: 2000,\n          horizontalPosition: 'end',\n          verticalPosition: 'top',\n          panelClass: [\"snackBar-custom-style\"]\n        });\n        this.loader = false;\n      }\n    )\n  }\n\n}\n\n","<div class=\"login-page\">\n  <div class=\"content px20\">\n    <form class=\"login-form\" #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit(loginForm)\">\n      <div class=\"text-center\">\n        <h2 class=\"app-name\">Login</h2>\n      </div>\n      <div fxLayout=\"row\">\n        <div fxFlexFill>\n          <mat-form-field class=\"w-100\">\n            <input matInput placeholder=\"Email\" required id=\"email\" name=\"email\" [(ngModel)]=\"loginModel.email\">\n          </mat-form-field>\n          <mat-form-field class=\"w-100\">\n            <input matInput type=\"password\" required placeholder=\"Password\" id=\"password\" name=\"password\"\n              [(ngModel)]=\"loginModel.password\">\n          </mat-form-field>\n        </div>\n      </div>\n      <div fxLayout=\"row\" fxLayoutAlign=\"space-between\" fxLayout.xs=\"column\" class=\"mt20 mb20\">\n        <mat-checkbox color=\"primary\" [ngStyle.xs]=\"{'margin-bottom.px': 10}\">Remember Me</mat-checkbox>\n        <a href=\"javascript:void(0)\">Forgot Password</a>\n      </div>\n      <div fxLayout=\"row\">\n        <div fxFlexFill>\n          <button [disabled]=\"loader\" type=\"submit\" mat-raised-button color=\"primary\" class=\"w-100\">\n          login\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>"],"names":[],"sourceRoot":"webpack:///"}